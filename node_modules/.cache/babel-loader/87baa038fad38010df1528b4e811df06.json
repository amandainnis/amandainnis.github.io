{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChart.js\";\nimport React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as priceJson from \"../../data/priceData.json\";\nimport * as indexJson from \"../../data/spyData.json\";\nexport default function LineChart() {\n  const lineChartData = [{\n    y2018: 36,\n    y2019: 56,\n    month: 1\n  }, {\n    y2018: 47,\n    y2019: 99,\n    month: 2\n  }, {\n    y2018: 80,\n    y2019: 105,\n    month: 3\n  }];\n  const chart = createRef();\n  const maxVal = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n\n  const _useState = useState(lineChartData),\n        _useState2 = _slicedToArray(_useState, 2),\n        chartData = _useState2[0],\n        setChartData = _useState2[1];\n\n  console.log(Object.keys(priceJson[\"Time Series (5min)\"])[0]);\n  console.log(Object.keys(priceJson[\"Time Series (5min)\"]).length);\n\n  function formatData() {\n    let arr = Object.keys(priceJson[\"Time Series (5min)\"]);\n    let tempArr = [];\n    let json = priceJson[\"Time Series (5min)\"];\n\n    for (let i = 0; i < arr.length; i++) {\n      tempArr.push({\n        date: arr[i],\n        price: json[arr[i]][\"4. close\"]\n      });\n    }\n\n    console.log(tempArr);\n  }\n\n  formatData();\n\n  function numberFormatFn(d) {\n    return d;\n  }\n\n  function timeFormat(d) {\n    if (d == 1) {\n      return \"Jan\";\n    } else if (d == 2) {\n      return \"Feb\";\n    } else if (d == 3) {\n      return \"Mar\";\n    } else if (d == 4) {\n      return \"Apr\";\n    } else if (d == 5) {\n      return \"May\";\n    } else if (d == 6) {\n      return \"Jun\";\n    } else if (d == 7) {\n      return \"Jul\";\n    } else if (d == 8) {\n      return \"Aug\";\n    } else if (d == 9) {\n      return \"Sep\";\n    } else if (d == 10) {\n      return \"Oct\";\n    } else if (d == 11) {\n      return \"Nov\";\n    } else {\n      return \"Dec\";\n    }\n  }\n\n  function getCurrentMonth() {\n    const date = new Date();\n    const currentMonthNumber = date.getMonth() + 1; //console.log('i am current month number', currentMonthNumber);\n\n    return currentMonthNumber;\n  }\n\n  function findlastValidDataCurrentYear(currVal, nextVal, currentObj, lastValid, dataArraySetPoint) {\n    if (nextVal == null && currVal !== null) {\n      lastValid = currentObj; // console.log('nextVal == null && currVal !== null, i am currentObj', nextVal, currVal, currentObj)\n\n      return lastValid;\n    } else if (nextVal == null && currVal == null && lastValid == undefined) {\n      // console.log('nextVal == null && currVal == null && lastValid == undefined', nextVal, currVal, lastValid);\n      lastValid = dataArraySetPoint; //console.log('i am now defined', lastValid);\n\n      return lastValid;\n    } else {\n      // console.log('lastValid, nextVal, currVal, currentObj', lastValid, nextVal, currVal, currentObj)\n      lastValid = lastValid;\n      return lastValid;\n    }\n  }\n\n  function getYOYdiffValue(currYear, prevYear) {\n    return currYear == null || prevYear == null ? null : currYear - prevYear;\n  }\n\n  function getYOYdiffColor(YOY) {\n    if (YOY < 0) {\n      return \"YOYred\";\n    } else {\n      return \"YOYgreen\";\n    }\n  } // Math.min will assign null values to 0 so need to filter out null if want min to be actual min,\n  // but it may look better to have an actual zero\n\n\n  function getMaxVal(myData, yLineOne, yLineTwo) {\n    let tempArr = [];\n\n    for (let i = 0; i < myData.length; i++) {\n      tempArr.push(myData[i][yLineOne], myData[i][yLineTwo]);\n      if (myData[i][yLineOne] !== null) tempArr.push(myData[i][yLineOne]);\n      if (myData[i][yLineTwo] !== null) tempArr.push(myData[i][yLineTwo]);\n    }\n\n    let temp2018max = tempArr.reduce((a, b) => Math.max(a, b));\n    let temp2018min = tempArr.reduce((a, b) => Math.min(a, b));\n    return {\n      min: temp2018min,\n      max: temp2018max\n    };\n  }\n\n  function createChart(chartData, yLineOne, yLineTwo, numberFormatFn, xAxisKeyName) {\n    let lastValidDataCurrentYear; //let lastValidDataPreviousYear;\n\n    let YOYdiff;\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    let tempMinMax = getMaxVal(chartData, yLineOne, yLineTwo);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max;\n    let currentMonth = getCurrentMonth();\n    let margin = {\n      top: 20,\n      right: 60,\n      bottom: 0,\n      left: 10\n    }; //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n\n    let width = Number.isNaN(parseInt(d3.select(containerElement).style(\"width\"))) ? 0 : parseInt(d3.select(containerElement).style(\"width\")) - margin.left - margin.right;\n    let height = 220 - margin.top; // translates a function to d3, passes angular scope into d3\n    // tell format func that the function with \"this\" should be asscoiated with the currect ts component\n    //let bisectDate = d3.bisector((d) => timeFormat(d[xAxisKeyName])).left; // this would return the month, but we aren't using it right now\n\n    let justBisect = d3.bisector(d => d[xAxisKeyName]).left; //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n    let y = d3.scaleLinear().range([height, 0]); //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3.axisBottom(x) // .ticks(12)\n    .tickFormat(function (d) {\n      // console.log(d);\n      return timeFormat(d);\n    }).tickPadding(6);\n    let yAxis = d3.axisRight(y).tickFormat(d => {\n      return numberFormatFn(d);\n    }).ticks(6).tickPadding(6); //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    const CVprevYear = d3.line().defined(function (d) {\n      if (d[yLineOne] !== null) {\n        return d[yLineOne];\n      }\n    }).x(d => x(d[xAxisKeyName])).y(d => y(d[yLineOne]));\n    const CVcurrentYear = d3.line().defined(function (d) {\n      if (d[yLineTwo] !== null) {\n        return d[yLineTwo];\n      }\n    }).x(d => x(d[xAxisKeyName])).y(d => y(d[yLineTwo])); //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3.select(containerElement).append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", height + margin.top + margin.bottom + 40).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n    chartData.sort((a, b) => a[xAxisKeyName] - b[xAxisKeyName]); //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([parseInt(d3.min(chartData, d => d[xAxisKeyName])), parseInt(d3.max(chartData, d => d[xAxisKeyName]))]);\n    y.domain([minVal, maxVal]); //////////////////////// Append the lines / areas  ////////////////////////\n\n    CVsvg.append(\"path\").datum(chartData).attr(\"class\", \"CVprevYear line\").attr(\"d\", CVprevYear).transition().duration(500);\n    CVsvg.append(\"path\").datum(chartData).attr(\"class\", \"CVcurrentYear line\").attr(\"d\", CVcurrentYear).transition().duration(500); ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\").attr(\"class\", \"yAxis\").attr(\"transform\", \"translate(\" + (width + 6) + \",0)\").call(yAxis);\n    CVsvg.append(\"g\").attr(\"class\", \"xAxis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis); //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\").attr(\"class\", \"mouse-line x\").style(\"opacity\", 0.5).attr(\"y1\", 0).attr(\"y2\", height);\n    const marker = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker.append(\"circle\").attr(\"class\", \"line-marker CVprevYear\").transition().duration(500).attr(\"r\", 5);\n    const marker2 = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker2.append(\"circle\").attr(\"class\", \"line-marker CVcurrentYear\").transition().duration(500).attr(\"r\", 5); //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3.select(containerElement).append(\"div\").attr(\"class\", \"tooltipDiv\");\n    const dateContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    dateContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"Month\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const CVprevYearTextContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    CVprevYearTextContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"2018\");\n    CVprevYearTextContainer.append(\"div\").attr(\"class\", \"dot CVprevYear\");\n    const CVprevYearText = CVprevYearTextContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const CVcurrentYearTextContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    CVcurrentYearTextContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"2019\");\n    CVcurrentYearTextContainer.append(\"div\").attr(\"class\", \"dot CVcurrentYear\");\n    const CVcurrentYearText = CVcurrentYearTextContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const YOYContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    YOYContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"YOY\");\n    const YOYText = YOYContainer.append(\"div\"); //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\").on(\"mouseover\", () => {\n      lineTrace.style(\"display\", null);\n      d3.select(\".mouse-line\").style(\"opacity\", \"1\");\n      d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n    }); // .on(\"mousemove\", () => {\n    //   let xy = d3.mouse(d3.event.currentTarget);\n    //   // let x0 = timeFormat(x.invert(xy[0]));\n    //   // let mouseIndex = bisectDate(chartData, x0, 1);\n    //   let x0 = x.invert(xy[0]);\n    //   let mouseIndex = justBisect(chartData, x0, 1);\n    //   let d0 = chartData[mouseIndex - 1];\n    //   let d1 = chartData[mouseIndex];\n    //   // lastValidDataPreviousYear = findlastValidDataCurrentYear(d0[yLineOne], d1[yLineOne], d0, lastValidDataPreviousYear, chartData[currentMonth - 1]);\n    //   // console.log('i am x0, d0[xAxisKeyName], d1,', x0, d0[xAxisKeyName], d1)\n    //   lastValidDataCurrentYear = findlastValidDataCurrentYear(\n    //     d0[yLineTwo],\n    //     d1[yLineTwo],\n    //     d0,\n    //     lastValidDataCurrentYear,\n    //     chartData[currentMonth - 1]\n    //   );\n    //   // console.log('i am x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear', x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear)\n    //   let d;\n    //   if (d1 !== undefined) {\n    //     d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n    //     // d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n    //   } else {\n    //     d = d0;\n    //   }\n    //   lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n    //   marker.attr(\n    //     \"transform\",\n    //     \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    //   );\n    //   // marker.attr('transform', d[yLineOne] !== null ? 'translate(' + x(d[xAxisKeyName]) + ',' + y(d[yLineOne]) + ')' : 'translate(' + x(lastValidDataPreviousYear[xAxisKeyName]) + ',' + y(lastValidDataPreviousYear[yLineOne]) + ')');\n    //   marker2.attr(\n    //     \"transform\",\n    //     d[yLineTwo] !== null\n    //       ? \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n    //       : \"translate(\" +\n    //           x(lastValidDataCurrentYear[xAxisKeyName]) +\n    //           \",\" +\n    //           y(lastValidDataCurrentYear[yLineTwo]) +\n    //           \")\"\n    //   );\n    //   YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n    //   let YOYdiffColor = getYOYdiffColor(YOYdiff);\n    //   // (d[yLineTwo] == null) ? YOYdiff = null : YOYdiff = numberFormatFn(d[yLineTwo] - d[yLineOne]);\n    //   let l1text = d[yLineOne] !== null ? numberFormatFn(d[yLineOne]) : \"\";\n    //   let l2text = d[yLineTwo] !== null ? numberFormatFn(d[yLineTwo]) : \"\";\n    //   YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n    //   CVprevYearText.text(l1text);\n    //   CVcurrentYearText.text(l2text);\n    //   dateText.text(timeFormat(d[xAxisKeyName]));\n    //   YOYText.text(YOYdiff);\n    //   YOYText.attr(\"class\", YOYdiffColor);\n    //   d3.select(\".mouse-line.x\").attr(\"y2\", height);\n    // })\n    // .attr(\"class\", \"totalRect\")\n    // .attr(\"fill\", \"none\")\n    // .attr(\"x\", 0)\n    // .attr(\"pointer-events\", \"all\")\n    // .attr(\"width\", width)\n    // .attr(\"transform\", \"translate(0,0)\")\n    // .attr(\"height\", height)\n    // .transition()\n    // .duration(500);\n    //////////////////////// Set the data on load ////////////////////////\n    // d3.set().add(chartData[currentMonth - 1]);\n    // let d = chartData[currentMonth - 1];\n    // lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n    // marker.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    // );\n    // marker2.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n    // );\n    // YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n    // let YOYdiffColor = getYOYdiffColor(YOYdiff);\n    // CVprevYearText.text(numberFormatFn(d[yLineOne]));\n    // CVcurrentYearText.text(numberFormatFn(d[yLineTwo]));\n    // dateText.text(timeFormat(d[xAxisKeyName]));\n    // YOYText.text(numberFormatFn(YOYdiff));\n    // YOYText.attr(\"class\", YOYdiffColor);\n    // d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, \"y2018\", \"y2019\", numberFormatFn, \"month\");\n  }, []);\n  return React.createElement(\"div\", {\n    ref: chart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChart.js"],"names":["React","createRef","useState","useRef","useEffect","d3","priceJson","indexJson","LineChart","lineChartData","y2018","y2019","month","chart","maxVal","defaultHeight","containerElement","chartData","setChartData","console","log","Object","keys","length","formatData","arr","tempArr","json","i","push","date","price","numberFormatFn","d","timeFormat","getCurrentMonth","Date","currentMonthNumber","getMonth","findlastValidDataCurrentYear","currVal","nextVal","currentObj","lastValid","dataArraySetPoint","undefined","getYOYdiffValue","currYear","prevYear","getYOYdiffColor","YOY","getMaxVal","myData","yLineOne","yLineTwo","temp2018max","reduce","a","b","Math","max","temp2018min","min","createChart","xAxisKeyName","lastValidDataCurrentYear","YOYdiff","current","innerHTML","tempMinMax","minVal","currentMonth","margin","top","right","bottom","left","width","Number","isNaN","parseInt","select","style","height","justBisect","bisector","x","scaleLinear","range","y","xAxis","axisBottom","tickFormat","tickPadding","yAxis","axisRight","ticks","CVprevYear","line","defined","CVcurrentYear","CVsvg","append","attr","forEach","sort","domain","datum","transition","duration","call","lineTrace","marker","marker2","tooltipDiv","dateContainer","text","dateText","CVprevYearTextContainer","CVprevYearText","CVcurrentYearTextContainer","CVcurrentYearText","YOYContainer","YOYText","on","selectAll"],"mappings":"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","sourcesContent":["import React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as priceJson from \"../../data/priceData.json\";\nimport * as indexJson from \"../../data/spyData.json\";\n\nexport default function LineChart() {\n  const lineChartData = [\n    { y2018: 36, y2019: 56, month: 1 },\n    { y2018: 47, y2019: 99, month: 2 },\n    { y2018: 80, y2019: 105, month: 3 }\n  ];\n  const chart = createRef();\n\n  const maxVal = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n\n  const [chartData, setChartData] = useState(lineChartData);\n\n  console.log(Object.keys(priceJson[\"Time Series (5min)\"])[0]);\n  console.log(Object.keys(priceJson[\"Time Series (5min)\"]).length);\n\n  function formatData() {\n    let arr = Object.keys(priceJson[\"Time Series (5min)\"]);\n    let tempArr = [];\n    let json = priceJson[\"Time Series (5min)\"];\n    for (let i = 0; i < arr.length; i++) {\n      tempArr.push({\n        date: arr[i],\n        price: json[arr[i]][\"4. close\"]\n      });\n    }\n    console.log(tempArr);\n  }\n  formatData();\n  function numberFormatFn(d) {\n    return d;\n  }\n  function timeFormat(d) {\n    if (d == 1) {\n      return \"Jan\";\n    } else if (d == 2) {\n      return \"Feb\";\n    } else if (d == 3) {\n      return \"Mar\";\n    } else if (d == 4) {\n      return \"Apr\";\n    } else if (d == 5) {\n      return \"May\";\n    } else if (d == 6) {\n      return \"Jun\";\n    } else if (d == 7) {\n      return \"Jul\";\n    } else if (d == 8) {\n      return \"Aug\";\n    } else if (d == 9) {\n      return \"Sep\";\n    } else if (d == 10) {\n      return \"Oct\";\n    } else if (d == 11) {\n      return \"Nov\";\n    } else {\n      return \"Dec\";\n    }\n  }\n\n  function getCurrentMonth() {\n    const date = new Date();\n    const currentMonthNumber = date.getMonth() + 1;\n    //console.log('i am current month number', currentMonthNumber);\n    return currentMonthNumber;\n  }\n\n  function findlastValidDataCurrentYear(\n    currVal,\n    nextVal,\n    currentObj,\n    lastValid,\n    dataArraySetPoint\n  ) {\n    if (nextVal == null && currVal !== null) {\n      lastValid = currentObj;\n      // console.log('nextVal == null && currVal !== null, i am currentObj', nextVal, currVal, currentObj)\n      return lastValid;\n    } else if (nextVal == null && currVal == null && lastValid == undefined) {\n      // console.log('nextVal == null && currVal == null && lastValid == undefined', nextVal, currVal, lastValid);\n      lastValid = dataArraySetPoint;\n      //console.log('i am now defined', lastValid);\n      return lastValid;\n    } else {\n      // console.log('lastValid, nextVal, currVal, currentObj', lastValid, nextVal, currVal, currentObj)\n      lastValid = lastValid;\n      return lastValid;\n    }\n  }\n\n  function getYOYdiffValue(currYear, prevYear) {\n    return currYear == null || prevYear == null ? null : currYear - prevYear;\n  }\n  function getYOYdiffColor(YOY) {\n    if (YOY < 0) {\n      return \"YOYred\";\n    } else {\n      return \"YOYgreen\";\n    }\n  }\n\n  // Math.min will assign null values to 0 so need to filter out null if want min to be actual min,\n  // but it may look better to have an actual zero\n  function getMaxVal(myData, yLineOne, yLineTwo) {\n    let tempArr = [];\n    for (let i = 0; i < myData.length; i++) {\n      tempArr.push(myData[i][yLineOne], myData[i][yLineTwo]);\n      if (myData[i][yLineOne] !== null) tempArr.push(myData[i][yLineOne]);\n      if (myData[i][yLineTwo] !== null) tempArr.push(myData[i][yLineTwo]);\n    }\n    let temp2018max = tempArr.reduce((a, b) => Math.max(a, b));\n    let temp2018min = tempArr.reduce((a, b) => Math.min(a, b));\n    return { min: temp2018min, max: temp2018max };\n  }\n\n  function createChart(\n    chartData,\n    yLineOne,\n    yLineTwo,\n    numberFormatFn,\n    xAxisKeyName\n  ) {\n    let lastValidDataCurrentYear;\n    //let lastValidDataPreviousYear;\n    let YOYdiff;\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    let tempMinMax = getMaxVal(chartData, yLineOne, yLineTwo);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max;\n    let currentMonth = getCurrentMonth();\n    let margin = { top: 20, right: 60, bottom: 0, left: 10 };\n    //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n    let width = Number.isNaN(\n      parseInt(d3.select(containerElement).style(\"width\"))\n    )\n      ? 0\n      : parseInt(d3.select(containerElement).style(\"width\")) -\n        margin.left -\n        margin.right;\n    let height = 220 - margin.top;\n    // translates a function to d3, passes angular scope into d3\n    // tell format func that the function with \"this\" should be asscoiated with the currect ts component\n\n    //let bisectDate = d3.bisector((d) => timeFormat(d[xAxisKeyName])).left; // this would return the month, but we aren't using it right now\n    let justBisect = d3.bisector(d => d[xAxisKeyName]).left;\n\n    //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n\n    let y = d3.scaleLinear().range([height, 0]);\n\n    //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3\n      .axisBottom(x)\n      // .ticks(12)\n      .tickFormat(function(d) {\n        // console.log(d);\n        return timeFormat(d);\n      })\n      .tickPadding(6);\n\n    let yAxis = d3\n      .axisRight(y)\n      .tickFormat(d => {\n        return numberFormatFn(d);\n      })\n      .ticks(6)\n      .tickPadding(6);\n\n    //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    const CVprevYear = d3\n      .line()\n      .defined(function(d) {\n        if (d[yLineOne] !== null) {\n          return d[yLineOne];\n        }\n      })\n      .x(d => x(d[xAxisKeyName]))\n      .y(d => y(d[yLineOne]));\n\n    const CVcurrentYear = d3\n      .line()\n      .defined(function(d) {\n        if (d[yLineTwo] !== null) {\n          return d[yLineTwo];\n        }\n      })\n      .x(d => x(d[xAxisKeyName]))\n      .y(d => y(d[yLineTwo]));\n\n    //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3\n      .select(containerElement)\n      .append(\"svg\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", height + margin.top + margin.bottom + 40)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n\n    chartData.sort((a, b) => a[xAxisKeyName] - b[xAxisKeyName]);\n\n    //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([\n      parseInt(d3.min(chartData, d => d[xAxisKeyName])),\n      parseInt(d3.max(chartData, d => d[xAxisKeyName]))\n    ]);\n    y.domain([minVal, maxVal]);\n\n    //////////////////////// Append the lines / areas  ////////////////////////\n\n    CVsvg.append(\"path\")\n      .datum(chartData)\n      .attr(\"class\", \"CVprevYear line\")\n      .attr(\"d\", CVprevYear)\n      .transition()\n      .duration(500);\n    CVsvg.append(\"path\")\n      .datum(chartData)\n      .attr(\"class\", \"CVcurrentYear line\")\n      .attr(\"d\", CVcurrentYear)\n      .transition()\n      .duration(500);\n\n    ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n      .attr(\"transform\", \"translate(\" + (width + 6) + \",0)\")\n      .call(yAxis);\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"xAxis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\")\n      .attr(\"class\", \"mouse-line x\")\n      .style(\"opacity\", 0.5)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", height);\n\n    const marker = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n\n    marker\n      .append(\"circle\")\n      .attr(\"class\", \"line-marker CVprevYear\")\n      .transition()\n      .duration(500)\n      .attr(\"r\", 5);\n\n    const marker2 = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker2\n      .append(\"circle\")\n      .attr(\"class\", \"line-marker CVcurrentYear\")\n      .transition()\n      .duration(500)\n      .attr(\"r\", 5);\n\n    //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3\n      .select(containerElement)\n      .append(\"div\")\n      .attr(\"class\", \"tooltipDiv\");\n    const dateContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    dateContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"Month\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const CVprevYearTextContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    CVprevYearTextContainer.append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"2018\");\n    CVprevYearTextContainer.append(\"div\").attr(\"class\", \"dot CVprevYear\");\n\n    const CVprevYearText = CVprevYearTextContainer.append(\"div\").attr(\n      \"class\",\n      \"value-text\"\n    );\n    const CVcurrentYearTextContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    CVcurrentYearTextContainer.append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"2019\");\n    CVcurrentYearTextContainer.append(\"div\").attr(\"class\", \"dot CVcurrentYear\");\n\n    const CVcurrentYearText = CVcurrentYearTextContainer.append(\"div\").attr(\n      \"class\",\n      \"value-text\"\n    );\n    const YOYContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    YOYContainer.append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"YOY\");\n    const YOYText = YOYContainer.append(\"div\");\n\n    //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\").on(\"mouseover\", () => {\n      lineTrace.style(\"display\", null);\n      d3.select(\".mouse-line\").style(\"opacity\", \"1\");\n      d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n    });\n    // .on(\"mousemove\", () => {\n    //   let xy = d3.mouse(d3.event.currentTarget);\n    //   // let x0 = timeFormat(x.invert(xy[0]));\n    //   // let mouseIndex = bisectDate(chartData, x0, 1);\n    //   let x0 = x.invert(xy[0]);\n    //   let mouseIndex = justBisect(chartData, x0, 1);\n    //   let d0 = chartData[mouseIndex - 1];\n    //   let d1 = chartData[mouseIndex];\n    //   // lastValidDataPreviousYear = findlastValidDataCurrentYear(d0[yLineOne], d1[yLineOne], d0, lastValidDataPreviousYear, chartData[currentMonth - 1]);\n    //   // console.log('i am x0, d0[xAxisKeyName], d1,', x0, d0[xAxisKeyName], d1)\n    //   lastValidDataCurrentYear = findlastValidDataCurrentYear(\n    //     d0[yLineTwo],\n    //     d1[yLineTwo],\n    //     d0,\n    //     lastValidDataCurrentYear,\n    //     chartData[currentMonth - 1]\n    //   );\n    //   // console.log('i am x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear', x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear)\n    //   let d;\n    //   if (d1 !== undefined) {\n    //     d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n    //     // d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n    //   } else {\n    //     d = d0;\n    //   }\n\n    //   lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n    //   marker.attr(\n    //     \"transform\",\n    //     \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    //   );\n    //   // marker.attr('transform', d[yLineOne] !== null ? 'translate(' + x(d[xAxisKeyName]) + ',' + y(d[yLineOne]) + ')' : 'translate(' + x(lastValidDataPreviousYear[xAxisKeyName]) + ',' + y(lastValidDataPreviousYear[yLineOne]) + ')');\n\n    //   marker2.attr(\n    //     \"transform\",\n    //     d[yLineTwo] !== null\n    //       ? \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n    //       : \"translate(\" +\n    //           x(lastValidDataCurrentYear[xAxisKeyName]) +\n    //           \",\" +\n    //           y(lastValidDataCurrentYear[yLineTwo]) +\n    //           \")\"\n    //   );\n\n    //   YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n    //   let YOYdiffColor = getYOYdiffColor(YOYdiff);\n    //   // (d[yLineTwo] == null) ? YOYdiff = null : YOYdiff = numberFormatFn(d[yLineTwo] - d[yLineOne]);\n    //   let l1text = d[yLineOne] !== null ? numberFormatFn(d[yLineOne]) : \"\";\n    //   let l2text = d[yLineTwo] !== null ? numberFormatFn(d[yLineTwo]) : \"\";\n    //   YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n    //   CVprevYearText.text(l1text);\n    //   CVcurrentYearText.text(l2text);\n    //   dateText.text(timeFormat(d[xAxisKeyName]));\n    //   YOYText.text(YOYdiff);\n    //   YOYText.attr(\"class\", YOYdiffColor);\n\n    //   d3.select(\".mouse-line.x\").attr(\"y2\", height);\n    // })\n    // .attr(\"class\", \"totalRect\")\n    // .attr(\"fill\", \"none\")\n    // .attr(\"x\", 0)\n    // .attr(\"pointer-events\", \"all\")\n    // .attr(\"width\", width)\n    // .attr(\"transform\", \"translate(0,0)\")\n    // .attr(\"height\", height)\n    // .transition()\n    // .duration(500);\n\n    //////////////////////// Set the data on load ////////////////////////\n\n    // d3.set().add(chartData[currentMonth - 1]);\n    // let d = chartData[currentMonth - 1];\n    // lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n\n    // marker.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    // );\n    // marker2.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n    // );\n\n    // YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n    // let YOYdiffColor = getYOYdiffColor(YOYdiff);\n\n    // CVprevYearText.text(numberFormatFn(d[yLineOne]));\n    // CVcurrentYearText.text(numberFormatFn(d[yLineTwo]));\n    // dateText.text(timeFormat(d[xAxisKeyName]));\n    // YOYText.text(numberFormatFn(YOYdiff));\n    // YOYText.attr(\"class\", YOYdiffColor);\n\n    // d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, \"y2018\", \"y2019\", numberFormatFn, \"month\");\n  }, []);\n\n  return <div ref={chart}></div>;\n}\n"]},"metadata":{},"sourceType":"module"}