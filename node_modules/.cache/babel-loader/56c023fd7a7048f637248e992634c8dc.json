{"ast":null,"code":"var _jsxFileName = \"/Users/amandainnis/ReactProjects/board-app/src/App.js\";\nimport React from \"react\";\nimport Game from \"./components/game\";\nimport \"./App.scss\";\nimport Nav from \"./components/nav\";\nimport { DARK } from \"./global-styles/theme/dark\";\nimport { LIGHT } from \"./global-styles/theme/light\";\nconst darkTheme = DARK;\nconst lightTheme = LIGHT;\n\nclass App extends React.Component {\n  // const [currentTheme, setTheme] = React.useState(\"light\");\n  // const onClick = () => {\n  //   const nextTheme = currentTheme === \"light\" ? \"dark\" : \"light\";\n  //   setTheme(nextTheme);\n  // };\n  constructor(props) {\n    super(props);\n    this.defaultTheme = \"light\";\n    this.state = {\n      theme: \"light\"\n    };\n    this.setTheme = this.setTheme.bind(this);\n  } // getActiveTheme() {\n  //   let current;\n  //   const temp =\n  //     localStorage.getItem(\"theme\") === null ||\n  //     localStorage.getItem(\"theme\") === undefined\n  //       ? this.defaultTheme\n  //       : localStorage.getItem(\"theme\");\n  //   if (temp === \"light\") {\n  //     current = this.light;\n  //     this.setTheme(\"light\");\n  //   } else {\n  //     current = this.dark;\n  //     this.setTheme(\"dark\");\n  //   }\n  //   console.log(current);\n  //   return current;\n  // }\n  // generateVars(theme) {\n  //   Object.keys(theme.properties).forEach(property => {\n  //     document.documentElement.style.setProperty(\n  //       property,\n  //       theme.properties[property]\n  //     );\n  //   });\n  // }\n  // generateTheme(theme) {\n  //   const current = theme;\n  //   console.log(\"i am active theme\", theme);\n  //   if (theme === \"light\") {\n  //     // Object.assign(this.light.properties, this.appLight.properties);\n  //     this.generateVars(current);\n  //   } else {\n  //     // Object.assign(this.dark.properties, this.appDark.properties);\n  //     this.generateVars(current);\n  //   }\n  // }\n\n\n  setTheme() {\n    const theme = this.state.theme === \"light\" ? \"dark\" : \"light\"; // console.log(theme);\n    // console.log(this.document.getElementByTagName(\"html\"));\n    // document.documentElement.classList.add(\"color-theme-in-transition\");\n\n    this.setState({\n      theme\n    });\n    localStorage.setItem(\"theme\", theme); // this.document.querySelector(\"html\").className = \"theme-\" + theme;\n\n    if (theme === \"light\") {\n      console.log(\"yo, im light\"); // this.generateTheme(this.light);\n    } else {\n      console.log(\"yo, im dark\"); // this.generateTheme(this.dark);\n    }\n  }\n\n  render() {\n    const name = \"Enzo\";\n    const date = new Date();\n    const hours = date.getHours();\n    let timeOfDay;\n\n    if (date < 12) {\n      timeOfDay = \"am\";\n    }\n\n    const status = \"\".concat(this.state.theme);\n    return React.createElement(\"div\", {\n      className: \"theme-\" + status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status inner-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, status), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inner-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Board Game\"), React.createElement(Game, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"to do\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \"to do\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \"to do\"))) // <div>\n    //   <Nav />\n    //   <div className=\"inner-body\">\n    //     <h1>Board Game for {`my baby ${name}`}</h1>\n    //     <Game />\n    //     <div>\n    //       <input type=\"checkbox\"></input>to do\n    //     </div>\n    //     <div>\n    //       <input type=\"checkbox\"></input>to do\n    //     </div>\n    //     <div>\n    //       <input type=\"checkbox\"></input>to do\n    //     </div>\n    //   </div>\n    // </div>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/board-app/src/App.js"],"names":["React","Game","Nav","DARK","LIGHT","darkTheme","lightTheme","App","Component","constructor","props","defaultTheme","state","theme","setTheme","bind","setState","localStorage","setItem","console","log","render","name","date","Date","hours","getHours","timeOfDay","status"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Game from \"./components/game\";\nimport \"./App.scss\";\nimport Nav from \"./components/nav\";\nimport { DARK } from \"./global-styles/theme/dark\";\nimport { LIGHT } from \"./global-styles/theme/light\";\n\nconst darkTheme = DARK;\nconst lightTheme = LIGHT;\nclass App extends React.Component {\n  // const [currentTheme, setTheme] = React.useState(\"light\");\n  // const onClick = () => {\n  //   const nextTheme = currentTheme === \"light\" ? \"dark\" : \"light\";\n  //   setTheme(nextTheme);\n  // };\n  defaultTheme = \"light\";\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"light\"\n    };\n    this.setTheme = this.setTheme.bind(this);\n  }\n  // getActiveTheme() {\n  //   let current;\n  //   const temp =\n  //     localStorage.getItem(\"theme\") === null ||\n  //     localStorage.getItem(\"theme\") === undefined\n  //       ? this.defaultTheme\n  //       : localStorage.getItem(\"theme\");\n  //   if (temp === \"light\") {\n  //     current = this.light;\n  //     this.setTheme(\"light\");\n  //   } else {\n  //     current = this.dark;\n  //     this.setTheme(\"dark\");\n  //   }\n  //   console.log(current);\n  //   return current;\n  // }\n  // generateVars(theme) {\n  //   Object.keys(theme.properties).forEach(property => {\n  //     document.documentElement.style.setProperty(\n  //       property,\n  //       theme.properties[property]\n  //     );\n  //   });\n  // }\n  // generateTheme(theme) {\n  //   const current = theme;\n  //   console.log(\"i am active theme\", theme);\n  //   if (theme === \"light\") {\n  //     // Object.assign(this.light.properties, this.appLight.properties);\n  //     this.generateVars(current);\n  //   } else {\n  //     // Object.assign(this.dark.properties, this.appDark.properties);\n  //     this.generateVars(current);\n  //   }\n  // }\n  setTheme() {\n    const theme = this.state.theme === \"light\" ? \"dark\" : \"light\";\n    // console.log(theme);\n    // console.log(this.document.getElementByTagName(\"html\"));\n    // document.documentElement.classList.add(\"color-theme-in-transition\");\n    this.setState({ theme });\n    localStorage.setItem(\"theme\", theme);\n    // this.document.querySelector(\"html\").className = \"theme-\" + theme;\n    if (theme === \"light\") {\n      console.log(\"yo, im light\");\n      // this.generateTheme(this.light);\n    } else {\n      console.log(\"yo, im dark\");\n      // this.generateTheme(this.dark);\n    }\n  }\n  render() {\n    const name = \"Enzo\";\n    const date = new Date();\n    const hours = date.getHours();\n    let timeOfDay;\n    if (date < 12) {\n      timeOfDay = \"am\";\n    }\n    const status = `${this.state.theme}`;\n    return (\n      <div className={\"theme-\" + status}>\n        {/* <h1>{currentTheme === \"light\" ? \"Light theme\" : \"Dark theme\"}</h1> */}\n        {/* <button onClick={onClick}>Toggle theme</button> */}\n        <div className=\"status inner-body\">{status}</div>\n        <Nav />\n        <div className=\"inner-body\">\n          <h1>Board Game</h1>\n          <Game />\n          <div>\n            <input type=\"checkbox\"></input>to do\n          </div>\n          <div>\n            <input type=\"checkbox\"></input>to do\n          </div>\n          <div>\n            <input type=\"checkbox\"></input>to do\n          </div>\n        </div>\n      </div>\n      // <div>\n      //   <Nav />\n      //   <div className=\"inner-body\">\n      //     <h1>Board Game for {`my baby ${name}`}</h1>\n      //     <Game />\n      //     <div>\n      //       <input type=\"checkbox\"></input>to do\n      //     </div>\n      //     <div>\n      //       <input type=\"checkbox\"></input>to do\n      //     </div>\n      //     <div>\n      //       <input type=\"checkbox\"></input>to do\n      //     </div>\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}