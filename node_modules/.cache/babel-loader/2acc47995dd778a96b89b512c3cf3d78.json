{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/crb/CRBCard.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport IsLoading from \"../reusable/IsLoading\";\nimport * as Common from \"../reusable/common\";\nimport StockData from \"../../data/stock_data\";\n\nconst imgCRB = require(\"../../assets/images/crb-img.png\");\n\nconst data = {\n  id: 3,\n  img: imgCRB,\n  title: \"CRB Pricer\",\n  subtitle: \"Central Risk Book Pricing and Trade Execution\",\n  blurb: [\"\"],\n  bkgd: \"var(--crb-bkgd)\"\n};\nconst allTickers = StockData.slice();\n\nfunction CRBCard() {\n  const _isMounted = false;\n  const tickerInputRef = React.createRef();\n  const ddRef = React.createRef();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        price = _useState2[0],\n        setPrice = _useState2[1];\n\n  const _useState3 = useState(\"Amazon.com\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tickerCompany = _useState4[0],\n        setTickerCompany = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        ticker = _useState6[0],\n        setTicker = _useState6[1];\n\n  const _useState7 = useState(\"AMZN\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        tickerInput = _useState8[0],\n        setTickerInput = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTicker = _useState10[0],\n        setSelectedTicker = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        loading = _useState12[0],\n        setLoading = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        tickerDDVisible = _useState14[0],\n        setTickerDDVisible = _useState14[1];\n\n  const _useState15 = useState(StockData),\n        _useState16 = _slicedToArray(_useState15, 2),\n        tickerDDReservoir = _useState16[0],\n        setTickerDDReservoir = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        tickerDDFiltered = _useState18[0],\n        setTickerDDFiltered = _useState18[1];\n\n  const getTickerURL = ticker => \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(ticker, \"&interval=5min&outputsize=full&apikey=NKT90SOYWKFBP04F\");\n\n  function fetchTicker(ticker) {\n    return fetch(getTickerURL(ticker)).then(res => {\n      // console.log(res);\n      if (!res.ok) {\n        throw Error(\"sadface, the res doesnt want to be our friend, but dont feel bad.  btw im middleware\");\n      } // console.log(res);\n\n\n      return res;\n    }).then(res => // this is the promise so don't have a return statement, it will be if and when  its ready\n    // better with es6\n    // console.log(res.json())\n    res.json()); // .then(res => enzo = res);\n  }\n\n  function resolveFetchedTicker(ticker, loadingBool) {\n    setIsLoading(true);\n    fetchTicker(ticker).then(res => {\n      let myKeys;\n\n      if (loadingBool) {\n        if (res !== undefined && res[\"Time Series (5min)\"] !== undefined) {\n          myKeys = Object.keys(res[\"Time Series (5min)\"]);\n          setIsLoading(false);\n          setPrice(res[\"Time Series (5min)\"][myKeys[0]][\"1. open\"]);\n        } else {\n          setIsLoading(false);\n          setTicker(\"Not a Ticker\");\n          setPrice(null);\n        }\n      }\n    });\n  }\n\n  function handleTickerInput(e) {\n    const tickerDDList = allTickers.slice();\n    let myResults;\n\n    if (e !== null || e !== \"\") {\n      myResults = tickerDDList.filter(function (myKey) {\n        return myKey.symbol.startsWith(e.target.value.toUpperCase());\n      }); // console.log(myResults);\n\n      setTickerInput(e.target.value);\n      setTickerDDFiltered(myResults);\n    }\n  }\n\n  function getPrice() {\n    const myTicker = tickerInput; // setState({ ticker: myTicker });\n\n    console.log(myTicker);\n    resolveFetchedTicker(myTicker, true);\n  }\n\n  function eraseInput() {\n    console.log(tickerInputRef);\n    tickerInputRef.current.focus();\n    setTickerInput(\"\");\n    setTickerCompany(\"\");\n    setPrice(\"\");\n  }\n\n  function handleKeyUp(e) {\n    console.log(e.which);\n    setTickerDDVisible(true); // if (e.which === 40) {\n    //   ddRef.current.children[ddListIndex].focus();\n    // }\n  }\n\n  function handleDDClick(val, name) {\n    console.log(val);\n    setTickerInput(val.symbol);\n    setTickerCompany(val.name);\n    setTickerDDVisible(false);\n  }\n\n  function handleArrowEvents(e) {\n    console.log(e, e.which);\n\n    if (e.which === 40) {} // console.log(state, ddRef);\n    // ddRef.current.children[0].focus();\n    // ddRef.current.children[ddListIndex].focus();\n    //       console.log(ddRef);\n    //   setState(prevState => {\n    //     return { ddListIndex: prevState + 1 };\n    //   });\n\n  }\n\n  useEffect(() => {\n    _isMounted = true;\n    resolveFetchedTicker(\"AMZN\", _isMounted);\n  }, []);\n  let myPrice = Math.round(price * 100) / 100;\n  myPrice = myPrice !== \"\" ? \"$\" + myPrice : \"\"; // this is a promise\n\n  return React.createElement(\"article\", {\n    className: \"portfolio-card\",\n    style: {\n      backgroundColor: data.bkgd\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(IsLoading, {\n    isLoading: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, data.title), React.createElement(\"h4\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, data.subtitle)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-row mt-3 crb-title-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ticker-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, tickerCompany), React.createElement(\"div\", {\n    className: \"price-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, myPrice)), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clearable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: tickerInputRef,\n    className: \"input-style crb-input\",\n    type: \"text\",\n    placeholder: \"ticker\",\n    name: \"tickerInput\",\n    autoComplete: \"off\",\n    value: tickerInput,\n    onChange: e => {\n      handleTickerInput(e);\n    },\n    onKeyUp: e => {\n      handleKeyUp(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), tickerInput !== \"\" ? React.createElement(\"span\", {\n    className: \"clearable-clear mdi mdi-close\",\n    onClick: () => {\n      eraseInput();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }) : null, tickerDDVisible && React.createElement(\"div\", {\n    className: \"dropdown-container crb\",\n    ref: ddRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, tickerDDFiltered !== \"\" && tickerDDFiltered.map((val, i) => {\n    return React.createElement(\"button\", {\n      key: i,\n      onClick: e => {\n        handleDDClick(val, \"tickerInput\");\n      },\n      value: selectedTicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, val.symbol, \" - \", val.name);\n  }))))), React.createElement(\"button\", {\n    onClick: () => {\n      getPrice();\n    },\n    className: \"var(--crb-button-type) large green mt-3 crb-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"price\")));\n}\n\nexport default CRBCard;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/crb/CRBCard.js"],"names":["React","useState","useRef","useEffect","IsLoading","Common","StockData","imgCRB","require","data","id","img","title","subtitle","blurb","bkgd","allTickers","slice","CRBCard","_isMounted","tickerInputRef","createRef","ddRef","price","setPrice","tickerCompany","setTickerCompany","ticker","setTicker","tickerInput","setTickerInput","selectedTicker","setSelectedTicker","loading","setLoading","tickerDDVisible","setTickerDDVisible","tickerDDReservoir","setTickerDDReservoir","tickerDDFiltered","setTickerDDFiltered","getTickerURL","fetchTicker","fetch","then","res","ok","Error","json","resolveFetchedTicker","loadingBool","setIsLoading","myKeys","undefined","Object","keys","handleTickerInput","e","tickerDDList","myResults","filter","myKey","symbol","startsWith","target","value","toUpperCase","getPrice","myTicker","console","log","eraseInput","current","focus","handleKeyUp","which","handleDDClick","val","name","handleArrowEvents","myPrice","Math","round","backgroundColor","isLoading","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport IsLoading from \"../reusable/IsLoading\";\nimport * as Common from \"../reusable/common\";\nimport StockData from \"../../data/stock_data\";\nconst imgCRB = require(\"../../assets/images/crb-img.png\");\nconst data = {\n  id: 3,\n  img: imgCRB,\n  title: \"CRB Pricer\",\n  subtitle: \"Central Risk Book Pricing and Trade Execution\",\n  blurb: [\"\"],\n  bkgd: \"var(--crb-bkgd)\"\n};\n\nconst allTickers = StockData.slice();\nfunction CRBCard() {\n  const _isMounted = false;\n  const tickerInputRef = React.createRef();\n  const ddRef = React.createRef();\n  const [price, setPrice] = useState(0);\n  const [tickerCompany, setTickerCompany] = useState(\"Amazon.com\");\n  const [ticker, setTicker] = useState();\n\n  const [tickerInput, setTickerInput] = useState(\"AMZN\");\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [tickerDDVisible, setTickerDDVisible] = useState(false);\n  const [tickerDDReservoir, setTickerDDReservoir] = useState(StockData);\n  const [tickerDDFiltered, setTickerDDFiltered] = useState(null);\n\n  const getTickerURL = ticker =>\n    `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${ticker}&interval=5min&outputsize=full&apikey=NKT90SOYWKFBP04F`;\n\n  function fetchTicker(ticker) {\n    return fetch(getTickerURL(ticker))\n      .then(res => {\n        // console.log(res);\n        if (!res.ok) {\n          throw Error(\n            \"sadface, the res doesnt want to be our friend, but dont feel bad.  btw im middleware\"\n          );\n        }\n        // console.log(res);\n        return res;\n      })\n      .then(res =>\n        // this is the promise so don't have a return statement, it will be if and when  its ready\n        // better with es6\n        // console.log(res.json())\n        res.json()\n      );\n    // .then(res => enzo = res);\n  }\n  function resolveFetchedTicker(ticker, loadingBool) {\n    setIsLoading(true);\n    fetchTicker(ticker).then(res => {\n      let myKeys;\n      if (loadingBool) {\n        if (res !== undefined && res[\"Time Series (5min)\"] !== undefined) {\n          myKeys = Object.keys(res[\"Time Series (5min)\"]);\n          setIsLoading(false);\n          setPrice(res[\"Time Series (5min)\"][myKeys[0]][\"1. open\"]);\n        } else {\n          setIsLoading(false);\n          setTicker(\"Not a Ticker\");\n          setPrice(null);\n        }\n      }\n    });\n  }\n\n  function handleTickerInput(e) {\n    const tickerDDList = allTickers.slice();\n    let myResults;\n\n    if (e !== null || e !== \"\") {\n      myResults = tickerDDList.filter(function(myKey) {\n        return myKey.symbol.startsWith(e.target.value.toUpperCase());\n      });\n      // console.log(myResults);\n      setTickerInput(e.target.value);\n      setTickerDDFiltered(myResults);\n    }\n  }\n  function getPrice() {\n    const myTicker = tickerInput;\n    // setState({ ticker: myTicker });\n    console.log(myTicker);\n    resolveFetchedTicker(myTicker, true);\n  }\n  function eraseInput() {\n    console.log(tickerInputRef);\n    tickerInputRef.current.focus();\n    setTickerInput(\"\");\n    setTickerCompany(\"\");\n    setPrice(\"\");\n  }\n  function handleKeyUp(e) {\n    console.log(e.which);\n    setTickerDDVisible(true);\n\n    // if (e.which === 40) {\n    //   ddRef.current.children[ddListIndex].focus();\n    // }\n  }\n  function handleDDClick(val, name) {\n    console.log(val);\n    setTickerInput(val.symbol);\n    setTickerCompany(val.name);\n    setTickerDDVisible(false);\n  }\n  function handleArrowEvents(e) {\n    console.log(e, e.which);\n\n    if (e.which === 40) {\n      // console.log(state, ddRef);\n      // ddRef.current.children[0].focus();\n      // ddRef.current.children[ddListIndex].focus();\n    }\n    //       console.log(ddRef);\n    //   setState(prevState => {\n    //     return { ddListIndex: prevState + 1 };\n    //   });\n  }\n  useEffect(() => {\n    _isMounted = true;\n    resolveFetchedTicker(\"AMZN\", _isMounted);\n  }, []);\n\n  let myPrice = Math.round(price * 100) / 100;\n  myPrice = myPrice !== \"\" ? \"$\" + myPrice : \"\";\n\n  // this is a promise\n\n  return (\n    <article className=\"portfolio-card\" style={{ backgroundColor: data.bkgd }}>\n      <IsLoading isLoading={isLoading}></IsLoading>\n      <div className=\"text-section\">\n        <h1 className=\"title\">{data.title}</h1>\n        <h4 className=\"subtitle\">{data.subtitle}</h4>\n      </div>\n      <div>\n        <div className=\"flex-row mt-3 crb-title-row\">\n          <div className=\"ticker-title\">{tickerCompany}</div>\n          <div className=\"price-title\">{myPrice}</div>\n        </div>\n\n        <div className=\"input-group\">\n          <div className=\"relative\">\n            <div className=\"clearable\">\n              <input\n                ref={tickerInputRef}\n                className=\"input-style crb-input\"\n                type=\"text\"\n                placeholder=\"ticker\"\n                name=\"tickerInput\"\n                autoComplete=\"off\"\n                value={tickerInput}\n                onChange={e => {\n                  handleTickerInput(e);\n                }}\n                onKeyUp={e => {\n                  handleKeyUp(e);\n                }}\n              />\n\n              {tickerInput !== \"\" ? (\n                <span\n                  className=\"clearable-clear mdi mdi-close\"\n                  onClick={() => {\n                    eraseInput();\n                  }}\n                ></span>\n              ) : null}\n              {tickerDDVisible && (\n                <div className=\"dropdown-container crb\" ref={ddRef}>\n                  {tickerDDFiltered !== \"\" &&\n                    tickerDDFiltered.map((val, i) => {\n                      return (\n                        <button\n                          key={i}\n                          onClick={e => {\n                            handleDDClick(val, \"tickerInput\");\n                          }}\n                          value={selectedTicker}\n                        >\n                          {val.symbol} - {val.name}\n                        </button>\n                      );\n                    })}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <button\n          onClick={() => {\n            getPrice();\n          }}\n          className=\"var(--crb-button-type) large green mt-3 crb-button\"\n        >\n          price\n        </button>\n      </div>\n    </article>\n  );\n}\n\nexport default CRBCard;\n"]},"metadata":{},"sourceType":"module"}