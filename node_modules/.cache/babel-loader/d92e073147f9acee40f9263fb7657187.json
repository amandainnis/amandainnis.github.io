{"ast":null,"code":"var _jsxFileName = \"/Users/amandainnis/ReactProjects/board-app/src/App.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect } from \"react\";\nimport Game from \"./components/game/game\";\nimport \"./App.scss\";\nimport Nav from \"./components/nav\";\nimport { DARK } from \"./global-styles/theme/dark\";\nimport { LIGHT } from \"./global-styles/theme/light\";\nimport ToDoCard from \"./components/learning/ToDoCard\";\nimport PortfolioCard from \"./components/portfolio-card\";\nimport Footer from \"./components/footer\";\nimport portfolioData from \"./data/portfolioData\";\nimport AlertingCard from \"./components/alerting/AlertingCard\";\nimport AlphaCapCard from \"./components/alphaCapture/AlphaCapCard\";\nimport InsightAnalyticsCard from \"./components/insightAnalytics/InsightAnalyticsCard\";\nimport CRBCard from \"./components/crb/CRBCard\";\nimport Home from \"./components/home/Home\";\nimport * as Common from \"./js-utils/common\"; // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n\nimport rafSchedule from \"raf-schd\"; // https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findindex\n// https://scrimba.com/p/p4Mrt9/cQnMDHD  js Class\n// // https://reactjs.org/docs/events.html#supported-events\n// why make a class instead of a function?  to use lifecycle functions\n\nvar timer = \"\";\n\nclass App extends React.Component {\n  // defaultTheme = \"light\";\n  constructor(props) {\n    super(props);\n    this.dark = DARK;\n    this.light = LIGHT;\n    this.bodyRef = React.createRef();\n    this.alertingRef = React.createRef();\n    this.changeMeRef = React.createRef(); // not sure why to add the below\n\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.handleClassAddingOnScroll = this.handleClassAddingOnScroll.bind(this);\n    this.setScrollingConstants = this.setScrollingConstants.bind(this);\n    this.handleScrollBetter = this.handleScrollBetter.bind(this); // this.scheduleUpdate = rafSchedule(point =>\n    //   this.state.myAlerting.onScroll(point)\n    // );\n    // according to react docs, deriving state from props is bad\n    // https://reactjs.org/docs/react-component.html#getsnapshotbeforeupdate\n\n    this.state = {\n      theme: props.theme,\n      myBody: this.bodyRef,\n      myChangeMe: this.changeMeRef,\n      myAlerting: this.alertingRef,\n      scrollHeight: null,\n      clientHeight: null,\n      bodyOffset: null,\n      visibleArea: null,\n      scrollAmount: null,\n      alertingOffset: null,\n      alertingActive: null,\n      activePage: \"home\"\n    }; // this.setTheme(props.theme);\n\n    if (props.theme === \"light\") {\n      // Object.assign(this.light.properties, this.appLight.properties);\n      this.generateVars(this.light);\n    } else {\n      // Object.assign(this.dark.properties, this.appDark.properties);\n      this.generateVars(this.dark);\n    }\n\n    this.setTheme = this.setTheme.bind(this);\n  }\n\n  generateVars(theme) {\n    Object.keys(theme.properties).forEach(property => {\n      document.documentElement.style.setProperty(property, theme.properties[property]);\n    });\n  }\n\n  generateTheme(theme) {\n    const current = theme;\n\n    if (theme === \"light\") {\n      // Object.assign(this.light.properties, this.appLight.properties);\n      this.generateVars(current);\n    } else {\n      // Object.assign(this.dark.properties, this.appDark.properties);\n      this.generateVars(current);\n    }\n  }\n\n  setTheme() {\n    // const theme = this.state.theme === \"light\" ? \"dark\" : \"light\";\n    const theme = this.state.theme === \"light\" ? \"dark\" : \"light\";\n    localStorage.setItem(\"theme\", theme); // this.document.querySelector(\"html\").className = \"theme-\" + theme;\n\n    if (theme === \"light\") {\n      console.log(\"yo, im light\");\n      this.setState({\n        theme: \"light\"\n      }); // this.state.theme = \"light\";\n\n      console.log(this.state);\n      this.generateTheme(this.light);\n    } else {\n      console.log(\"yo, im dark\");\n      this.setState({\n        theme: \"dark\"\n      }); // this.state.theme = \"dark\";\n\n      console.log(this.state);\n      this.generateTheme(this.dark);\n    }\n  }\n\n  setChangeClass(myRef, myClass, myTimeout) {\n    const changeMe = myRef; // this just adds the class no matter what\n    // console.log(\"outside changeme setTimeout\");\n\n    const myChangeClassTimeout = setTimeout(() => {\n      changeMe.current.classList.remove(myClass);\n      console.log(\"inside changeme setTimeout\");\n    }, myTimeout);\n\n    if (changeMe.current.classList.contains(myClass)) {\n      console.log(\"clear timeout\");\n      clearTimeout(myChangeClassTimeout);\n    }\n\n    changeMe.current.classList.add(myClass);\n  }\n\n  setActiveChangeClass(cardOffsetFromState, visibleArea, scrollAmount, myStateKey, myTimeout) {\n    // this tests if the thing is in view\n    if (scrollAmount > cardOffsetFromState - visibleArea) {\n      // passes it to child\n      const myAwesomeTimeout = setTimeout(() => {\n        // console.log(\"i timed out\");\n        this.setState({\n          [myStateKey]: false\n        });\n      }, myTimeout);\n      this.setState(prevState => {\n        // console.log(prevState[myStateKey]);\n        if (prevState[myStateKey] === true) {\n          // console.log(\"clear timeout\");\n          clearTimeout(myAwesomeTimeout);\n        }\n\n        return {\n          [myStateKey]: true\n        };\n      });\n    }\n  }\n\n  handleClassAddingOnScroll(alertingOffset, visibleArea, scrollAmount, myRef, myClass, myTimeout) {\n    // this tests if the thing is in view\n    if (scrollAmount > alertingOffset - visibleArea) {\n      this.setChangeClass(myRef, myClass, myTimeout);\n    }\n  }\n\n  handleScroll() {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    // this.emitChangeDebounced(e);\n    // // If there's a timer, cancel it\n    // if (this.timer) {\n    //   window.cancelAnimationFrame(this.timer);\n    // }\n    // // Setup the new requestAnimationFrame()\n    // this.timer = window.requestAnimationFrame(function() {\n    //   // Run our scroll functions\n    //   console.log(\"debounced\");\n    // });\n    const scrollAmount = this.state.myBody.current.scrollTop;\n    const alertingOffset = this.state.alertingOffset;\n    const visibleArea = this.state.visibleArea;\n    this.setState({\n      scrollAmount: scrollAmount\n    });\n    window.requestAnimationFrame(() => {\n      this.setChangeClass(this.state.myChangeMe, \"blinkDivUpPlain\", 1000);\n      this.setActiveChangeClass(alertingOffset, visibleArea, scrollAmount, \"alertingActive\", 5000);\n    });\n  }\n\n  handleScrollBetter() {\n    // console.log(\"no debounce\");\n    // function callMeLola() {\n    //   // console.log(\"lolllllaaaaaaaaa\");\n    // }\n    // function timeoutsetter() {\n    //   clearTimeout(GlobalTimeout);\n    //   var GlobalTimeout = setTimeout(callMeLola, 1500);\n    // }\n    Common.debounce(this.handleScroll(), 500);\n  }\n\n  setScrollingConstants() {\n    const scrollHeight = this.state.myBody.current.scrollHeight;\n    const clientHeight = this.state.myBody.current.clientHeight;\n    const bodyOffset = this.state.myBody.current.offsetTop;\n    const visibleArea = this.state.myBody.current.clientHeight + this.state.myBody.current.offsetTop;\n    const scrollAmount = this.state.myBody.current.scrollTop;\n    const alertingOffset = this.state.myAlerting.current.offsetTop;\n    this.setState({\n      scrollHeight: scrollHeight,\n      clientHeight: clientHeight,\n      bodyOffset: bodyOffset,\n      visibleArea: visibleArea,\n      scrollAmount: scrollAmount,\n      alertingOffset: alertingOffset\n    });\n  }\n\n  handleResize() {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    // When we receive a scroll event, schedule an update.\n    // If we receive many updates within a frame, we'll only publish the latest value.\n    // this.scheduleUpdate({ x: e.clientX, y: e.clientY });\n    this.setScrollingConstants();\n  }\n\n  handleResizeBetter() {\n    Common.debounce(this.handleResize(), 350);\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    console.log(this.state.myBody);\n    console.log(this.bodyRef.current);\n    this.setScrollingConstants();\n    this.bodyRef.current.addEventListener(\"scroll\", this.handleScrollBetter.bind(this));\n    window.addEventListener(\"resize\", this.handleResizeBetter.bind(this));\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\"); // Cancel any pending updates since we're unmounting.\n    // this.emitChangeDebounced.cancel();\n    // console.log(\"componentDidUnmount\");\n\n    window.removeEventListener(\"resize\", this.handleResizeBetter.bind(this));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"update\");\n  }\n\n  render() {\n    // display logic goes here\n    // never set a variable or call a function in the render function unless absolutely necessary\n    const status = this.state.theme;\n    const scrollData = {\n      scrollHeight: this.state.scrollHeight,\n      clientHeight: this.state.clientHeight,\n      bodyOffset: this.state.bodyOffset,\n      visibleArea: this.state.visibleArea,\n      scrollAmount: this.state.scrollAmount,\n      alertingOffset: this.state.alertingOffset,\n      alertingActive: this.state.alertingActive\n    };\n    return React.createElement(\"div\", {\n      className: \"theme-\" + status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      getTheme: this.getActiveTheme,\n      setTheme: this.setTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inner-body\" // onScroll={this.handleScrollBetter}\n      ,\n      ref: this.bodyRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Home, {\n      scrollData: scrollData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(ToDoCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"portfolio-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/board-app/src/App.js"],"names":["React","useEffect","Game","Nav","DARK","LIGHT","ToDoCard","PortfolioCard","Footer","portfolioData","AlertingCard","AlphaCapCard","InsightAnalyticsCard","CRBCard","Home","Common","rafSchedule","timer","App","Component","constructor","props","dark","light","bodyRef","createRef","alertingRef","changeMeRef","handleScroll","bind","handleResize","handleClassAddingOnScroll","setScrollingConstants","handleScrollBetter","state","theme","myBody","myChangeMe","myAlerting","scrollHeight","clientHeight","bodyOffset","visibleArea","scrollAmount","alertingOffset","alertingActive","activePage","generateVars","setTheme","Object","keys","properties","forEach","property","document","documentElement","style","setProperty","generateTheme","current","localStorage","setItem","console","log","setState","setChangeClass","myRef","myClass","myTimeout","changeMe","myChangeClassTimeout","setTimeout","classList","remove","contains","clearTimeout","add","setActiveChangeClass","cardOffsetFromState","myStateKey","myAwesomeTimeout","prevState","scrollTop","window","requestAnimationFrame","debounce","offsetTop","handleResizeBetter","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","status","scrollData","getActiveTheme"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect } from \"react\";\nimport Game from \"./components/game/game\";\n\nimport \"./App.scss\";\nimport Nav from \"./components/nav\";\nimport { DARK } from \"./global-styles/theme/dark\";\nimport { LIGHT } from \"./global-styles/theme/light\";\nimport ToDoCard from \"./components/learning/ToDoCard\";\nimport PortfolioCard from \"./components/portfolio-card\";\nimport Footer from \"./components/footer\";\nimport portfolioData from \"./data/portfolioData\";\nimport AlertingCard from \"./components/alerting/AlertingCard\";\nimport AlphaCapCard from \"./components/alphaCapture/AlphaCapCard\";\nimport InsightAnalyticsCard from \"./components/insightAnalytics/InsightAnalyticsCard\";\nimport CRBCard from \"./components/crb/CRBCard\";\nimport Home from \"./components/home/Home\";\n\nimport * as Common from \"./js-utils/common\";\n// https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\nimport rafSchedule from \"raf-schd\";\n// https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findindex\n// https://scrimba.com/p/p4Mrt9/cQnMDHD  js Class\n// // https://reactjs.org/docs/events.html#supported-events\n// why make a class instead of a function?  to use lifecycle functions\n\nvar timer = \"\";\n\nclass App extends React.Component {\n  // defaultTheme = \"light\";\n  dark = DARK;\n  light = LIGHT;\n\n  constructor(props) {\n    super(props);\n\n    this.bodyRef = React.createRef();\n    this.alertingRef = React.createRef();\n    this.changeMeRef = React.createRef();\n    // not sure why to add the below\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.handleClassAddingOnScroll = this.handleClassAddingOnScroll.bind(this);\n    this.setScrollingConstants = this.setScrollingConstants.bind(this);\n    this.handleScrollBetter = this.handleScrollBetter.bind(this);\n\n    // this.scheduleUpdate = rafSchedule(point =>\n    //   this.state.myAlerting.onScroll(point)\n    // );\n\n    // according to react docs, deriving state from props is bad\n    // https://reactjs.org/docs/react-component.html#getsnapshotbeforeupdate\n    this.state = {\n      theme: props.theme,\n      myBody: this.bodyRef,\n      myChangeMe: this.changeMeRef,\n      myAlerting: this.alertingRef,\n      scrollHeight: null,\n      clientHeight: null,\n      bodyOffset: null,\n      visibleArea: null,\n      scrollAmount: null,\n      alertingOffset: null,\n      alertingActive: null,\n      activePage: \"home\"\n    };\n\n    // this.setTheme(props.theme);\n    if (props.theme === \"light\") {\n      // Object.assign(this.light.properties, this.appLight.properties);\n      this.generateVars(this.light);\n    } else {\n      // Object.assign(this.dark.properties, this.appDark.properties);\n      this.generateVars(this.dark);\n    }\n    this.setTheme = this.setTheme.bind(this);\n  }\n\n  generateVars(theme) {\n    Object.keys(theme.properties).forEach(property => {\n      document.documentElement.style.setProperty(\n        property,\n        theme.properties[property]\n      );\n    });\n  }\n  generateTheme(theme) {\n    const current = theme;\n\n    if (theme === \"light\") {\n      // Object.assign(this.light.properties, this.appLight.properties);\n      this.generateVars(current);\n    } else {\n      // Object.assign(this.dark.properties, this.appDark.properties);\n      this.generateVars(current);\n    }\n  }\n  setTheme() {\n    // const theme = this.state.theme === \"light\" ? \"dark\" : \"light\";\n    const theme = this.state.theme === \"light\" ? \"dark\" : \"light\";\n\n    localStorage.setItem(\"theme\", theme);\n    // this.document.querySelector(\"html\").className = \"theme-\" + theme;\n    if (theme === \"light\") {\n      console.log(\"yo, im light\");\n      this.setState({ theme: \"light\" });\n      // this.state.theme = \"light\";\n      console.log(this.state);\n      this.generateTheme(this.light);\n    } else {\n      console.log(\"yo, im dark\");\n      this.setState({ theme: \"dark\" });\n      // this.state.theme = \"dark\";\n      console.log(this.state);\n      this.generateTheme(this.dark);\n    }\n  }\n  setChangeClass(myRef, myClass, myTimeout) {\n    const changeMe = myRef;\n    // this just adds the class no matter what\n    // console.log(\"outside changeme setTimeout\");\n    const myChangeClassTimeout = setTimeout(() => {\n      changeMe.current.classList.remove(myClass);\n      console.log(\"inside changeme setTimeout\");\n    }, myTimeout);\n    if (changeMe.current.classList.contains(myClass)) {\n      console.log(\"clear timeout\");\n      clearTimeout(myChangeClassTimeout);\n    }\n    changeMe.current.classList.add(myClass);\n  }\n\n  setActiveChangeClass(\n    cardOffsetFromState,\n    visibleArea,\n    scrollAmount,\n    myStateKey,\n    myTimeout\n  ) {\n    // this tests if the thing is in view\n    if (scrollAmount > cardOffsetFromState - visibleArea) {\n      // passes it to child\n      const myAwesomeTimeout = setTimeout(() => {\n        // console.log(\"i timed out\");\n        this.setState({ [myStateKey]: false });\n      }, myTimeout);\n      this.setState(prevState => {\n        // console.log(prevState[myStateKey]);\n        if (prevState[myStateKey] === true) {\n          // console.log(\"clear timeout\");\n          clearTimeout(myAwesomeTimeout);\n        }\n        return { [myStateKey]: true };\n      });\n    }\n  }\n  handleClassAddingOnScroll(\n    alertingOffset,\n    visibleArea,\n    scrollAmount,\n    myRef,\n    myClass,\n    myTimeout\n  ) {\n    // this tests if the thing is in view\n    if (scrollAmount > alertingOffset - visibleArea) {\n      this.setChangeClass(myRef, myClass, myTimeout);\n    }\n  }\n\n  handleScroll() {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    // this.emitChangeDebounced(e);\n    // // If there's a timer, cancel it\n    // if (this.timer) {\n    //   window.cancelAnimationFrame(this.timer);\n    // }\n    // // Setup the new requestAnimationFrame()\n    // this.timer = window.requestAnimationFrame(function() {\n    //   // Run our scroll functions\n    //   console.log(\"debounced\");\n    // });\n    const scrollAmount = this.state.myBody.current.scrollTop;\n    const alertingOffset = this.state.alertingOffset;\n    const visibleArea = this.state.visibleArea;\n    this.setState({\n      scrollAmount: scrollAmount\n    });\n    window.requestAnimationFrame(() => {\n      this.setChangeClass(this.state.myChangeMe, \"blinkDivUpPlain\", 1000);\n      this.setActiveChangeClass(\n        alertingOffset,\n        visibleArea,\n        scrollAmount,\n        \"alertingActive\",\n        5000\n      );\n    });\n  }\n\n  handleScrollBetter() {\n    // console.log(\"no debounce\");\n    // function callMeLola() {\n    //   // console.log(\"lolllllaaaaaaaaa\");\n    // }\n    // function timeoutsetter() {\n    //   clearTimeout(GlobalTimeout);\n    //   var GlobalTimeout = setTimeout(callMeLola, 1500);\n    // }\n\n    Common.debounce(this.handleScroll(), 500);\n  }\n  setScrollingConstants() {\n    const scrollHeight = this.state.myBody.current.scrollHeight;\n    const clientHeight = this.state.myBody.current.clientHeight;\n    const bodyOffset = this.state.myBody.current.offsetTop;\n    const visibleArea =\n      this.state.myBody.current.clientHeight +\n      this.state.myBody.current.offsetTop;\n    const scrollAmount = this.state.myBody.current.scrollTop;\n    const alertingOffset = this.state.myAlerting.current.offsetTop;\n\n    this.setState({\n      scrollHeight: scrollHeight,\n      clientHeight: clientHeight,\n      bodyOffset: bodyOffset,\n      visibleArea: visibleArea,\n      scrollAmount: scrollAmount,\n      alertingOffset: alertingOffset\n    });\n  }\n  handleResize() {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    // When we receive a scroll event, schedule an update.\n    // If we receive many updates within a frame, we'll only publish the latest value.\n    // this.scheduleUpdate({ x: e.clientX, y: e.clientY });\n    this.setScrollingConstants();\n  }\n  handleResizeBetter() {\n    Common.debounce(this.handleResize(), 350);\n  }\n  componentDidMount() {\n    console.log(\"mounted\");\n    console.log(this.state.myBody);\n    console.log(this.bodyRef.current);\n\n    this.setScrollingConstants();\n    this.bodyRef.current.addEventListener(\n      \"scroll\",\n      this.handleScrollBetter.bind(this)\n    );\n    window.addEventListener(\"resize\", this.handleResizeBetter.bind(this));\n  }\n  componentWillUnmount() {\n    console.log(\"unmount\");\n    // Cancel any pending updates since we're unmounting.\n\n    // this.emitChangeDebounced.cancel();\n    // console.log(\"componentDidUnmount\");\n    window.removeEventListener(\"resize\", this.handleResizeBetter.bind(this));\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"update\");\n  }\n  render() {\n    // display logic goes here\n    // never set a variable or call a function in the render function unless absolutely necessary\n    const status = this.state.theme;\n    const scrollData = {\n      scrollHeight: this.state.scrollHeight,\n      clientHeight: this.state.clientHeight,\n      bodyOffset: this.state.bodyOffset,\n      visibleArea: this.state.visibleArea,\n      scrollAmount: this.state.scrollAmount,\n      alertingOffset: this.state.alertingOffset,\n      alertingActive: this.state.alertingActive\n    };\n\n    return (\n      <div className={\"theme-\" + status}>\n        <Nav getTheme={this.getActiveTheme} setTheme={this.setTheme} />\n        <div\n          className=\"inner-body\"\n          // onScroll={this.handleScrollBetter}\n          ref={this.bodyRef}\n        >\n          <Home scrollData={scrollData}></Home>\n          {<ToDoCard></ToDoCard>}\n        </div>\n        <div className=\"portfolio-page\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}