{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/home/Home.js\";\nimport React, { useState, useEffect, useRef } from \"react\"; // import portfolioData from \"./data/portfolioData\";\n\nimport AlertingCard from \"../alerting/AlertingCard\";\nimport AlphaCapCard from \"../alphaCapture/AlphaCapCard\";\nimport InsightAnalyticsCard from \"../insightAnalytics/InsightAnalyticsCard\";\nimport CRBCard from \"../crb/CRBCard\";\nimport Pie from \"../reusable/Pie\";\nimport * as DataHandler from \"../../data/DataHandler\";\nimport Icons from \"../icons-card/Icons\";\nimport useDebounce from \"../reusable/useDebounce\"; // import PortfolioCard from \"../portfolio-card\";\n\nimport * as Common from \"../reusable/common\";\nimport LineChartCV from \"../reusable/LineChartCV\";\nimport LineChart from \"../reusable/LineChart\";\nimport LineChartIndexOf from \"../reusable/LineChartIndexOf\";\n\nfunction Home(props) {\n  // somehow without this use state on scroll amount, the component does not re render the values of the refs\n  // but inside useEffect, the changed state cannot be accessed\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        scrollAmount = _useState2[0],\n        setScrollAmount = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertingActive = _useState4[0],\n        setAlertingActive = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isVisible = _useState6[0],\n        setIsVisible = _useState6[1];\n\n  const bodyRef = useRef();\n  const alertingRef = useRef();\n  const changeMeRef = useRef();\n  const scrollAmountRef = useRef(0);\n  const visibleAreaRef = useRef(0);\n  const bodyOffsetRef = useRef(0);\n  const clientHeightRef = useRef(0);\n  const scrollHeightRef = useRef(0);\n  const alertingOffsetRef = useRef(0);\n\n  function setScrollingConstants() {\n    const scrollHeight = bodyRef.current.scrollHeight;\n    const clientHeight = bodyRef.current.clientHeight;\n    const bodyOffset = bodyRef.current.offsetTop;\n    const visibleArea = bodyRef.current.clientHeight + bodyRef.current.offsetTop;\n    const scrollAmount = bodyRef.current.scrollTop;\n    const alertingOffset = alertingRef.current.offsetTop;\n    scrollHeightRef.current = scrollHeight;\n    clientHeightRef.current = clientHeight;\n    bodyOffsetRef.current = bodyOffset;\n    visibleAreaRef.current = visibleArea;\n    setScrollAmount(scrollAmount);\n    scrollAmountRef.current = scrollAmount;\n    alertingOffsetRef.current = alertingOffset;\n  }\n\n  function setChangeClass(myRef, myClass, myTimeout) {\n    const changeMe = myRef; // this just adds the class no matter what\n    // console.log(\"outside changeme setTimeout\");\n\n    const myChangeClassTimeout = setTimeout(() => {\n      changeMe.current.classList.remove(myClass);\n      console.log(\"inside changeme setTimeout\");\n    }, myTimeout);\n\n    if (changeMe.current.classList.contains(myClass)) {\n      console.log(\"clear timeout\");\n      clearTimeout(myChangeClassTimeout);\n    }\n\n    changeMe.current.classList.add(myClass);\n  }\n\n  function setActiveAlerting(cardOffsetFromState, visibleArea, scrollAmount, myTimeout) {\n    // this tests if the thing is in view\n    // if (scrollAmount > cardOffsetFromState - visibleArea) {\n    //   // passes it to child\n    //   const myAwesomeTimeout = setTimeout(() => {\n    //     // console.log(\"i timed out\");\n    //     setAlertingActive(false);\n    //   }, myTimeout);\n    //   setAlertingActive(prevState => {\n    //     console.log(prevState);\n    //     if (prevState === true) {\n    //       // console.log(\"clear timeout\");\n    //       clearTimeout(myAwesomeTimeout);\n    //     }\n    //     return true;\n    //   });\n    // }\n    setAlertingActive(false);\n  }\n\n  const prevScrollAmountRef = useRef(0);\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        iAmScrollingDown = _useState8[0],\n        setIAmScrollingDown = _useState8[1];\n\n  const handleScroll = () => {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    scrollAmountRef.current = bodyRef.current.scrollTop;\n    setScrollAmount(bodyRef.current.scrollTop);\n    console.log(bodyRef.current.scrollTop, scrollAmountRef.current);\n\n    if (prevScrollAmountRef.current < scrollAmountRef.current && !iAmScrollingDown) {\n      setIAmScrollingDown(true); // console.log('iAmScrollingDown', iAmScrollingDown)\n    } else if (prevScrollAmountRef.current > scrollAmountRef.current && iAmScrollingDown) {\n      setIAmScrollingDown(false); // console.log('iAmScrollingDown', iAmScrollingDown)\n    } // console.log('prevScrollAmountRef.current + scroll amount', prevScrollAmountRef.current, scrollAmountRef.current)\n\n\n    prevScrollAmountRef.current = scrollAmountRef.current;\n    window.requestAnimationFrame(() => {\n      setChangeClass(changeMeRef, \"blinkDivUpPlain\", 1000); // console.log({ alertingOffset });\n\n      setActiveAlerting(alertingOffsetRef.current, visibleAreaRef.current, scrollAmountRef.current, 5000);\n    });\n  }; // function handleScrollBetter() {\n  //   Common.debounce(handleScroll(), 500);\n  // }\n\n\n  useEffect(() => {\n    console.log(\"mounted in home\");\n    setScrollingConstants(); // bodyRef.current.addEventListener(\"scroll\", handleScroll);\n    // return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [iAmScrollingDown]);\n\n  function handleResize() {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    // When we receive a scroll event, schedule an update.\n    // If we receive many updates within a frame, we'll only publish the latest value.\n    // scheduleUpdate({ x: e.clientX, y: e.clientY });\n    setScrollingConstants();\n  }\n\n  function handleResizeBetter() {\n    Common.debounce(handleResize(), 350);\n  }\n\n  useEffect(() => {\n    console.log(\"i am resizing\");\n    setScrollingConstants();\n  }, [props.myResize]); // using this to handleRouting\n  // static function getDerivedStateFromProps(nextProps, prevState) {\n  //   // console.log(nextProps, prevState);\n  //   if (nextProps.isVisible !== prevState.isVisible) {\n  //     return { isVisible: nextProps.isVisible };\n  //   } else return null;\n  // }\n\n  function dollarFormatFn(d) {\n    return \"$\" + d;\n  }\n\n  function percentFormatFn(d) {\n    return Math.round(d * 10000) / 100 + \"%\";\n  }\n\n  return React.createElement(React.Fragment, null, isVisible && React.createElement(\"div\", {\n    className: \"inner-body\" // onScroll={handleScrollBetter}\n    ,\n    ref: bodyRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"headline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Hi, I'm Amanda Innis, a designer & creative technologist\", React.createElement(\"span\", {\n    className: \"asterisk ml-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"*\")), React.createElement(\"div\", {\n    className: \"card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"wrapper-padding section-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Projects\"), React.createElement(\"div\", {\n    className: \"portfolio-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"portfolio-card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(InsightAnalyticsCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"portfolio-card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(AlphaCapCard, {\n    resize: props.myResize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"portfolio-card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(CRBCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    ref: alertingRef,\n    className: \"portfolio-card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(AlertingCard, {\n    active: alertingActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"portfolio-card-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(Icons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/home/Home.js"],"names":["React","useState","useEffect","useRef","AlertingCard","AlphaCapCard","InsightAnalyticsCard","CRBCard","Pie","DataHandler","Icons","useDebounce","Common","LineChartCV","LineChart","LineChartIndexOf","Home","props","scrollAmount","setScrollAmount","alertingActive","setAlertingActive","isVisible","setIsVisible","bodyRef","alertingRef","changeMeRef","scrollAmountRef","visibleAreaRef","bodyOffsetRef","clientHeightRef","scrollHeightRef","alertingOffsetRef","setScrollingConstants","scrollHeight","current","clientHeight","bodyOffset","offsetTop","visibleArea","scrollTop","alertingOffset","setChangeClass","myRef","myClass","myTimeout","changeMe","myChangeClassTimeout","setTimeout","classList","remove","console","log","contains","clearTimeout","add","setActiveAlerting","cardOffsetFromState","prevScrollAmountRef","iAmScrollingDown","setIAmScrollingDown","handleScroll","window","requestAnimationFrame","handleResize","handleResizeBetter","debounce","myResize","dollarFormatFn","d","percentFormatFn","Math","round"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n// import portfolioData from \"./data/portfolioData\";\nimport AlertingCard from \"../alerting/AlertingCard\";\nimport AlphaCapCard from \"../alphaCapture/AlphaCapCard\";\nimport InsightAnalyticsCard from \"../insightAnalytics/InsightAnalyticsCard\";\nimport CRBCard from \"../crb/CRBCard\";\nimport Pie from \"../reusable/Pie\";\nimport * as DataHandler from \"../../data/DataHandler\";\nimport Icons from \"../icons-card/Icons\";\n\nimport useDebounce from \"../reusable/useDebounce\";\n\n// import PortfolioCard from \"../portfolio-card\";\nimport * as Common from \"../reusable/common\";\n\nimport LineChartCV from \"../reusable/LineChartCV\";\nimport LineChart from \"../reusable/LineChart\";\nimport LineChartIndexOf from \"../reusable/LineChartIndexOf\";\n\nfunction Home(props) {\n  // somehow without this use state on scroll amount, the component does not re render the values of the refs\n  // but inside useEffect, the changed state cannot be accessed\n  const [scrollAmount, setScrollAmount] = useState(0);\n  const [alertingActive, setAlertingActive] = useState(null);\n  const [isVisible, setIsVisible] = useState(true);\n\n  const bodyRef = useRef();\n  const alertingRef = useRef();\n  const changeMeRef = useRef();\n  const scrollAmountRef = useRef(0);\n  const visibleAreaRef = useRef(0);\n  const bodyOffsetRef = useRef(0);\n  const clientHeightRef = useRef(0);\n  const scrollHeightRef = useRef(0);\n  const alertingOffsetRef = useRef(0);\n\n  function setScrollingConstants() {\n    const scrollHeight = bodyRef.current.scrollHeight;\n    const clientHeight = bodyRef.current.clientHeight;\n    const bodyOffset = bodyRef.current.offsetTop;\n    const visibleArea =\n      bodyRef.current.clientHeight + bodyRef.current.offsetTop;\n    const scrollAmount = bodyRef.current.scrollTop;\n    const alertingOffset = alertingRef.current.offsetTop;\n\n    scrollHeightRef.current = scrollHeight;\n    clientHeightRef.current = clientHeight;\n    bodyOffsetRef.current = bodyOffset;\n    visibleAreaRef.current = visibleArea;\n    setScrollAmount(scrollAmount);\n    scrollAmountRef.current = scrollAmount;\n\n    alertingOffsetRef.current = alertingOffset;\n  }\n  function setChangeClass(myRef, myClass, myTimeout) {\n    const changeMe = myRef;\n    // this just adds the class no matter what\n    // console.log(\"outside changeme setTimeout\");\n    const myChangeClassTimeout = setTimeout(() => {\n      changeMe.current.classList.remove(myClass);\n      console.log(\"inside changeme setTimeout\");\n    }, myTimeout);\n    if (changeMe.current.classList.contains(myClass)) {\n      console.log(\"clear timeout\");\n      clearTimeout(myChangeClassTimeout);\n    }\n    changeMe.current.classList.add(myClass);\n  }\n\n  function setActiveAlerting(\n    cardOffsetFromState,\n    visibleArea,\n    scrollAmount,\n    myTimeout\n  ) {\n    // this tests if the thing is in view\n    // if (scrollAmount > cardOffsetFromState - visibleArea) {\n    //   // passes it to child\n    //   const myAwesomeTimeout = setTimeout(() => {\n    //     // console.log(\"i timed out\");\n    //     setAlertingActive(false);\n    //   }, myTimeout);\n    //   setAlertingActive(prevState => {\n    //     console.log(prevState);\n    //     if (prevState === true) {\n    //       // console.log(\"clear timeout\");\n    //       clearTimeout(myAwesomeTimeout);\n    //     }\n    //     return true;\n    //   });\n    // }\n    setAlertingActive(false);\n  }\n\n  const prevScrollAmountRef = useRef(0);\n  const [iAmScrollingDown, setIAmScrollingDown] = useState(false);\n\n  const handleScroll = () => {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    scrollAmountRef.current = bodyRef.current.scrollTop;\n    setScrollAmount(bodyRef.current.scrollTop);\n\n    console.log(bodyRef.current.scrollTop, scrollAmountRef.current);\n    if (\n      prevScrollAmountRef.current < scrollAmountRef.current &&\n      !iAmScrollingDown\n    ) {\n      setIAmScrollingDown(true);\n      // console.log('iAmScrollingDown', iAmScrollingDown)\n    } else if (\n      prevScrollAmountRef.current > scrollAmountRef.current &&\n      iAmScrollingDown\n    ) {\n      setIAmScrollingDown(false);\n      // console.log('iAmScrollingDown', iAmScrollingDown)\n    }\n    // console.log('prevScrollAmountRef.current + scroll amount', prevScrollAmountRef.current, scrollAmountRef.current)\n    prevScrollAmountRef.current = scrollAmountRef.current;\n\n    window.requestAnimationFrame(() => {\n      setChangeClass(changeMeRef, \"blinkDivUpPlain\", 1000);\n      // console.log({ alertingOffset });\n      setActiveAlerting(\n        alertingOffsetRef.current,\n        visibleAreaRef.current,\n        scrollAmountRef.current,\n        5000\n      );\n    });\n  };\n\n  // function handleScrollBetter() {\n  //   Common.debounce(handleScroll(), 500);\n  // }\n  useEffect(() => {\n    console.log(\"mounted in home\");\n    setScrollingConstants();\n    // bodyRef.current.addEventListener(\"scroll\", handleScroll);\n    // return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [iAmScrollingDown]);\n  function handleResize() {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    // When we receive a scroll event, schedule an update.\n    // If we receive many updates within a frame, we'll only publish the latest value.\n    // scheduleUpdate({ x: e.clientX, y: e.clientY });\n    setScrollingConstants();\n  }\n  function handleResizeBetter() {\n    Common.debounce(handleResize(), 350);\n  }\n\n  useEffect(() => {\n    console.log(\"i am resizing\");\n    setScrollingConstants();\n  }, [props.myResize]);\n  // using this to handleRouting\n  // static function getDerivedStateFromProps(nextProps, prevState) {\n  //   // console.log(nextProps, prevState);\n  //   if (nextProps.isVisible !== prevState.isVisible) {\n  //     return { isVisible: nextProps.isVisible };\n  //   } else return null;\n  // }\n  function dollarFormatFn(d) {\n    return \"$\" + d;\n  }\n  function percentFormatFn(d) {\n    return Math.round(d * 10000) / 100 + \"%\";\n  }\n  return (\n    <>\n      {isVisible && (\n        <div\n          className=\"inner-body\"\n          // onScroll={handleScrollBetter}\n          ref={bodyRef}\n        >\n          <div className=\"headline\">\n            Hi, I'm Amanda Innis, a designer &amp; creative technologist\n            <span className=\"asterisk ml-1\">*</span>\n          </div>\n\n          {/* <div className=\"wrapper-padding\">\n            <Pie />\n          </div> */}\n\n          <div className=\"card-wrapper\">\n            {/* <div className=\"wrapper-padding constants-info\">\n              <ul>\n                <li>\n                  window to wrapper\n                  <span>{bodyOffsetRef.current}</span>\n                </li>\n                <li>\n                  height of wrapper\n                  <span>{clientHeightRef.current}</span>\n                </li>\n\n                <li>\n                  height visible\n                  <span>{visibleAreaRef.current}</span>\n                </li>\n                <li>\n                  height of contents\n                  <span>{scrollHeightRef.current}</span>\n                </li>\n                <li>\n                  cards offset\n                  <span>{alertingOffsetRef.current}</span>\n                </li>\n                <li>\n                  <h4 className=\"mt-2\">Math</h4>\n                </li>\n\n                <li>\n                  cards offset - height visible\n                  <span>\n                    {alertingOffsetRef.current - visibleAreaRef.current}\n                  </span>\n                </li>\n                <li>\n                  <h4 className=\"mt-2\">Change</h4>\n                </li>\n\n                <li>\n                  amount scrolled\n                  <span ref={changeMeRef}>{scrollAmountRef.current}</span>\n                  <div>\n                    the debounce article\n                    https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\n                  </div>\n                </li>\n              </ul>\n            </div> */}\n            <h1 className=\"wrapper-padding section-header\">Projects</h1>\n            <div className=\"portfolio-container\">\n              <div className=\"portfolio-card-wrapper\">\n                <InsightAnalyticsCard />\n              </div>\n              <div className=\"portfolio-card-wrapper\">\n                <AlphaCapCard resize={props.myResize} />\n              </div>\n              <div className=\"portfolio-card-wrapper\">\n                <CRBCard />\n              </div>\n              <div ref={alertingRef} className=\"portfolio-card-wrapper\">\n                <AlertingCard active={alertingActive} />\n              </div>\n              <div className=\"portfolio-card-wrapper\">\n                <Icons />\n              </div>\n              {/* jon added the squiggly so it immediately renders */}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}