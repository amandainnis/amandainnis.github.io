{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/crb/CRBCard.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport IsLoading from \"../reusable/IsLoading\";\nimport * as Common from \"../reusable/common\";\nimport StockData from \"../../data/stock_data\";\nimport ClientData from \"../../data/clientData\";\n\nconst imgCRB = require(\"../../assets/images/crb-img.png\");\n\nconst data = {\n  id: 3,\n  img: imgCRB,\n  title: \"Pricer\",\n  subtitle: \"Stock Pricing and Trade Execution\",\n  blurb: [\"\"],\n  bkgd: \"var(--crb-bkgd)\"\n};\nconst allTickers = StockData.slice();\n\nfunction CRBCard() {\n  const tickerInputRef = React.createRef();\n  const clientInputRef = React.createRef();\n  const ddRef = React.createRef();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        price = _useState2[0],\n        setPrice = _useState2[1];\n\n  const _useState3 = useState(\"Amazon.com\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tickerCompany = _useState4[0],\n        setTickerCompany = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        ticker = _useState6[0],\n        setTicker = _useState6[1];\n\n  const _useState7 = useState(\"AMZN\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        tickerInput = _useState8[0],\n        setTickerInput = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTicker = _useState10[0],\n        setSelectedTicker = _useState10[1];\n\n  const _useState11 = useState(\"BURGS\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        clientInput = _useState12[0],\n        setClientInput = _useState12[1];\n\n  const _useState13 = useState(\"Burgess Hill Investment Advisors Inc\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        clientTitle = _useState14[0],\n        setClientTitle = _useState14[1];\n\n  const _useState15 = useState(true),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isLoading = _useState16[0],\n        setIsLoading = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        tickerDDVisible = _useState18[0],\n        setTickerDDVisible = _useState18[1];\n\n  const _useState19 = useState(StockData),\n        _useState20 = _slicedToArray(_useState19, 2),\n        tickerDDReservoir = _useState20[0],\n        setTickerDDReservoir = _useState20[1];\n\n  const _useState21 = useState(null),\n        _useState22 = _slicedToArray(_useState21, 2),\n        tickerDDFiltered = _useState22[0],\n        setTickerDDFiltered = _useState22[1];\n\n  const getTickerURL = ticker => \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(ticker, \"&interval=5min&outputsize=full&apikey=NKT90SOYWKFBP04F\");\n\n  function fetchTicker(ticker) {\n    return fetch(getTickerURL(ticker)).then(res => {\n      // console.log(res);\n      if (!res.ok) {\n        throw Error(\"sadface, the res doesnt want to be our friend, but dont feel bad.  btw im middleware\");\n      } // console.log(res);\n\n\n      return res;\n    }).then(res => // this is the promise so don't have a return statement, it will be if and when  its ready\n    // better with es6\n    // console.log(res.json())\n    res.json()); // .then(res => enzo = res);\n  } // async function asyncFetch(ticker) {\n  //   const res = await fetch(getTickerURL(ticker));\n  //   const myData = await res.json();\n  //   setIsLoading(true);\n  //   let myKeys;\n  //   if (res !== undefined && res[\"Time Series (5min)\"] !== undefined) {\n  //     console.log(myData[\"Time Series (5min)\"]);\n  //     console.log(res);\n  //     myKeys = Object.keys(res[\"Time Series (5min)\"]);\n  //     setIsLoading(false);\n  //     setPrice(res[\"Time Series (5min)\"][myKeys[0]][\"1. open\"]);\n  //   } else {\n  //     setIsLoading(false);\n  //     setTicker(\"Not a Ticker\");\n  //     setPrice(null);\n  //   }\n  // }\n\n\n  const resolveFetchedTicker = ticker => {\n    setIsLoading(true);\n    fetchTicker(ticker).then(res => {\n      let myKeys;\n\n      if (res !== undefined && res[\"Time Series (5min)\"] !== undefined) {\n        console.log(res);\n        myKeys = Object.keys(res[\"Time Series (5min)\"]);\n        setIsLoading(false);\n        setPrice(res[\"Time Series (5min)\"][myKeys[0]][\"1. open\"]);\n      } else {\n        setIsLoading(false);\n        setTicker(\"Not a Ticker\");\n        setPrice(null);\n      }\n    });\n  };\n\n  function handleTickerInput(e) {\n    const tickerDDList = allTickers.slice();\n    let myResults;\n    let moreResults;\n\n    if (e !== null || e !== \"\") {\n      myResults = tickerDDList.filter(myKey => {\n        return myKey.symbol.startsWith(e.target.value.toUpperCase());\n      });\n\n      if (myResults < 1) {\n        myResults = [{\n          symbol: e.target.value,\n          name: \"Not found\"\n        }];\n      } // console.log(myResults[0]);\n\n\n      setTickerInput(e.target.value);\n      setTickerDDFiltered(myResults);\n    }\n  }\n\n  function getPrice() {\n    const myTicker = tickerInput; // setState({ ticker: myTicker });\n\n    console.log(myTicker);\n    resolveFetchedTicker(myTicker); // asyncFetch(myTicker);\n  }\n\n  function eraseTicker() {\n    console.log(tickerInputRef);\n    tickerInputRef.current.focus();\n    setTickerInput(\"\");\n    setTickerCompany(\"\");\n    setPrice(\"\");\n  }\n\n  function eraseClient() {\n    console.log(clientInputRef);\n    clientInputRef.current.focus();\n    setClientInput(\"\");\n    setClientTitle(\"\");\n  }\n\n  function handleKeyUp(e, val) {\n    // console.log(e.which);\n    if (val === \"ticker\") {\n      setTickerDDVisible(true);\n    } else if (val === \"client\") {\n      console.log(\"client\"); // setClientDDVisible(true);\n    } // if (e.which === 40) {\n    //   ddRef.current.children[ddListIndex].focus();\n    // }\n\n  }\n\n  function handleDDClick(val, name) {\n    console.log(val);\n    setTickerInput(val.symbol);\n    setTickerCompany(val.name);\n    setTickerDDVisible(false);\n    getPrice();\n  } // function handleArrowEvents(e) {\n  //   console.log(e, e.which);\n  //   if (e.which === 40) {\n  //     // console.log(state, ddRef);\n  //     // ddRef.current.children[0].focus();\n  //     // ddRef.current.children[ddListIndex].focus();\n  //   }\n  //   //       console.log(ddRef);\n  //   //   setState(prevState => {\n  //   //     return { ddListIndex: prevState + 1 };\n  //   //   });\n  // }\n\n\n  useEffect(() => {\n    resolveFetchedTicker(\"AMZN\"); // asyncFetch(\"AMZN\");\n  }, []);\n  let myPrice = Math.round(price * 100) / 100;\n  myPrice = myPrice !== \"\" ? \"$\" + myPrice : \"\"; // this is a promise\n\n  return React.createElement(\"article\", {\n    className: \"portfolio-card\",\n    style: {\n      backgroundColor: data.bkgd\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(IsLoading, {\n    isLoading: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, data.title), React.createElement(\"h4\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, data.subtitle)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-row mt-3 crb-title-row align-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ticker-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, clientTitle), React.createElement(\"div\", {\n    className: \"label-style ml-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Mkt\"), React.createElement(\"div\", {\n    className: \"price-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, myPrice)), React.createElement(\"div\", {\n    className: \"flex-row crb-top-inputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clearable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"clientForTicker\",\n    ref: clientInputRef,\n    className: \"input-style crb-input\",\n    placeholder: \"client\",\n    value: clientInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), clientInput !== \"\" && React.createElement(\"span\", {\n    onClick: () => console.log(\"hi\"),\n    className: \"clearable-clear aicon-close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clearable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: tickerInputRef,\n    className: \"input-style crb-input\",\n    type: \"text\",\n    placeholder: \"ticker\",\n    name: \"tickerInput\",\n    autoComplete: \"off\",\n    value: tickerInput,\n    onChange: e => {\n      handleTickerInput(e);\n    },\n    onKeyUp: e => {\n      handleKeyUp(e, \"ticker\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), tickerInput !== \"\" ? React.createElement(\"span\", {\n    className: \"clearable-clear aicon-close\",\n    onClick: () => {\n      eraseTicker();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }) : null, tickerDDVisible && React.createElement(\"div\", {\n    className: \"dropdown-container crb\",\n    ref: ddRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, tickerDDFiltered !== \"\" && tickerDDFiltered.map((val, i) => {\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      key: i,\n      onClick: e => {\n        handleDDClick(val, \"tickerInput\");\n      },\n      value: selectedTicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, val.symbol, \" - \", val.name));\n  }))))), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clearable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"qtyForTicker\",\n    className: \"input-style crb-input\",\n    placeholder: \"quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"clearable-clear aicon-close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-row client-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"label-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"Ticker\"), tickerCompany), React.createElement(\"div\", {\n    className: \"button-row flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    // onClick={() => {\n    //   getPrice();\n    // }}\n    className: \"var(--crb-button-type) large green mt-3 mr-2 crb-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, \"Buy\"), React.createElement(\"button\", {\n    // onClick={() => {\n    //   getPrice();\n    // }}\n    className: \"var(--crb-button-type) large red mt-3 crb-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, \"Sell\")))));\n}\n\nexport default CRBCard;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/crb/CRBCard.js"],"names":["React","useState","useRef","useEffect","IsLoading","Common","StockData","ClientData","imgCRB","require","data","id","img","title","subtitle","blurb","bkgd","allTickers","slice","CRBCard","tickerInputRef","createRef","clientInputRef","ddRef","price","setPrice","tickerCompany","setTickerCompany","ticker","setTicker","tickerInput","setTickerInput","selectedTicker","setSelectedTicker","clientInput","setClientInput","clientTitle","setClientTitle","isLoading","setIsLoading","tickerDDVisible","setTickerDDVisible","tickerDDReservoir","setTickerDDReservoir","tickerDDFiltered","setTickerDDFiltered","getTickerURL","fetchTicker","fetch","then","res","ok","Error","json","resolveFetchedTicker","myKeys","undefined","console","log","Object","keys","handleTickerInput","e","tickerDDList","myResults","moreResults","filter","myKey","symbol","startsWith","target","value","toUpperCase","name","getPrice","myTicker","eraseTicker","current","focus","eraseClient","handleKeyUp","val","handleDDClick","myPrice","Math","round","backgroundColor","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport IsLoading from \"../reusable/IsLoading\";\nimport * as Common from \"../reusable/common\";\nimport StockData from \"../../data/stock_data\";\nimport ClientData from \"../../data/clientData\";\n\nconst imgCRB = require(\"../../assets/images/crb-img.png\");\nconst data = {\n  id: 3,\n  img: imgCRB,\n  title: \"Pricer\",\n  subtitle: \"Stock Pricing and Trade Execution\",\n  blurb: [\"\"],\n  bkgd: \"var(--crb-bkgd)\"\n};\n\nconst allTickers = StockData.slice();\nfunction CRBCard() {\n  const tickerInputRef = React.createRef();\n  const clientInputRef = React.createRef();\n\n  const ddRef = React.createRef();\n  const [price, setPrice] = useState(0);\n  const [tickerCompany, setTickerCompany] = useState(\"Amazon.com\");\n  const [ticker, setTicker] = useState();\n\n  const [tickerInput, setTickerInput] = useState(\"AMZN\");\n  const [selectedTicker, setSelectedTicker] = useState(null);\n\n  const [clientInput, setClientInput] = useState(\"BURGS\");\n  const [clientTitle, setClientTitle] = useState(\n    \"Burgess Hill Investment Advisors Inc\"\n  );\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [tickerDDVisible, setTickerDDVisible] = useState(false);\n  const [tickerDDReservoir, setTickerDDReservoir] = useState(StockData);\n  const [tickerDDFiltered, setTickerDDFiltered] = useState(null);\n\n  const getTickerURL = ticker =>\n    `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${ticker}&interval=5min&outputsize=full&apikey=NKT90SOYWKFBP04F`;\n\n  function fetchTicker(ticker) {\n    return fetch(getTickerURL(ticker))\n      .then(res => {\n        // console.log(res);\n        if (!res.ok) {\n          throw Error(\n            \"sadface, the res doesnt want to be our friend, but dont feel bad.  btw im middleware\"\n          );\n        }\n        // console.log(res);\n        return res;\n      })\n      .then(res =>\n        // this is the promise so don't have a return statement, it will be if and when  its ready\n        // better with es6\n        // console.log(res.json())\n        res.json()\n      );\n    // .then(res => enzo = res);\n  }\n  // async function asyncFetch(ticker) {\n  //   const res = await fetch(getTickerURL(ticker));\n  //   const myData = await res.json();\n  //   setIsLoading(true);\n  //   let myKeys;\n  //   if (res !== undefined && res[\"Time Series (5min)\"] !== undefined) {\n  //     console.log(myData[\"Time Series (5min)\"]);\n  //     console.log(res);\n  //     myKeys = Object.keys(res[\"Time Series (5min)\"]);\n  //     setIsLoading(false);\n  //     setPrice(res[\"Time Series (5min)\"][myKeys[0]][\"1. open\"]);\n  //   } else {\n  //     setIsLoading(false);\n  //     setTicker(\"Not a Ticker\");\n  //     setPrice(null);\n  //   }\n  // }\n  const resolveFetchedTicker = ticker => {\n    setIsLoading(true);\n    fetchTicker(ticker).then(res => {\n      let myKeys;\n\n      if (res !== undefined && res[\"Time Series (5min)\"] !== undefined) {\n        console.log(res);\n        myKeys = Object.keys(res[\"Time Series (5min)\"]);\n        setIsLoading(false);\n        setPrice(res[\"Time Series (5min)\"][myKeys[0]][\"1. open\"]);\n      } else {\n        setIsLoading(false);\n        setTicker(\"Not a Ticker\");\n        setPrice(null);\n      }\n    });\n  };\n\n  function handleTickerInput(e) {\n    const tickerDDList = allTickers.slice();\n    let myResults;\n    let moreResults;\n    if (e !== null || e !== \"\") {\n      myResults = tickerDDList.filter(myKey => {\n        return myKey.symbol.startsWith(e.target.value.toUpperCase());\n      });\n      if (myResults < 1) {\n        myResults = [{ symbol: e.target.value, name: \"Not found\" }];\n      }\n      // console.log(myResults[0]);\n      setTickerInput(e.target.value);\n      setTickerDDFiltered(myResults);\n    }\n  }\n  function getPrice() {\n    const myTicker = tickerInput;\n    // setState({ ticker: myTicker });\n    console.log(myTicker);\n    resolveFetchedTicker(myTicker);\n    // asyncFetch(myTicker);\n  }\n  function eraseTicker() {\n    console.log(tickerInputRef);\n    tickerInputRef.current.focus();\n    setTickerInput(\"\");\n    setTickerCompany(\"\");\n    setPrice(\"\");\n  }\n  function eraseClient() {\n    console.log(clientInputRef);\n    clientInputRef.current.focus();\n    setClientInput(\"\");\n    setClientTitle(\"\");\n  }\n  function handleKeyUp(e, val) {\n    // console.log(e.which);\n    if (val === \"ticker\") {\n      setTickerDDVisible(true);\n    } else if (val === \"client\") {\n      console.log(\"client\");\n      // setClientDDVisible(true);\n    }\n\n    // if (e.which === 40) {\n    //   ddRef.current.children[ddListIndex].focus();\n    // }\n  }\n  function handleDDClick(val, name) {\n    console.log(val);\n    setTickerInput(val.symbol);\n    setTickerCompany(val.name);\n    setTickerDDVisible(false);\n    getPrice();\n  }\n  // function handleArrowEvents(e) {\n  //   console.log(e, e.which);\n\n  //   if (e.which === 40) {\n  //     // console.log(state, ddRef);\n  //     // ddRef.current.children[0].focus();\n  //     // ddRef.current.children[ddListIndex].focus();\n  //   }\n  //   //       console.log(ddRef);\n  //   //   setState(prevState => {\n  //   //     return { ddListIndex: prevState + 1 };\n  //   //   });\n  // }\n  useEffect(() => {\n    resolveFetchedTicker(\"AMZN\");\n    // asyncFetch(\"AMZN\");\n  }, []);\n\n  let myPrice = Math.round(price * 100) / 100;\n  myPrice = myPrice !== \"\" ? \"$\" + myPrice : \"\";\n\n  // this is a promise\n\n  return (\n    <article className=\"portfolio-card\" style={{ backgroundColor: data.bkgd }}>\n      <IsLoading isLoading={isLoading}></IsLoading>\n      <div className=\"text-section\">\n        <h1 className=\"title\">{data.title}</h1>\n        <h4 className=\"subtitle\">{data.subtitle}</h4>\n      </div>\n      <div>\n        <div className=\"flex-row mt-3 crb-title-row align-content-end\">\n          <div className=\"ticker-title\">{clientTitle}</div>\n          <div className=\"label-style ml-auto\">Mkt</div>\n          <div className=\"price-title\">{myPrice}</div>\n        </div>\n\n        <div className=\"flex-row crb-top-inputs\">\n          <div className=\"input-group\">\n            <div className=\"relative\">\n              <div className=\"clearable\">\n                <input\n                  type=\"text\"\n                  id=\"clientForTicker\"\n                  ref={clientInputRef}\n                  className=\"input-style crb-input\"\n                  placeholder=\"client\"\n                  value={clientInput}\n                />\n                {clientInput !== \"\" && (\n                  <span\n                    onClick={() => console.log(\"hi\")}\n                    className=\"clearable-clear aicon-close\"\n                  ></span>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"input-group\">\n            <div className=\"relative\">\n              <div className=\"clearable\">\n                <input\n                  ref={tickerInputRef}\n                  className=\"input-style crb-input\"\n                  type=\"text\"\n                  placeholder=\"ticker\"\n                  name=\"tickerInput\"\n                  autoComplete=\"off\"\n                  value={tickerInput}\n                  onChange={e => {\n                    handleTickerInput(e);\n                  }}\n                  onKeyUp={e => {\n                    handleKeyUp(e, \"ticker\");\n                  }}\n                />\n\n                {tickerInput !== \"\" ? (\n                  <span\n                    className=\"clearable-clear aicon-close\"\n                    onClick={() => {\n                      eraseTicker();\n                    }}\n                  ></span>\n                ) : null}\n                {tickerDDVisible && (\n                  <div className=\"dropdown-container crb\" ref={ddRef}>\n                    {tickerDDFiltered !== \"\" &&\n                      tickerDDFiltered.map((val, i) => {\n                        return (\n                          <>\n                            <button\n                              key={i}\n                              onClick={e => {\n                                handleDDClick(val, \"tickerInput\");\n                              }}\n                              value={selectedTicker}\n                            >\n                              {val.symbol} - {val.name}\n                            </button>\n                          </>\n                        );\n                      })}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <div className=\"relative\">\n              <div className=\"clearable\">\n                <input\n                  type=\"text\"\n                  id=\"qtyForTicker\"\n                  className=\"input-style crb-input\"\n                  placeholder=\"quantity\"\n                />\n                <span className=\"clearable-clear aicon-close\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex-row\">\n          <div className=\"flex-row client-row\">\n            <div className=\"label-style\">Ticker</div>\n            {tickerCompany}\n          </div>\n          <div className=\"button-row flex-row\">\n            <button\n              // onClick={() => {\n              //   getPrice();\n              // }}\n              className=\"var(--crb-button-type) large green mt-3 mr-2 crb-button\"\n            >\n              Buy\n            </button>\n            <button\n              // onClick={() => {\n              //   getPrice();\n              // }}\n              className=\"var(--crb-button-type) large red mt-3 crb-button\"\n            >\n              Sell\n            </button>\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default CRBCard;\n"]},"metadata":{},"sourceType":"module"}