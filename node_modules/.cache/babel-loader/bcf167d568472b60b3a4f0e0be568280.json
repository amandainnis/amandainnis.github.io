{"ast":null,"code":"var _jsxFileName = \"/Users/amandainnis/ReactProjects/board-app/src/components/insightAnalytics/InsightAnalyticsCard.js\";\nimport React from \"react\";\nimport * as Common from \"../reusable/common\";\n\nconst imgInsightAnalytics = require(\"../../assets/images/drilldown_client-thumb.png\");\n\nconst data = {\n  id: 1,\n  img: imgInsightAnalytics,\n  title: \"Insight Analytics\",\n  subtitle: \"A Client Data Dashboard\",\n  blurb: [\"Insight Analytics new containerized desktop application within the harbor framework.  It will provide analytical and reporting capabilities to Research Sales, Sales Traders and COO/Operations/Finance/Capital Markets personas.\", \"To showcase a user's client universe as relates to top buys / sells, client value, monthly CV totals with YOY comparison, CV by product, sector totals, percent change, sectors by client type. To focus or drilldown on these specific attributes--as well as readership, touchpoint and 13F dataâ€“as they relate to a client / ticker / sector \"],\n  bkgd: \"var(--analytics-bkgd)\"\n};\nconst backupPlan = [{\n  \"Rank A: Real-Time Performance\": {\n    \"Consumer Discretionary\": \"1.57%\",\n    \"Communication Services\": \"1.43%\",\n    Energy: \"1.31%\",\n    Materials: \"1.30%\",\n    Industrials: \"1.16%\",\n    \"Information Technology\": \"1.06%\",\n    Financials: \"0.77%\",\n    \"Real Estate\": \"0.22%\",\n    \"Health Care\": \"-0.33%\",\n    \"Consumer Staples\": \"-0.48%\",\n    Utilities: \"-0.88%\"\n  }\n}]; // const backupPlan = [\n//   {\n//     \"Rank A: Real-Time Performance\": {\n//       \"Consumer Discretionary\": \"1.57%\",\n//       \"Consumer Staples\": \"-0.48%\",\n//       Energy: \"1.31%\",\n//       \"Materials\": \"1.30%\",\n//       \"Industrials\": \"1.16%\",\n//       \"Information Technology\": \"1.06%\",\n//       \"Financials\": \"0.77%\",\n//       \"Real Estate\": \"0.22%\",\n//       \"Communication Services\": \"1.43%\",\n//       \"Health Care\": \"-0.33%\",\n//       Utilities: \"-0.88%\"\n//     }\n//   }\n// ];\n\nclass InsightAnalyticsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(backupPlan[0][\"Rank A: Real-Time Performance\"][\"Consumer Discretionary\"]); // this.sortStuff();  the sort algo\n  }\n\n  sortStuff() {\n    let myVal = Object.entries(backupPlan[0][\"Rank A: Real-Time Performance\"]).map(res => {\n      return res[1];\n    });\n    let yellow = Common.mergeSort(myVal);\n    console.log(yellow);\n  }\n\n  mapObject(res) {\n    let tempArr = [];\n    Object.entries(res).map((res, i) => {\n      let temp = res[1].replace(/\\%/, \"\");\n      temp = parseFloat(temp);\n      let isNegative = temp < 0 ? true : false;\n      tempArr.push({\n        name: res[0],\n        val: temp,\n        isNegative: isNegative\n      });\n    });\n    return tempArr;\n  }\n\n  addWidth(res) {\n    let newObject = this.mapObject(res); // since it's already sorted, just use 0 as max\n\n    let max = newObject[0].val;\n    let finalObject = newObject.map(item => {\n      let width = Math.abs(Math.round(item.val / max * 1000) / 10);\n      return {\n        name: item.name,\n        val: item.val,\n        isNegative: item.isNegative,\n        width: width\n      };\n    }); // console.log(finalObject);\n\n    return finalObject;\n  }\n\n  render() {\n    // const myObject = Object.entries(\n    //   backupPlan[\"Rank A: Real-Time Performance\"]\n    // );\n    // console.log(Object.entries(backupPlan[0][\"Rank A: Real-Time Performance\"]));\n    const myObject = backupPlan[0][\"Rank A: Real-Time Performance\"][0];\n    const newObject = this.addWidth(backupPlan[0][\"Rank A: Real-Time Performance\"]); // console.log(newObject);\n\n    return React.createElement(\"article\", {\n      className: \"portfolio-card\",\n      style: {\n        backgroundColor: data.bkgd\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, data.title), React.createElement(\"h4\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, data.subtitle)), React.createElement(\"div\", {\n      className: \"flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bar-graph-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bar-graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, newObject.map((res, i) => {\n      if (res.val >= 0) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"flex-row-center narrow-row-height panel-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"colA\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"colB\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"proportion-bar d-flex relative\",\n          style: {\n            width: res.width + \"%\",\n            backgroundColor: \"pink\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"percent-class right-absolute\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, res.val, \"%\"), React.createElement(\"div\", {\n          className: \"flex1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"flex-row-center narrow-row-height panel-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"colA\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"proportion-bar d-flex relative\",\n          style: {\n            width: res.width + \"%\",\n            backgroundColor: \"pink\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"percent-class left-absolute\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, res.val, \"%\"), React.createElement(\"div\", {\n          className: \"flex1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"colB\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }));\n      }\n    })))));\n  }\n\n}\n\nexport default InsightAnalyticsCard;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/board-app/src/components/insightAnalytics/InsightAnalyticsCard.js"],"names":["React","Common","imgInsightAnalytics","require","data","id","img","title","subtitle","blurb","bkgd","backupPlan","Energy","Materials","Industrials","Financials","Utilities","InsightAnalyticsCard","Component","constructor","props","console","log","sortStuff","myVal","Object","entries","map","res","yellow","mergeSort","mapObject","tempArr","i","temp","replace","parseFloat","isNegative","push","name","val","addWidth","newObject","max","finalObject","item","width","Math","abs","round","render","myObject","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as Common from \"../reusable/common\";\nconst imgInsightAnalytics = require(\"../../assets/images/drilldown_client-thumb.png\");\nconst data = {\n  id: 1,\n  img: imgInsightAnalytics,\n  title: \"Insight Analytics\",\n  subtitle: \"A Client Data Dashboard\",\n  blurb: [\n    \"Insight Analytics new containerized desktop application within the harbor framework.  It will provide analytical and reporting capabilities to Research Sales, Sales Traders and COO/Operations/Finance/Capital Markets personas.\",\n    \"To showcase a user's client universe as relates to top buys / sells, client value, monthly CV totals with YOY comparison, CV by product, sector totals, percent change, sectors by client type. To focus or drilldown on these specific attributes--as well as readership, touchpoint and 13F dataâ€“as they relate to a client / ticker / sector \"\n  ],\n  bkgd: \"var(--analytics-bkgd)\"\n};\nconst backupPlan = [\n  {\n    \"Rank A: Real-Time Performance\": {\n      \"Consumer Discretionary\": \"1.57%\",\n      \"Communication Services\": \"1.43%\",\n      Energy: \"1.31%\",\n      Materials: \"1.30%\",\n      Industrials: \"1.16%\",\n      \"Information Technology\": \"1.06%\",\n      Financials: \"0.77%\",\n      \"Real Estate\": \"0.22%\",\n      \"Health Care\": \"-0.33%\",\n      \"Consumer Staples\": \"-0.48%\",\n      Utilities: \"-0.88%\"\n    }\n  }\n];\n// const backupPlan = [\n//   {\n//     \"Rank A: Real-Time Performance\": {\n//       \"Consumer Discretionary\": \"1.57%\",\n//       \"Consumer Staples\": \"-0.48%\",\n\n//       Energy: \"1.31%\",\n//       \"Materials\": \"1.30%\",\n//       \"Industrials\": \"1.16%\",\n//       \"Information Technology\": \"1.06%\",\n//       \"Financials\": \"0.77%\",\n//       \"Real Estate\": \"0.22%\",\n//       \"Communication Services\": \"1.43%\",\n//       \"Health Care\": \"-0.33%\",\n\n//       Utilities: \"-0.88%\"\n//     }\n//   }\n// ];\nclass InsightAnalyticsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\n      backupPlan[0][\"Rank A: Real-Time Performance\"][\"Consumer Discretionary\"]\n    );\n    // this.sortStuff();  the sort algo\n  }\n  sortStuff() {\n    let myVal = Object.entries(\n      backupPlan[0][\"Rank A: Real-Time Performance\"]\n    ).map(res => {\n      return res[1];\n    });\n    let yellow = Common.mergeSort(myVal);\n    console.log(yellow);\n  }\n  mapObject(res) {\n    let tempArr = [];\n    Object.entries(res).map((res, i) => {\n      let temp = res[1].replace(/\\%/, \"\");\n      temp = parseFloat(temp);\n      let isNegative = temp < 0 ? true : false;\n      tempArr.push({\n        name: res[0],\n        val: temp,\n        isNegative: isNegative\n      });\n    });\n    return tempArr;\n  }\n  addWidth(res) {\n    let newObject = this.mapObject(res);\n    // since it's already sorted, just use 0 as max\n    let max = newObject[0].val;\n    let finalObject = newObject.map(item => {\n      let width = Math.abs(Math.round((item.val / max) * 1000) / 10);\n      return {\n        name: item.name,\n        val: item.val,\n        isNegative: item.isNegative,\n        width: width\n      };\n    });\n    // console.log(finalObject);\n    return finalObject;\n  }\n  render() {\n    // const myObject = Object.entries(\n    //   backupPlan[\"Rank A: Real-Time Performance\"]\n    // );\n    // console.log(Object.entries(backupPlan[0][\"Rank A: Real-Time Performance\"]));\n    const myObject = backupPlan[0][\"Rank A: Real-Time Performance\"][0];\n    const newObject = this.addWidth(\n      backupPlan[0][\"Rank A: Real-Time Performance\"]\n    );\n    // console.log(newObject);\n\n    return (\n      <article\n        className=\"portfolio-card\"\n        style={{ backgroundColor: data.bkgd }}\n      >\n        <div className=\"text-section\">\n          <h1 className=\"title\">{data.title}</h1>\n          <h4 className=\"subtitle\">{data.subtitle}</h4>\n        </div>\n        <div className=\"flex-row\">\n          <div className=\"bar-graph-wrapper\">\n            <div className=\"bar-graph\">\n              {/* {myObject} */}\n              {newObject.map((res, i) => {\n                if (res.val >= 0) {\n                  return (\n                    <div\n                      key={i}\n                      className=\"flex-row-center narrow-row-height panel-row\"\n                    >\n                      <div className=\"colA\"></div>\n                      <div className=\"colB\">\n                        <div\n                          className=\"proportion-bar d-flex relative\"\n                          style={{\n                            width: res.width + \"%\",\n                            backgroundColor: \"pink\"\n                          }}\n                        ></div>\n                        <div className=\"percent-class right-absolute\">\n                          {res.val}%\n                        </div>\n                        <div className=\"flex1\"></div>\n                      </div>\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div\n                      key={i}\n                      className=\"flex-row-center narrow-row-height panel-row\"\n                    >\n                      <div className=\"colA\">\n                        <div\n                          className=\"proportion-bar d-flex relative\"\n                          style={{\n                            width: res.width + \"%\",\n                            backgroundColor: \"pink\"\n                          }}\n                        ></div>\n                        <div className=\"percent-class left-absolute\">\n                          {res.val}%\n                        </div>\n                        <div className=\"flex1\"></div>\n                      </div>\n                      <div className=\"colB\"></div>\n                    </div>\n                  );\n                }\n              })}\n\n              {/* <div className=\"flex-row-center narrow-row-height panel-row\" *ngIf=\"sector.negative !== true\">\n                  <div className=\"colA\">\n                  </div>\n                  <div className=\"colB\">\n                    <div className=\"proportion-bar d-flex relative\" [ngClass]=\"themeService.mapSectorBackgrounds(sector.shortName)\"\n                      [ngStyle]=\"{'width': sector.width}\">\n                    </div>\n                    <div className=\"percent-class right-absolute\">{{sector.percentVal|numbers}}%</div>\n                    <div className=\"flex1\"></div>\n                  </div>\n                </div>\n                <div className=\"flex-row-center narrow-row-height panel-row\" *ngIf=\"sector.negative === true\">\n                  <div className=\"colA\">\n                    <div className=\"proportion-bar relative ml-auto\" [ngClass]=\"themeService.mapSectorBackgrounds(sector.shortName)\"\n                      [ngStyle]=\"{'width': sector.width}\">\n                    </div>\n                    <div className=\"percent-class left-absolute\">{{sector.percentVal|numbers}}%</div>\n                    <div className=\"flex1\"></div>\n                  </div>\n                  <div className=\"colB\">\n                  </div>\n                </div> */}\n            </div>\n          </div>\n          {/* \n          <div class=\"legend\">\n            <div class=\"flex-row-center narrow-row-height\" *ngFor=\"let sector of allSectors\">\n              <div class=\"square\" [ngClass]=\"themeService.mapSectorBackgrounds(sector.shortName)\"></div>\n              <div class=\"title cursor-pointer\" (click)=\"onSectorClicked(sector)\">{{sector.shortName}}</div>\n            </div>\n          </div> */}\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default InsightAnalyticsCard;\n"]},"metadata":{},"sourceType":"module"}