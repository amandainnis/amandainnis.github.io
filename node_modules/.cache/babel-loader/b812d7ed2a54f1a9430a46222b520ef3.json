{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChartSinglePrice.js\";\nimport React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as DataHandler from \"../../data/DataHandler\";\nimport * as moment from \"../../../node_modules/moment/moment\";\nexport default function LineChartSinglePrice() {\n  const chart = createRef();\n  const startValTicker = useRef();\n  const startValBenchmark = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n  let YOYdiff;\n\n  const _useState = useState(DataHandler.singlePriceData),\n        _useState2 = _slicedToArray(_useState, 2),\n        chartData = _useState2[0],\n        setChartData = _useState2[1];\n\n  function numberFormatFn(d) {\n    return \"$\" + d;\n  }\n\n  function timeFormat(d) {\n    return chartData[d].niceDateAbbrev;\n  } // function getCurrentMonth() {\n  //   const date = new Date();\n  //   const currentMonthNumber = date.getMonth() + 1;\n  //   //console.log('i am current month number', currentMonthNumber);\n  //   return currentMonthNumber;\n  // }\n  // Math.min will assign null values to 0 so need to filter out null if want min to be actual min,\n  // but it may look better to have an actual zero\n\n\n  function prepMaxVal(myData, yLineOne) {\n    let tempArr = [];\n\n    for (let i = 0; i < myData.length; i++) {\n      if (myData[i][yLineOne] !== null) tempArr.push(myData[i][yLineOne]);\n    }\n\n    return tempArr;\n  }\n\n  function getMaxVal(myData, yLineOne) {\n    let tempArr = prepMaxVal(myData, yLineOne);\n    let tempArrB = prepMaxVal(myData, yLineOne);\n    let tempMax = tempArr.reduce((a, b) => Math.max(a, b));\n    let tempMin = tempArrB.reduce((a, b) => Math.min(a, b));\n    return {\n      min: tempMin,\n      max: tempMax\n    };\n  }\n\n  function createChart(chartData, yLineOne, xAxisKeyName) {\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    console.log(chartData);\n    let tempMinMax = getMaxVal(chartData, yLineOne);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max; // let currentMonth = getCurrentMonth();\n\n    let margin = {\n      top: 20,\n      right: 60,\n      bottom: 0,\n      left: 10\n    }; //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n\n    let width = Number.isNaN(parseInt(d3.select(containerElement).style(\"width\"))) ? 0 : parseInt(d3.select(containerElement).style(\"width\")) - margin.left - margin.right;\n    let height = 220 - margin.top; // translates a function to d3, passes angular scope into d3\n    // tell format func that the function with \"this\" should be asscoiated with the currect ts component\n    //let bisectDate = d3.bisector((d) => timeFormat(d[xAxisKeyName])).left; // this would return the month, but we aren't using it right now\n\n    let justBisect = d3.bisector(d => d[xAxisKeyName]).left; //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n    let y = d3.scaleLinear().range([height, 0]); //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3.axisBottom(x) // .ticks(12)\n    .tickFormat(function (d) {\n      // console.log(d);\n      return timeFormat(d);\n    }).tickPadding(6);\n    let yAxis = d3.axisRight(y).tickFormat(d => {\n      return numberFormatFn(d);\n    }).ticks(6).tickPadding(6); //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    const lineOne = d3.line().defined(function (d) {\n      if (d[yLineOne] !== null) {\n        return d[yLineOne];\n      }\n    }).x(d => x(d[xAxisKeyName])).y(d => y(d[yLineOne])); //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3.select(containerElement).append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", height + margin.top + margin.bottom + 40).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n    chartData.sort((a, b) => b[xAxisKeyName] - a[xAxisKeyName]); //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([parseInt(d3.min(chartData, d => d[xAxisKeyName])), parseInt(d3.max(chartData, d => d[xAxisKeyName]))]); // y.domain([minVal, maxVal]);\n\n    y.domain([0, maxVal]); //////////////////////// Append the lines / areas  ////////////////////////\n\n    CVsvg.append(\"path\").datum(chartData).attr(\"class\", \"lineOne line\").attr(\"d\", lineOne).transition().duration(500); ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\").attr(\"class\", \"yAxis\").attr(\"transform\", \"translate(\" + (width + 6) + \",0)\").call(yAxis);\n    CVsvg.append(\"g\").attr(\"class\", \"xAxis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis); //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\").attr(\"class\", \"mouse-line x\").style(\"opacity\", 0.5).attr(\"y1\", 0).attr(\"y2\", height);\n    const marker = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker.append(\"circle\").attr(\"class\", \"line-marker lineOne\").transition().duration(500).attr(\"r\", 5); //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3.select(containerElement).append(\"div\").attr(\"class\", \"tooltipDiv\");\n    const dateContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    dateContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"Date\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const lineOneTextContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    lineOneTextContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"2018\");\n    lineOneTextContainer.append(\"div\").attr(\"class\", \"dot lineOne\");\n    const lineOneText = lineOneTextContainer.append(\"div\").attr(\"class\", \"value-text\"); //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\").on(\"mouseover\", () => {\n      lineTrace.style(\"display\", null);\n      d3.select(\".mouse-line\").style(\"opacity\", \"1\");\n      d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n    }).on(\"mousemove\", () => {\n      let xy = d3.mouse(d3.event.currentTarget); // let x0 = timeFormat(x.invert(xy[0]));\n      // let mouseIndex = bisectDate(chartData, x0, 1);\n\n      let x0 = x.invert(xy[0]);\n      let mouseIndex = justBisect(chartData, x0, 1);\n      let d0 = chartData[mouseIndex - 1];\n      let d1 = chartData[mouseIndex]; // lastValidDataPreviousYear = findlastValidDataCurrentYear(d0[yLineOne], d1[yLineOne], d0, lastValidDataPreviousYear, chartData[currentMonth - 1]);\n      // console.log('i am x0, d0[xAxisKeyName], d1,', x0, d0[xAxisKeyName], d1)\n      // console.log('i am x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear', x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear)\n\n      let d;\n\n      if (d1 !== undefined) {\n        d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0; // d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n      } else {\n        d = d0;\n      }\n\n      lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n      marker.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"); // marker.attr('transform', d[yLineOne] !== null ? 'translate(' + x(d[xAxisKeyName]) + ',' + y(d[yLineOne]) + ')' : 'translate(' + x(lastValidDataPreviousYear[xAxisKeyName]) + ',' + y(lastValidDataPreviousYear[yLineOne]) + ')');\n      // (d[yLineTwo] == null) ? YOYdiff = null : YOYdiff = numberFormatFn(d[yLineTwo] - d[yLineOne]);\n\n      let l1text = d[yLineOne] !== null ? numberFormatFn(d[yLineOne]) : \"\";\n      lineOneText.text(l1text);\n      dateText.text(timeFormat(d[xAxisKeyName]));\n      d3.select(\".mouse-line.x\").attr(\"y2\", height);\n    }).attr(\"class\", \"totalRect\").attr(\"fill\", \"none\").attr(\"x\", 0).attr(\"pointer-events\", \"all\").attr(\"width\", width).attr(\"transform\", \"translate(0,0)\").attr(\"height\", height).transition().duration(500); //////////////////////// Set the data on load ////////////////////////\n    // d3.set().add(chartData[currentMonth - 1]);\n    // let d = chartData[currentMonth - 1];\n    // lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n    // marker.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    // );\n    // YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n    // let YOYdiffColor = getYOYdiffColor(YOYdiff);\n    // lineOneText.text(numberFormatFn(d[yLineOne]));\n    // CVcurrentYearText.text(numberFormatFn(d[yLineTwo]));\n    // dateText.text(timeFormat(d[xAxisKeyName]));\n    // YOYText.text(numberFormatFn(YOYdiff));\n    // YOYText.attr(\"class\", YOYdiffColor);\n    // d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, \"price\", \"benchmark\", \"index\");\n  }, []);\n  return React.createElement(\"div\", {\n    ref: chart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChartSinglePrice.js"],"names":["React","createRef","useState","useRef","useEffect","d3","DataHandler","moment","LineChartSinglePrice","chart","startValTicker","startValBenchmark","defaultHeight","containerElement","YOYdiff","singlePriceData","chartData","setChartData","numberFormatFn","d","timeFormat","niceDateAbbrev","prepMaxVal","myData","yLineOne","tempArr","i","length","push","getMaxVal","tempArrB","tempMax","reduce","a","b","Math","max","tempMin","min","createChart","xAxisKeyName","current","innerHTML","console","log","tempMinMax","minVal","maxVal","margin","top","right","bottom","left","width","Number","isNaN","parseInt","select","style","height","justBisect","bisector","x","scaleLinear","range","y","xAxis","axisBottom","tickFormat","tickPadding","yAxis","axisRight","ticks","lineOne","line","defined","CVsvg","append","attr","forEach","sort","domain","datum","transition","duration","call","lineTrace","marker","tooltipDiv","dateContainer","text","dateText","lineOneTextContainer","lineOneText","on","selectAll","xy","mouse","event","currentTarget","x0","invert","mouseIndex","d0","d1","undefined","l1text"],"mappings":"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","sourcesContent":["import React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as DataHandler from \"../../data/DataHandler\";\nimport * as moment from \"../../../node_modules/moment/moment\";\n\nexport default function LineChartSinglePrice() {\n  const chart = createRef();\n  const startValTicker = useRef();\n  const startValBenchmark = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n  let YOYdiff;\n  const [chartData, setChartData] = useState(DataHandler.singlePriceData);\n\n  function numberFormatFn(d) {\n    return \"$\" + d;\n  }\n  function timeFormat(d) {\n    return chartData[d].niceDateAbbrev;\n  }\n\n  // function getCurrentMonth() {\n  //   const date = new Date();\n  //   const currentMonthNumber = date.getMonth() + 1;\n  //   //console.log('i am current month number', currentMonthNumber);\n  //   return currentMonthNumber;\n  // }\n\n  // Math.min will assign null values to 0 so need to filter out null if want min to be actual min,\n  // but it may look better to have an actual zero\n  function prepMaxVal(myData, yLineOne) {\n    let tempArr = [];\n    for (let i = 0; i < myData.length; i++) {\n      if (myData[i][yLineOne] !== null) tempArr.push(myData[i][yLineOne]);\n    }\n    return tempArr;\n  }\n  function getMaxVal(myData, yLineOne) {\n    let tempArr = prepMaxVal(myData, yLineOne);\n    let tempArrB = prepMaxVal(myData, yLineOne);\n    let tempMax = tempArr.reduce((a, b) => Math.max(a, b));\n    let tempMin = tempArrB.reduce((a, b) => Math.min(a, b));\n    return { min: tempMin, max: tempMax };\n  }\n  function createChart(chartData, yLineOne, xAxisKeyName) {\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    console.log(chartData);\n    let tempMinMax = getMaxVal(chartData, yLineOne);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max;\n    // let currentMonth = getCurrentMonth();\n    let margin = { top: 20, right: 60, bottom: 0, left: 10 };\n    //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n    let width = Number.isNaN(\n      parseInt(d3.select(containerElement).style(\"width\"))\n    )\n      ? 0\n      : parseInt(d3.select(containerElement).style(\"width\")) -\n        margin.left -\n        margin.right;\n    let height = 220 - margin.top;\n    // translates a function to d3, passes angular scope into d3\n    // tell format func that the function with \"this\" should be asscoiated with the currect ts component\n\n    //let bisectDate = d3.bisector((d) => timeFormat(d[xAxisKeyName])).left; // this would return the month, but we aren't using it right now\n    let justBisect = d3.bisector(d => d[xAxisKeyName]).left;\n\n    //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n\n    let y = d3.scaleLinear().range([height, 0]);\n\n    //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3\n      .axisBottom(x)\n      // .ticks(12)\n      .tickFormat(function(d) {\n        // console.log(d);\n        return timeFormat(d);\n      })\n      .tickPadding(6);\n\n    let yAxis = d3\n      .axisRight(y)\n      .tickFormat(d => {\n        return numberFormatFn(d);\n      })\n      .ticks(6)\n      .tickPadding(6);\n\n    //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    const lineOne = d3\n      .line()\n      .defined(function(d) {\n        if (d[yLineOne] !== null) {\n          return d[yLineOne];\n        }\n      })\n      .x(d => x(d[xAxisKeyName]))\n      .y(d => y(d[yLineOne]));\n\n    //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3\n      .select(containerElement)\n      .append(\"svg\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", height + margin.top + margin.bottom + 40)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n\n    chartData.sort((a, b) => b[xAxisKeyName] - a[xAxisKeyName]);\n\n    //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([\n      parseInt(d3.min(chartData, d => d[xAxisKeyName])),\n      parseInt(d3.max(chartData, d => d[xAxisKeyName]))\n    ]);\n    // y.domain([minVal, maxVal]);\n    y.domain([0, maxVal]);\n    //////////////////////// Append the lines / areas  ////////////////////////\n\n    CVsvg.append(\"path\")\n      .datum(chartData)\n      .attr(\"class\", \"lineOne line\")\n      .attr(\"d\", lineOne)\n      .transition()\n      .duration(500);\n\n    ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n      .attr(\"transform\", \"translate(\" + (width + 6) + \",0)\")\n      .call(yAxis);\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"xAxis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\")\n      .attr(\"class\", \"mouse-line x\")\n      .style(\"opacity\", 0.5)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", height);\n\n    const marker = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n\n    marker\n      .append(\"circle\")\n      .attr(\"class\", \"line-marker lineOne\")\n      .transition()\n      .duration(500)\n      .attr(\"r\", 5);\n\n    //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3\n      .select(containerElement)\n      .append(\"div\")\n      .attr(\"class\", \"tooltipDiv\");\n    const dateContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    dateContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"Date\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const lineOneTextContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    lineOneTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"2018\");\n    lineOneTextContainer.append(\"div\").attr(\"class\", \"dot lineOne\");\n\n    const lineOneText = lineOneTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"value-text\");\n\n    //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\")\n      .on(\"mouseover\", () => {\n        lineTrace.style(\"display\", null);\n        d3.select(\".mouse-line\").style(\"opacity\", \"1\");\n        d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n      })\n      .on(\"mousemove\", () => {\n        let xy = d3.mouse(d3.event.currentTarget);\n        // let x0 = timeFormat(x.invert(xy[0]));\n        // let mouseIndex = bisectDate(chartData, x0, 1);\n        let x0 = x.invert(xy[0]);\n        let mouseIndex = justBisect(chartData, x0, 1);\n        let d0 = chartData[mouseIndex - 1];\n        let d1 = chartData[mouseIndex];\n        // lastValidDataPreviousYear = findlastValidDataCurrentYear(d0[yLineOne], d1[yLineOne], d0, lastValidDataPreviousYear, chartData[currentMonth - 1]);\n        // console.log('i am x0, d0[xAxisKeyName], d1,', x0, d0[xAxisKeyName], d1)\n\n        // console.log('i am x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear', x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear)\n        let d;\n        if (d1 !== undefined) {\n          d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n          // d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n        } else {\n          d = d0;\n        }\n\n        lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n        marker.attr(\n          \"transform\",\n          \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n        );\n        // marker.attr('transform', d[yLineOne] !== null ? 'translate(' + x(d[xAxisKeyName]) + ',' + y(d[yLineOne]) + ')' : 'translate(' + x(lastValidDataPreviousYear[xAxisKeyName]) + ',' + y(lastValidDataPreviousYear[yLineOne]) + ')');\n\n        // (d[yLineTwo] == null) ? YOYdiff = null : YOYdiff = numberFormatFn(d[yLineTwo] - d[yLineOne]);\n        let l1text = d[yLineOne] !== null ? numberFormatFn(d[yLineOne]) : \"\";\n        lineOneText.text(l1text);\n        dateText.text(timeFormat(d[xAxisKeyName]));\n        d3.select(\".mouse-line.x\").attr(\"y2\", height);\n      })\n      .attr(\"class\", \"totalRect\")\n      .attr(\"fill\", \"none\")\n      .attr(\"x\", 0)\n      .attr(\"pointer-events\", \"all\")\n      .attr(\"width\", width)\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"height\", height)\n      .transition()\n      .duration(500);\n\n    //////////////////////// Set the data on load ////////////////////////\n\n    // d3.set().add(chartData[currentMonth - 1]);\n    // let d = chartData[currentMonth - 1];\n    // lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n\n    // marker.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    // );\n\n    // YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n    // let YOYdiffColor = getYOYdiffColor(YOYdiff);\n\n    // lineOneText.text(numberFormatFn(d[yLineOne]));\n    // CVcurrentYearText.text(numberFormatFn(d[yLineTwo]));\n    // dateText.text(timeFormat(d[xAxisKeyName]));\n    // YOYText.text(numberFormatFn(YOYdiff));\n    // YOYText.attr(\"class\", YOYdiffColor);\n\n    // d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, \"price\", \"benchmark\", \"index\");\n  }, []);\n\n  return <div ref={chart}></div>;\n}\n"]},"metadata":{},"sourceType":"module"}