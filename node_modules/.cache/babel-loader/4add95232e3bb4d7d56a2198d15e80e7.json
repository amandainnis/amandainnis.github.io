{"ast":null,"code":"var _jsxFileName = \"/Users/amandainnis/ReactProjects/board-app/src/components/crb/CRBCard.js\";\nimport React from \"react\";\nimport IsLoading from \"../reusable/IsLoading\";\n\nconst imgCRB = require(\"../../assets/images/crb-img.png\");\n\nconst data = {\n  id: 3,\n  img: imgCRB,\n  title: \"CRB Pricer\",\n  subtitle: \"Central Risk Book Pricing and Trade Execution\",\n  blurb: [\"\"],\n  bkgd: \"var(--crb-bkgd)\"\n};\n\nclass CRBCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.getTickerURL = ticker => \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(ticker, \"&interval=5min&outputsize=full&apikey=NKT90SOYWKFBP04F\");\n\n    this.state = {\n      price: 0,\n      ticker: this.ticker,\n      isLoading: true\n    }; // this.loadingFunc = this.loadingFunc.bind(this);\n\n    this.setPrice = this.setPrice.bind(this);\n    console.log(\"i am AMZN\", this.getTickerURL(\"AMZN\"));\n  }\n\n  setPrice() {\n    this.setState(prevState => {\n      return {\n        price: prevState.price + 1\n      };\n    });\n  }\n\n  getThisTicker(ticker) {\n    return fetch(this.getTickerURL(ticker)).then(res => {\n      // console.log(res);\n      if (!res.ok) {\n        throw Error(\"sadface, the res doesnt want to be our friend, but dont feel bad.  btw im middleware\");\n      } // console.log(res);\n\n\n      return res;\n    }).then(res => // this is the promise so don't have a return statement, it will be if and when  its ready\n    // better with es6\n    // console.log(res.json())\n    res.json()); // .then(res => enzo = res);\n  } // loadingFunc(bool) {\n  //   let myLovelyTimeout;\n  //   if (bool) {\n  //     myLovelyTimeout = setTimeout(() => {\n  //       this.setState({\n  //         isLoading: false\n  //       });\n  //     }, 1500);\n  //   } else {\n  //     clearTimeout(myLovelyTimeout);\n  //   }\n  // }\n\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.getThisTicker(\"AMZN\").then(blah => {\n      if (this._isMounted) {\n        console.log(\"woof\", blah[\"Time Series (5min)\"]);\n        this.setState({\n          isLoading: false\n        });\n      }\n    }); // // console.log(myTicker);\n    // this.loadingFunc(true);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const price = this.state.price; // this is a promise\n\n    return React.createElement(\"article\", {\n      className: \"portfolio-card\",\n      style: {\n        backgroundColor: data.bkgd\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(IsLoading, {\n      isLoading: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, data.title), React.createElement(\"h4\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, data.subtitle)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-style crb-input\",\n      type: \"text\",\n      placeholder: \"ticker\",\n      value: e => {\n        e;\n      },\n      onBlur: e => {\n        console.log(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => {\n        this.getPrice();\n      },\n      className: \"outline-btn accent mt-3 crb-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"price\"), price));\n  }\n\n}\n\nexport default CRBCard;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/board-app/src/components/crb/CRBCard.js"],"names":["React","IsLoading","imgCRB","require","data","id","img","title","subtitle","blurb","bkgd","CRBCard","Component","constructor","props","_isMounted","getTickerURL","ticker","state","price","isLoading","setPrice","bind","console","log","setState","prevState","getThisTicker","fetch","then","res","ok","Error","json","componentDidMount","blah","componentWillUnmount","render","backgroundColor","e","getPrice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IsLoading from \"../reusable/IsLoading\";\nconst imgCRB = require(\"../../assets/images/crb-img.png\");\nconst data = {\n  id: 3,\n  img: imgCRB,\n  title: \"CRB Pricer\",\n  subtitle: \"Central Risk Book Pricing and Trade Execution\",\n  blurb: [\"\"],\n  bkgd: \"var(--crb-bkgd)\"\n};\nclass CRBCard extends React.Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: 0,\n      ticker: this.ticker,\n      isLoading: true\n    };\n    // this.loadingFunc = this.loadingFunc.bind(this);\n    this.setPrice = this.setPrice.bind(this);\n    console.log(\"i am AMZN\", this.getTickerURL(\"AMZN\"));\n  }\n  getTickerURL = ticker =>\n    `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${ticker}&interval=5min&outputsize=full&apikey=NKT90SOYWKFBP04F`;\n\n  setPrice() {\n    this.setState(prevState => {\n      return {\n        price: prevState.price + 1\n      };\n    });\n  }\n  getThisTicker(ticker) {\n    return fetch(this.getTickerURL(ticker))\n      .then(res => {\n        // console.log(res);\n        if (!res.ok) {\n          throw Error(\n            \"sadface, the res doesnt want to be our friend, but dont feel bad.  btw im middleware\"\n          );\n        }\n        // console.log(res);\n        return res;\n      })\n      .then(res =>\n        // this is the promise so don't have a return statement, it will be if and when  its ready\n        // better with es6\n        // console.log(res.json())\n        res.json()\n      );\n    // .then(res => enzo = res);\n  }\n  // loadingFunc(bool) {\n  //   let myLovelyTimeout;\n  //   if (bool) {\n  //     myLovelyTimeout = setTimeout(() => {\n  //       this.setState({\n  //         isLoading: false\n  //       });\n  //     }, 1500);\n  //   } else {\n  //     clearTimeout(myLovelyTimeout);\n  //   }\n  // }\n  componentDidMount() {\n    this._isMounted = true;\n\n    this.getThisTicker(\"AMZN\").then(blah => {\n      if (this._isMounted) {\n        console.log(\"woof\", blah[\"Time Series (5min)\"]);\n        this.setState({ isLoading: false });\n      }\n    });\n\n    // // console.log(myTicker);\n    // this.loadingFunc(true);\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  render() {\n    const price = this.state.price;\n    // this is a promise\n\n    return (\n      <article\n        className=\"portfolio-card\"\n        style={{ backgroundColor: data.bkgd }}\n      >\n        <IsLoading isLoading={this.state.isLoading}></IsLoading>\n        <div className=\"text-section\">\n          <h1 className=\"title\">{data.title}</h1>\n          <h4 className=\"subtitle\">{data.subtitle}</h4>\n        </div>\n        <div>\n          <div className=\"input-group\">\n            <input\n              className=\"input-style crb-input\"\n              type=\"text\"\n              placeholder=\"ticker\"\n              value={e => {\n                e;\n              }}\n              onBlur={e => {\n                console.log(e);\n              }}\n            />\n          </div>\n          <button\n            onClick={() => {\n              this.getPrice();\n            }}\n            className=\"outline-btn accent mt-3 crb-button\"\n          >\n            price\n          </button>\n          {price}\n        </div>\n\n        {/* {props.data.divs} */}\n        {/* <div\n          style={{ backgroundColor: \"yellow\", width: \"50%\", height: \"15px\" }}\n        ></div> */}\n        {/* <div class=\"blurb-thumb\">\n          <p className=\"blurb\">{props.data.blurb}</p>\n          <div className=\"thumb\">\n            <img src={props.data.img} alt={props.data.subtitle} />\n          </div>\n        </div> */}\n      </article>\n    );\n  }\n}\n\nexport default CRBCard;\n"]},"metadata":{},"sourceType":"module"}