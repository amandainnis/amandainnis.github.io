{"ast":null,"code":"var _jsxFileName = \"/Users/amandainnis/ReactProjects/board-app/src/components/crb/CRBCard.js\";\nimport React from \"react\";\nimport IsLoading from \"../app-components/IsLoading\";\n\nconst imgCRB = require(\"../../images/crb-img.png\");\n\nconst data = {\n  id: 3,\n  img: imgCRB,\n  title: \"CRB Pricer\",\n  subtitle: \"Central Risk Book Pricing and Trade Execution\",\n  blurb: [\"\"],\n  bkgd: \"var(--crb-bkgd)\"\n};\n\nclass CRBCard extends React.Component {\n  constructor() {\n    super();\n\n    this.getTickerURL = ticker => \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(ticker, \"&interval=5min&outputsize=full&apikey=NKT90SOYWKFBP04F\");\n\n    this.state = {\n      price: 0,\n      ticker: this.ticker,\n      isLoading: true\n    };\n    this.setPrice = this.setPrice.bind(this);\n    console.log(\"i am AMZN\", this.getTickerURL(\"AMZN\"));\n  }\n\n  setPrice() {\n    this.setState(prevState => {\n      return {\n        price: prevState.price + 1\n      };\n    });\n  }\n\n  getThisTicker(ticker) {\n    return fetch(this.getTickerURL(ticker)).then(res => {\n      // console.log(res);\n      if (!res.ok) {\n        throw Error(\"sadface, the res doesnt want to be our friend, but dont feel bad.  btw im middleware\");\n      } // console.log(res);\n\n\n      return res;\n    }).then(res => // this is the promise so don't have a return statement, it will be if and when  its ready\n    // better with es6\n    // console.log(res.json())\n    res.json()); // .then(res => enzo = res);\n  }\n\n  componentDidMount() {\n    this.getThisTicker(\"AMZN\").then(blah => {\n      console.log(\"woof\", blah[\"Time Series (5min)\"]);\n    }); // console.log(myTicker);\n\n    setTimeout(() => {\n      return this.setState({\n        isLoading: false\n      });\n    }, 1500);\n  }\n\n  render() {\n    const price = this.state.price; // this is a promise\n\n    return React.createElement(\"article\", {\n      className: \"portfolio-card\",\n      style: {\n        backgroundColor: data.bkgd\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, data.title), React.createElement(\"h4\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, data.subtitle)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.setPrice,\n      className: \"outline-btn accent mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"price\"), price), React.createElement(IsLoading, {\n      isLoading: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CRBCard;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/board-app/src/components/crb/CRBCard.js"],"names":["React","IsLoading","imgCRB","require","data","id","img","title","subtitle","blurb","bkgd","CRBCard","Component","constructor","getTickerURL","ticker","state","price","isLoading","setPrice","bind","console","log","setState","prevState","getThisTicker","fetch","then","res","ok","Error","json","componentDidMount","blah","setTimeout","render","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,MAAMC,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,CADO;AAEXC,EAAAA,GAAG,EAAEJ,MAFM;AAGXK,EAAAA,KAAK,EAAE,YAHI;AAIXC,EAAAA,QAAQ,EAAE,+CAJC;AAKXC,EAAAA,KAAK,EAAE,CAAC,EAAD,CALI;AAMXC,EAAAA,IAAI,EAAE;AANK,CAAb;;AAQA,MAAMC,OAAN,SAAsBX,KAAK,CAACY,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,YAVc,GAUCC,MAAM,qFACuDA,MADvD,2DAVP;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXF,MAAAA,MAAM,EAAE,KAAKA,MAFF;AAGXG,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKR,YAAL,CAAkB,MAAlB,CAAzB;AACD;;AAIDK,EAAAA,QAAQ,GAAG;AACT,SAAKI,QAAL,CAAcC,SAAS,IAAI;AACzB,aAAO;AACLP,QAAAA,KAAK,EAAEO,SAAS,CAACP,KAAV,GAAkB;AADpB,OAAP;AAGD,KAJD;AAKD;;AACDQ,EAAAA,aAAa,CAACV,MAAD,EAAS;AACpB,WAAOW,KAAK,CAAC,KAAKZ,YAAL,CAAkBC,MAAlB,CAAD,CAAL,CACJY,IADI,CACCC,GAAG,IAAI;AACX;AACA,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAMC,KAAK,CACT,sFADS,CAAX;AAGD,OANU,CAOX;;;AACA,aAAOF,GAAP;AACD,KAVI,EAWJD,IAXI,CAWCC,GAAG,IACP;AACA;AACA;AACAA,IAAAA,GAAG,CAACG,IAAJ,EAfG,CAAP,CADoB,CAkBpB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,aAAL,CAAmB,MAAnB,EAA2BE,IAA3B,CAAgCM,IAAI,IAAI;AACtCZ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBW,IAAI,CAAC,oBAAD,CAAxB;AACD,KAFD,EADkB,CAIlB;;AACAC,IAAAA,UAAU,CAAC,MAAM;AACf,aAAO,KAAKX,QAAL,CAAc;AACnBL,QAAAA,SAAS,EAAE;AADQ,OAAd,CAAP;AAGD,KAJS,EAIP,IAJO,CAAV;AAKD;;AACDiB,EAAAA,MAAM,GAAG;AACP,UAAMlB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB,CADO,CAEP;;AAEA,WACE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,KAAK,EAAE;AAAEmB,QAAAA,eAAe,EAAEhC,IAAI,CAACM;AAAxB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBN,IAAI,CAACG,KAA5B,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BH,IAAI,CAACI,QAA/B,CAFF,CAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKW,QAAtB;AAAgC,MAAA,SAAS,EAAC,yBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIGF,KAJH,CARF,EAcE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF;AA4BD;;AArFmC;;AAwFtC,eAAeP,OAAf","sourcesContent":["import React from \"react\";\nimport IsLoading from \"../app-components/IsLoading\";\nconst imgCRB = require(\"../../images/crb-img.png\");\nconst data = {\n  id: 3,\n  img: imgCRB,\n  title: \"CRB Pricer\",\n  subtitle: \"Central Risk Book Pricing and Trade Execution\",\n  blurb: [\"\"],\n  bkgd: \"var(--crb-bkgd)\"\n};\nclass CRBCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      price: 0,\n      ticker: this.ticker,\n      isLoading: true\n    };\n    this.setPrice = this.setPrice.bind(this);\n    console.log(\"i am AMZN\", this.getTickerURL(\"AMZN\"));\n  }\n  getTickerURL = ticker =>\n    `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${ticker}&interval=5min&outputsize=full&apikey=NKT90SOYWKFBP04F`;\n\n  setPrice() {\n    this.setState(prevState => {\n      return {\n        price: prevState.price + 1\n      };\n    });\n  }\n  getThisTicker(ticker) {\n    return fetch(this.getTickerURL(ticker))\n      .then(res => {\n        // console.log(res);\n        if (!res.ok) {\n          throw Error(\n            \"sadface, the res doesnt want to be our friend, but dont feel bad.  btw im middleware\"\n          );\n        }\n        // console.log(res);\n        return res;\n      })\n      .then(res =>\n        // this is the promise so don't have a return statement, it will be if and when  its ready\n        // better with es6\n        // console.log(res.json())\n        res.json()\n      );\n    // .then(res => enzo = res);\n  }\n\n  componentDidMount() {\n    this.getThisTicker(\"AMZN\").then(blah => {\n      console.log(\"woof\", blah[\"Time Series (5min)\"]);\n    });\n    // console.log(myTicker);\n    setTimeout(() => {\n      return this.setState({\n        isLoading: false\n      });\n    }, 1500);\n  }\n  render() {\n    const price = this.state.price;\n    // this is a promise\n\n    return (\n      <article\n        className=\"portfolio-card\"\n        style={{ backgroundColor: data.bkgd }}\n      >\n        <div className=\"text-section\">\n          <h1 className=\"title\">{data.title}</h1>\n          <h4 className=\"subtitle\">{data.subtitle}</h4>\n        </div>\n        <div>\n          <button onClick={this.setPrice} className=\"outline-btn accent mt-3\">\n            price\n          </button>\n          {price}\n        </div>\n        <IsLoading isLoading={this.state.isLoading}></IsLoading>\n        {/* {props.data.divs} */}\n        {/* <div\n          style={{ backgroundColor: \"yellow\", width: \"50%\", height: \"15px\" }}\n        ></div> */}\n        {/* <div class=\"blurb-thumb\">\n          <p className=\"blurb\">{props.data.blurb}</p>\n          <div className=\"thumb\">\n            <img src={props.data.img} alt={props.data.subtitle} />\n          </div>\n        </div> */}\n      </article>\n    );\n  }\n}\n\nexport default CRBCard;\n"]},"metadata":{},"sourceType":"module"}