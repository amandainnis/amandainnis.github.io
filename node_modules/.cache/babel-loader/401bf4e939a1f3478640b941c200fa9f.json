{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChart.js\";\nimport React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as DataHandler from \"../../data/DataHandler\";\nimport * as moment from \"../../../node_modules/moment/moment\";\nexport default function LineChart() {\n  const lineChartData = [{\n    y2018: 36,\n    y2019: 56,\n    month: 1\n  }, {\n    y2018: 47,\n    y2019: 99,\n    month: 2\n  }, {\n    y2018: 80,\n    y2019: 105,\n    month: 3\n  }];\n  const chart = createRef();\n  const startValTicker = useRef();\n  const startValBenchmark = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n\n  const _useState = useState(DataHandler.alphaCaptureChartData),\n        _useState2 = _slicedToArray(_useState, 2),\n        chartData = _useState2[0],\n        setChartData = _useState2[1];\n\n  function numberFormatFn(d) {\n    return d;\n  }\n\n  function timeFormat(d) {\n    return chartData[d].niceDateAbbrev;\n  }\n\n  function getLineDiffValues(lineOne, lineTwo) {\n    return lineOne == null || lineTwo == null ? null : lineOne - lineTwo;\n  } // function getCurrentMonth() {\n  //   const date = new Date();\n  //   const currentMonthNumber = date.getMonth() + 1;\n  //   //console.log('i am current month number', currentMonthNumber);\n  //   return currentMonthNumber;\n  // }\n  // Math.min will assign null values to 0 so need to filter out null if want min to be actual min,\n  // but it may look better to have an actual zero\n\n\n  function prepMaxVal(myData, yLineOne, yLineTwo) {\n    let tempArr = [];\n\n    for (let i = 0; i < myData.length; i++) {\n      tempArr.push(myData[i][yLineOne], myData[i][yLineTwo]);\n      if (myData[i][yLineOne] !== null) tempArr.push(myData[i][yLineOne]);\n      if (myData[i][yLineTwo] !== null) tempArr.push(myData[i][yLineTwo]);\n    }\n\n    return tempArr;\n  }\n\n  function getMaxVal(myData, yLineOne, yLineTwo) {\n    let tempArr = prepMaxVal(myData, yLineOne, yLineTwo);\n    let tempArrB = prepMaxVal(myData, yLineOne, yLineTwo);\n    let tempMax = tempArr.reduce((a, b) => Math.max(a, b));\n    let tempMin = tempArrB.reduce((a, b) => Math.min(a, b));\n    console.log(tempMax, tempMin, tempArr);\n    return {\n      min: tempMin,\n      max: tempMax\n    };\n  }\n\n  function createChart(chartData, yLineOne, yLineTwo, numberFormatFn, xAxisKeyName) {\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    console.log(chartData);\n    let tempMinMax = getMaxVal(chartData, yLineOne, yLineTwo);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max; // let currentMonth = getCurrentMonth();\n\n    let margin = {\n      top: 20,\n      right: 60,\n      bottom: 0,\n      left: 10\n    }; //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n\n    let width = Number.isNaN(parseInt(d3.select(containerElement).style(\"width\"))) ? 0 : parseInt(d3.select(containerElement).style(\"width\")) - margin.left - margin.right;\n    let height = 220 - margin.top; // translates a function to d3, passes angular scope into d3\n    // tell format func that the function with \"this\" should be asscoiated with the currect ts component\n    //let bisectDate = d3.bisector((d) => timeFormat(d[xAxisKeyName])).left; // this would return the month, but we aren't using it right now\n\n    let justBisect = d3.bisector(d => d[xAxisKeyName]).left; //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n    let y = d3.scaleLinear().range([height, 0]); //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3.axisBottom(x) // .ticks(12)\n    .tickFormat(function (d) {\n      // console.log(d);\n      return timeFormat(d);\n    }).tickPadding(6);\n    let yAxis = d3.axisRight(y).tickFormat(d => {\n      return numberFormatFn(d);\n    }).ticks(6).tickPadding(6); //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    const CVprevYear = d3.line().defined(function (d) {\n      if (d[yLineOne] !== null) {\n        return d[yLineOne];\n      }\n    }).x(d => x(d[xAxisKeyName])).y(d => y(d[yLineOne]));\n    const CVcurrentYear = d3.line().defined(function (d) {\n      if (d[yLineTwo] !== null) {\n        return d[yLineTwo];\n      }\n    }).x(d => x(d[xAxisKeyName])).y(d => y(d[yLineTwo])); //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3.select(containerElement).append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", height + margin.top + margin.bottom + 40).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n    chartData.sort((a, b) => b[xAxisKeyName] - a[xAxisKeyName]); //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([parseInt(d3.min(chartData, d => d[xAxisKeyName])), parseInt(d3.max(chartData, d => d[xAxisKeyName]))]); // y.domain([minVal, maxVal]);\n\n    y.domain([0, maxVal]); //////////////////////// Append the lines / areas  ////////////////////////\n\n    CVsvg.append(\"path\").datum(chartData).attr(\"class\", \"lineOne line\").attr(\"d\", CVprevYear).transition().duration(500);\n    CVsvg.append(\"path\").datum(chartData).attr(\"class\", \"lineTwo line\").attr(\"d\", CVcurrentYear).transition().duration(500); ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\").attr(\"class\", \"yAxis\").attr(\"transform\", \"translate(\" + (width + 6) + \",0)\").call(yAxis);\n    CVsvg.append(\"g\").attr(\"class\", \"xAxis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis); //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\").attr(\"class\", \"mouse-line x\").style(\"opacity\", 0.5).attr(\"y1\", 0).attr(\"y2\", height);\n    const marker = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker.append(\"circle\").attr(\"class\", \"line-marker lineOne\").transition().duration(500).attr(\"r\", 5);\n    const marker2 = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker2.append(\"circle\").attr(\"class\", \"line-marker lineTwo\").transition().duration(500).attr(\"r\", 5); //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3.select(containerElement).append(\"div\").attr(\"class\", \"tooltipDiv\");\n    const dateContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    dateContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"Date\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const lineOneTextContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    lineOneTextContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"2018\");\n    lineOneTextContainer.append(\"div\").attr(\"class\", \"dot lineOne\");\n    const lineOneText = lineOneTextContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const lineTwoTextContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    lineTwoTextContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"2019\");\n    lineTwoTextContainer.append(\"div\").attr(\"class\", \"dot lineTwo\");\n    const lineTwoText = lineTwoTextContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const YOYContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    YOYContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"YOY\");\n    const YOYText = YOYContainer.append(\"div\"); //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\").on(\"mouseover\", () => {\n      lineTrace.style(\"display\", null);\n      d3.select(\".mouse-line\").style(\"opacity\", \"1\");\n      d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n    }).on(\"mousemove\", () => {\n      let xy = d3.mouse(d3.event.currentTarget); // let x0 = timeFormat(x.invert(xy[0]));\n      // let mouseIndex = bisectDate(chartData, x0, 1);\n\n      let x0 = x.invert(xy[0]);\n      let mouseIndex = justBisect(chartData, x0, 1);\n      let d0 = chartData[mouseIndex - 1];\n      let d1 = chartData[mouseIndex]; // lastValidDataPreviousYear = findlastValidDataCurrentYear(d0[yLineOne], d1[yLineOne], d0, lastValidDataPreviousYear, chartData[currentMonth - 1]);\n      // console.log('i am x0, d0[xAxisKeyName], d1,', x0, d0[xAxisKeyName], d1)\n      // console.log('i am x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear', x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear)\n\n      let d;\n\n      if (d1 !== undefined) {\n        d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0; // d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n      } else {\n        d = d0;\n      }\n\n      lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n      marker.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"); // marker.attr('transform', d[yLineOne] !== null ? 'translate(' + x(d[xAxisKeyName]) + ',' + y(d[yLineOne]) + ')' : 'translate(' + x(lastValidDataPreviousYear[xAxisKeyName]) + ',' + y(lastValidDataPreviousYear[yLineOne]) + ')');\n\n      marker2.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"); // marker2.attr(\n      //   \"transform\",\n      //   d[yLineTwo] !== null\n      //     ? \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n      //     : \"translate(\" +\n      //         x(lastValidDataCurrentYear[xAxisKeyName]) +\n      //         \",\" +\n      //         y(lastValidDataCurrentYear[yLineTwo]) +\n      //         \")\"\n      // );\n\n      YOYdiff = getLineDiffValues(d[yLineTwo], d[yLineOne], YOYdiff);\n      let YOYdiffColor = getYOYdiffColor(YOYdiff); // (d[yLineTwo] == null) ? YOYdiff = null : YOYdiff = numberFormatFn(d[yLineTwo] - d[yLineOne]);\n\n      let l1text = d[yLineOne] !== null ? numberFormatFn(d[yLineOne]) : \"\";\n      let l2text = d[yLineTwo] !== null ? numberFormatFn(d[yLineTwo]) : \"\";\n      YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n      lineOneText.text(l1text);\n      lineTwoText.text(l2text);\n      dateText.text(chartData[xAxisKeyName].niceDate, chartData[xAxisKeyName].niceTime);\n      YOYText.text(YOYdiff);\n      YOYText.attr(\"class\", YOYdiffColor);\n      d3.select(\".mouse-line.x\").attr(\"y2\", height);\n    }).attr(\"class\", \"totalRect\").attr(\"fill\", \"none\").attr(\"x\", 0).attr(\"pointer-events\", \"all\").attr(\"width\", width).attr(\"transform\", \"translate(0,0)\").attr(\"height\", height).transition().duration(500); //////////////////////// Set the data on load ////////////////////////\n    // d3.set().add(chartData[currentMonth - 1]);\n    // let d = chartData[currentMonth - 1];\n    // lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n    // marker.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    // );\n    // marker2.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n    // );\n    // YOYdiff = getLineDiffValues(d[yLineTwo], d[yLineOne], YOYdiff);\n    // let YOYdiffColor = getYOYdiffColor(YOYdiff);\n    // lineOneText.text(numberFormatFn(d[yLineOne]));\n    // lineTwoText.text(numberFormatFn(d[yLineTwo]));\n    // dateText.text(timeFormat(d[xAxisKeyName]));\n    // YOYText.text(numberFormatFn(YOYdiff));\n    // YOYText.attr(\"class\", YOYdiffColor);\n    // d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, \"price\", \"benchmark\", numberFormatFn, \"index\");\n  }, []);\n  return React.createElement(\"div\", {\n    ref: chart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChart.js"],"names":["React","createRef","useState","useRef","useEffect","d3","DataHandler","moment","LineChart","lineChartData","y2018","y2019","month","chart","startValTicker","startValBenchmark","defaultHeight","containerElement","alphaCaptureChartData","chartData","setChartData","numberFormatFn","d","timeFormat","niceDateAbbrev","getLineDiffValues","lineOne","lineTwo","prepMaxVal","myData","yLineOne","yLineTwo","tempArr","i","length","push","getMaxVal","tempArrB","tempMax","reduce","a","b","Math","max","tempMin","min","console","log","createChart","xAxisKeyName","current","innerHTML","tempMinMax","minVal","maxVal","margin","top","right","bottom","left","width","Number","isNaN","parseInt","select","style","height","justBisect","bisector","x","scaleLinear","range","y","xAxis","axisBottom","tickFormat","tickPadding","yAxis","axisRight","ticks","CVprevYear","line","defined","CVcurrentYear","CVsvg","append","attr","forEach","sort","domain","datum","transition","duration","call","lineTrace","marker","marker2","tooltipDiv","dateContainer","text","dateText","lineOneTextContainer","lineOneText","lineTwoTextContainer","lineTwoText","YOYContainer","YOYText","on","selectAll","xy","mouse","event","currentTarget","x0","invert","mouseIndex","d0","d1","undefined","YOYdiff","YOYdiffColor","getYOYdiffColor","l1text","l2text","niceDate","niceTime"],"mappings":"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","sourcesContent":["import React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as DataHandler from \"../../data/DataHandler\";\nimport * as moment from \"../../../node_modules/moment/moment\";\n\nexport default function LineChart() {\n  const lineChartData = [\n    { y2018: 36, y2019: 56, month: 1 },\n    { y2018: 47, y2019: 99, month: 2 },\n    { y2018: 80, y2019: 105, month: 3 }\n  ];\n  const chart = createRef();\n  const startValTicker = useRef();\n  const startValBenchmark = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n\n  const [chartData, setChartData] = useState(DataHandler.alphaCaptureChartData);\n\n  function numberFormatFn(d) {\n    return d;\n  }\n  function timeFormat(d) {\n    return chartData[d].niceDateAbbrev;\n  }\n  function getLineDiffValues(lineOne, lineTwo) {\n    return lineOne == null || lineTwo == null ? null : lineOne - lineTwo;\n  }\n  // function getCurrentMonth() {\n  //   const date = new Date();\n  //   const currentMonthNumber = date.getMonth() + 1;\n  //   //console.log('i am current month number', currentMonthNumber);\n  //   return currentMonthNumber;\n  // }\n\n  // Math.min will assign null values to 0 so need to filter out null if want min to be actual min,\n  // but it may look better to have an actual zero\n  function prepMaxVal(myData, yLineOne, yLineTwo) {\n    let tempArr = [];\n    for (let i = 0; i < myData.length; i++) {\n      tempArr.push(myData[i][yLineOne], myData[i][yLineTwo]);\n      if (myData[i][yLineOne] !== null) tempArr.push(myData[i][yLineOne]);\n      if (myData[i][yLineTwo] !== null) tempArr.push(myData[i][yLineTwo]);\n    }\n    return tempArr;\n  }\n  function getMaxVal(myData, yLineOne, yLineTwo) {\n    let tempArr = prepMaxVal(myData, yLineOne, yLineTwo);\n    let tempArrB = prepMaxVal(myData, yLineOne, yLineTwo);\n\n    let tempMax = tempArr.reduce((a, b) => Math.max(a, b));\n    let tempMin = tempArrB.reduce((a, b) => Math.min(a, b));\n    console.log(tempMax, tempMin, tempArr);\n    return { min: tempMin, max: tempMax };\n  }\n  function createChart(\n    chartData,\n    yLineOne,\n    yLineTwo,\n    numberFormatFn,\n    xAxisKeyName\n  ) {\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    console.log(chartData);\n    let tempMinMax = getMaxVal(chartData, yLineOne, yLineTwo);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max;\n    // let currentMonth = getCurrentMonth();\n    let margin = { top: 20, right: 60, bottom: 0, left: 10 };\n    //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n    let width = Number.isNaN(\n      parseInt(d3.select(containerElement).style(\"width\"))\n    )\n      ? 0\n      : parseInt(d3.select(containerElement).style(\"width\")) -\n        margin.left -\n        margin.right;\n    let height = 220 - margin.top;\n    // translates a function to d3, passes angular scope into d3\n    // tell format func that the function with \"this\" should be asscoiated with the currect ts component\n\n    //let bisectDate = d3.bisector((d) => timeFormat(d[xAxisKeyName])).left; // this would return the month, but we aren't using it right now\n    let justBisect = d3.bisector(d => d[xAxisKeyName]).left;\n\n    //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n\n    let y = d3.scaleLinear().range([height, 0]);\n\n    //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3\n      .axisBottom(x)\n      // .ticks(12)\n      .tickFormat(function(d) {\n        // console.log(d);\n        return timeFormat(d);\n      })\n      .tickPadding(6);\n\n    let yAxis = d3\n      .axisRight(y)\n      .tickFormat(d => {\n        return numberFormatFn(d);\n      })\n      .ticks(6)\n      .tickPadding(6);\n\n    //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    const CVprevYear = d3\n      .line()\n      .defined(function(d) {\n        if (d[yLineOne] !== null) {\n          return d[yLineOne];\n        }\n      })\n      .x(d => x(d[xAxisKeyName]))\n      .y(d => y(d[yLineOne]));\n\n    const CVcurrentYear = d3\n      .line()\n      .defined(function(d) {\n        if (d[yLineTwo] !== null) {\n          return d[yLineTwo];\n        }\n      })\n      .x(d => x(d[xAxisKeyName]))\n      .y(d => y(d[yLineTwo]));\n\n    //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3\n      .select(containerElement)\n      .append(\"svg\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", height + margin.top + margin.bottom + 40)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n\n    chartData.sort((a, b) => b[xAxisKeyName] - a[xAxisKeyName]);\n\n    //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([\n      parseInt(d3.min(chartData, d => d[xAxisKeyName])),\n      parseInt(d3.max(chartData, d => d[xAxisKeyName]))\n    ]);\n    // y.domain([minVal, maxVal]);\n    y.domain([0, maxVal]);\n    //////////////////////// Append the lines / areas  ////////////////////////\n\n    CVsvg.append(\"path\")\n      .datum(chartData)\n      .attr(\"class\", \"lineOne line\")\n      .attr(\"d\", CVprevYear)\n      .transition()\n      .duration(500);\n    CVsvg.append(\"path\")\n      .datum(chartData)\n      .attr(\"class\", \"lineTwo line\")\n      .attr(\"d\", CVcurrentYear)\n      .transition()\n      .duration(500);\n\n    ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n      .attr(\"transform\", \"translate(\" + (width + 6) + \",0)\")\n      .call(yAxis);\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"xAxis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\")\n      .attr(\"class\", \"mouse-line x\")\n      .style(\"opacity\", 0.5)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", height);\n\n    const marker = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n\n    marker\n      .append(\"circle\")\n      .attr(\"class\", \"line-marker lineOne\")\n      .transition()\n      .duration(500)\n      .attr(\"r\", 5);\n\n    const marker2 = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker2\n      .append(\"circle\")\n      .attr(\"class\", \"line-marker lineTwo\")\n      .transition()\n      .duration(500)\n      .attr(\"r\", 5);\n\n    //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3\n      .select(containerElement)\n      .append(\"div\")\n      .attr(\"class\", \"tooltipDiv\");\n    const dateContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    dateContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"Date\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const lineOneTextContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    lineOneTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"2018\");\n    lineOneTextContainer.append(\"div\").attr(\"class\", \"dot lineOne\");\n\n    const lineOneText = lineOneTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"value-text\");\n    const lineTwoTextContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    lineTwoTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"2019\");\n    lineTwoTextContainer.append(\"div\").attr(\"class\", \"dot lineTwo\");\n\n    const lineTwoText = lineTwoTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"value-text\");\n    const YOYContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    YOYContainer.append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"YOY\");\n    const YOYText = YOYContainer.append(\"div\");\n\n    //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\")\n      .on(\"mouseover\", () => {\n        lineTrace.style(\"display\", null);\n        d3.select(\".mouse-line\").style(\"opacity\", \"1\");\n        d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n      })\n      .on(\"mousemove\", () => {\n        let xy = d3.mouse(d3.event.currentTarget);\n        // let x0 = timeFormat(x.invert(xy[0]));\n        // let mouseIndex = bisectDate(chartData, x0, 1);\n        let x0 = x.invert(xy[0]);\n        let mouseIndex = justBisect(chartData, x0, 1);\n        let d0 = chartData[mouseIndex - 1];\n        let d1 = chartData[mouseIndex];\n        // lastValidDataPreviousYear = findlastValidDataCurrentYear(d0[yLineOne], d1[yLineOne], d0, lastValidDataPreviousYear, chartData[currentMonth - 1]);\n        // console.log('i am x0, d0[xAxisKeyName], d1,', x0, d0[xAxisKeyName], d1)\n\n        // console.log('i am x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear', x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear)\n        let d;\n        if (d1 !== undefined) {\n          d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n          // d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n        } else {\n          d = d0;\n        }\n\n        lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n        marker.attr(\n          \"transform\",\n          \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n        );\n        // marker.attr('transform', d[yLineOne] !== null ? 'translate(' + x(d[xAxisKeyName]) + ',' + y(d[yLineOne]) + ')' : 'translate(' + x(lastValidDataPreviousYear[xAxisKeyName]) + ',' + y(lastValidDataPreviousYear[yLineOne]) + ')');\n        marker2.attr(\n          \"transform\",\n          \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n        );\n        // marker2.attr(\n        //   \"transform\",\n        //   d[yLineTwo] !== null\n        //     ? \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n        //     : \"translate(\" +\n        //         x(lastValidDataCurrentYear[xAxisKeyName]) +\n        //         \",\" +\n        //         y(lastValidDataCurrentYear[yLineTwo]) +\n        //         \")\"\n        // );\n\n        YOYdiff = getLineDiffValues(d[yLineTwo], d[yLineOne], YOYdiff);\n        let YOYdiffColor = getYOYdiffColor(YOYdiff);\n        // (d[yLineTwo] == null) ? YOYdiff = null : YOYdiff = numberFormatFn(d[yLineTwo] - d[yLineOne]);\n        let l1text = d[yLineOne] !== null ? numberFormatFn(d[yLineOne]) : \"\";\n        let l2text = d[yLineTwo] !== null ? numberFormatFn(d[yLineTwo]) : \"\";\n        YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n        lineOneText.text(l1text);\n        lineTwoText.text(l2text);\n        dateText.text(\n          chartData[xAxisKeyName].niceDate,\n          chartData[xAxisKeyName].niceTime\n        );\n        YOYText.text(YOYdiff);\n        YOYText.attr(\"class\", YOYdiffColor);\n\n        d3.select(\".mouse-line.x\").attr(\"y2\", height);\n      })\n      .attr(\"class\", \"totalRect\")\n      .attr(\"fill\", \"none\")\n      .attr(\"x\", 0)\n      .attr(\"pointer-events\", \"all\")\n      .attr(\"width\", width)\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"height\", height)\n      .transition()\n      .duration(500);\n\n    //////////////////////// Set the data on load ////////////////////////\n\n    // d3.set().add(chartData[currentMonth - 1]);\n    // let d = chartData[currentMonth - 1];\n    // lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n\n    // marker.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    // );\n    // marker2.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n    // );\n\n    // YOYdiff = getLineDiffValues(d[yLineTwo], d[yLineOne], YOYdiff);\n    // let YOYdiffColor = getYOYdiffColor(YOYdiff);\n\n    // lineOneText.text(numberFormatFn(d[yLineOne]));\n    // lineTwoText.text(numberFormatFn(d[yLineTwo]));\n    // dateText.text(timeFormat(d[xAxisKeyName]));\n    // YOYText.text(numberFormatFn(YOYdiff));\n    // YOYText.attr(\"class\", YOYdiffColor);\n\n    // d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, \"price\", \"benchmark\", numberFormatFn, \"index\");\n  }, []);\n\n  return <div ref={chart}></div>;\n}\n"]},"metadata":{},"sourceType":"module"}