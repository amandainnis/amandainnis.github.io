{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChart.js\";\nimport React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as moment from \"moment\"; // TODO get rid of startvals ref\n\nexport default function LineChart(props) {\n  const chart = createRef();\n  const defaultHeight = 220;\n  var containerElement;\n  let YOYdiff;\n\n  const _useState = useState(props.data),\n        _useState2 = _slicedToArray(_useState, 2),\n        chartData = _useState2[0],\n        setChartData = _useState2[1];\n\n  const _useState3 = useState(props.valueArray),\n        _useState4 = _slicedToArray(_useState3, 2),\n        valueArray = _useState4[0],\n        setValueArray = _useState4[1]; // const [startVals, setStartVals] = useState([]);\n  // var startValsRef = useRef([]);\n\n\n  function numberFormatFn(d) {\n    return \"$\" + d;\n  } // function getLineDiffValue(line0, lineTwo) {\n  //   return line0 == null || lineTwo == null ? null : line0 - lineTwo;\n  // }\n\n\n  function getYOYdiffColor(YOY) {\n    if (YOY < 0) {\n      return \"YOYred\";\n    } else {\n      return \"YOYgreen\";\n    }\n  }\n\n  function prepMaxVal(myData, myArrayOfKeys) {\n    let tempArr = [];\n    let tempStartVal = [];\n\n    for (let i = 0; i < myData.length; i++) {\n      // push whatever arr[j] is in the array as a key into\n      for (let j = 0; j < myArrayOfKeys.length; j++) {\n        if (myData[i][myArrayOfKeys[j]] !== null) {\n          tempArr.push(myData[i][myArrayOfKeys[j]]);\n        }\n      }\n    } // startValsRef = tempStartVal;\n    // setStartVals(tempStartVal);\n\n\n    return tempArr;\n  }\n\n  function getMaxVal(myData, myArrayOfKeys) {\n    // console.log(startVals, startValsRef);\n    let tempArr = prepMaxVal(myData, myArrayOfKeys);\n    let tempArrB = prepMaxVal(myData, myArrayOfKeys);\n    let tempMax = tempArr.reduce((a, b) => Math.max(a, b));\n    let tempMin = tempArrB.reduce((a, b) => Math.min(a, b));\n    return {\n      min: tempMin,\n      max: tempMax\n    };\n  }\n\n  function createChart(chartData, myArrayOfKeys, myID) {\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    let tempMinMax = getMaxVal(chartData, myArrayOfKeys);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max; // let currentMonth = getCurrentMonth();\n\n    let margin = {\n      top: 20,\n      right: 60,\n      bottom: 0,\n      left: 10\n    }; //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n\n    let width = Number.isNaN(parseInt(d3.select(containerElement).style(\"width\"))) ? 0 : parseInt(d3.select(containerElement).style(\"width\")) - margin.left - margin.right;\n    let height = 220 - margin.top;\n    let justBisect = d3.bisector(d => chartData.indexOf(d)).left; //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n    let y = d3.scaleLinear().range([height, 0]); //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3.axisBottom(x) // .ticks(12)\n    .tickFormat(function (d) {\n      return chartData[d].niceDateAbbrev;\n    }).tickPadding(6);\n    let yAxis = d3.axisRight(y).tickFormat(d => {\n      return numberFormatFn(d);\n    }).ticks(6).tickPadding(6); //////////////////////// Define the lines and/or areas  ////////////////////////\n    // put consts of the lines into the global scope\n\n    function createLineConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(d3.line().defined(function (d) {\n          if (d[val] !== null) {\n            return d[val];\n          }\n        }).x((d, i) => {\n          return x(i);\n        }).y(d => y(d[val])));\n      });\n      return myArr;\n    }\n\n    const lineConst = createLineConsts(); // //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3.select(containerElement).append(\"svg\").attr(\"id\", myID).attr(\"width\", \"100%\").attr(\"height\", height + margin.top + margin.bottom + 40).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // // //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    }); // // //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([parseInt(d3.min(chartData, (d, i) => i)), parseInt(d3.max(chartData, (d, i) => i))]);\n    y.domain([minVal - Math.abs(minVal) / 10, maxVal]); // y.domain([0, maxVal]);\n    // // //////////////////////// Append the lines / areas  ////////////////////////\n\n    myArrayOfKeys.forEach((item, index) => {\n      CVsvg.append(\"path\").datum(chartData).attr(\"class\", \"line\".concat(index, \" line\")).attr(\"d\", lineConst[index]).transition().duration(500);\n    }); // // ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\").attr(\"class\", \"yAxis\").attr(\"transform\", \"translate(\" + (width + 6) + \",0)\").call(yAxis);\n    CVsvg.append(\"g\").attr(\"class\", \"xAxis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis); // // //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\").attr(\"class\", \"mouse-line x\").style(\"opacity\", 0.5).attr(\"y1\", 0).attr(\"y2\", height);\n\n    function createMarkers() {\n      myArrayOfKeys.forEach((val, index) => {\n        CVsvg.append(\"g\").attr(\"class\", \"marker\".concat(index)).append(\"circle\").attr(\"class\", \"line-marker line\".concat(index)).transition().duration(500).attr(\"r\", 5);\n      });\n    }\n\n    createMarkers(); // // //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3.select(containerElement).append(\"div\").attr(\"class\", \"tooltipDiv\").attr(\"id\", \"\".concat(myID, \"Tooltip\"));\n    const dateContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    dateContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"Date\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n\n    function createLineDivTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(tooltipDiv.append(\"div\").attr(\"class\", \"text-container\"));\n      });\n      return myArr;\n    }\n\n    const lineTextContainer = createLineDivTextConsts();\n    myArrayOfKeys.forEach((val, index) => {\n      lineTextContainer[index].append(\"div\").attr(\"class\", \"label-style mr-1\").text(val);\n      lineTextContainer[index].append(\"div\").attr(\"class\", \"dot line\".concat(index));\n    });\n\n    function createLineTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((item, index) => {\n        myArr.push(lineTextContainer[index].append(\"div\").attr(\"class\", \"value-text lineTextConst\".concat(index)));\n      });\n      return myArr;\n    }\n\n    const lineTextConsts = createLineTextConsts(); // const YOYContainer = tooltipDiv\n    //   .append(\"div\")\n    //   .attr(\"class\", \"text-container\");\n    // YOYContainer.append(\"div\")\n    //   .attr(\"class\", \"label-style mr-1\")\n    //   .text(\"YOY\");\n    // const YOYText = YOYContainer.append(\"div\");\n    // //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\").on(\"mouseover\", () => {\n      lineTrace.style(\"display\", null);\n      d3.select(\"#\".concat(myID, \" .mouse-line\")).style(\"opacity\", \"1\"); // d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n    }).on(\"mousemove\", () => {\n      let xy = d3.mouse(d3.event.currentTarget);\n      let x0 = x.invert(xy[0]);\n      let mouseIndex = justBisect(chartData, x0, 1);\n      let d0 = chartData[mouseIndex - 1];\n      let d1 = chartData[mouseIndex];\n      let d;\n\n      if (d1 !== undefined) {\n        d = x0 - chartData.indexOf(d0) > chartData.indexOf(d1) - x0 ? d1 : d0;\n      } else {\n        d = d0;\n      }\n\n      lineTrace.attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",0)\");\n      myArrayOfKeys.forEach((item, index) => {\n        d3.select(\"#\".concat(myID, \" .marker\").concat(index)).attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",\" + y(d[myArrayOfKeys[index]]) + \")\");\n      });\n      myArrayOfKeys.forEach((item, index) => {\n        let myText = d[myArrayOfKeys[index]] !== null ? numberFormatFn(d[myArrayOfKeys[index]]) : \"\";\n        d3.select(\"#\".concat(myID, \"Tooltip .lineTextConst\").concat(index)).text(myText);\n      }); // // YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n\n      dateText.text(d.niceDate + \" \" + d.niceTime); // // YOYText.text(YOYdiff);\n      // // YOYText.attr(\"class\", YOYdiffColor);\n\n      d3.select(\"#\".concat(myID, \" .mouse-line\")).attr(\"y2\", height);\n    }).on(\"mouseleave\", () => {\n      d3.select(\"#\".concat(myID, \" .mouse-line\")).style(\"opacity\", \".5\");\n    }).attr(\"class\", \"totalRect\").attr(\"fill\", \"none\").attr(\"x\", 0).attr(\"pointer-events\", \"all\").attr(\"width\", width).attr(\"transform\", \"translate(0,0)\").attr(\"height\", height).transition().duration(500); // //////////////////////// Set the data on load ////////////////////////\n\n    d3.set().add(chartData[chartData.length - 1]);\n    let d = chartData[chartData.length - 1];\n    lineTrace.attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",0)\");\n    myArrayOfKeys.forEach((item, index) => {\n      d3.select(\"#\".concat(myID, \" .marker\").concat(index)).attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",\" + y(d[myArrayOfKeys[index]]) + \")\");\n    });\n    myArrayOfKeys.forEach((item, index) => {\n      let myText = d[myArrayOfKeys[index]] !== null ? numberFormatFn(d[myArrayOfKeys[index]]) : \"\";\n      d3.select(\"#\".concat(myID, \"Tooltip .lineTextConst\").concat(index)).text(myText);\n    });\n    dateText.text(d.niceDate + \" \" + d.niceTime); // // YOYText.text(YOYdiff);\n    // // YOYText.attr(\"class\", YOYdiffColor);\n\n    d3.select(\"#\".concat(myID, \" .mouse-line\")).attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, valueArray, props.myID);\n  }, []);\n  return React.createElement(\"div\", {\n    ref: chart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChart.js"],"names":["React","createRef","useState","useRef","useEffect","d3","moment","LineChart","props","chart","defaultHeight","containerElement","YOYdiff","data","chartData","setChartData","valueArray","setValueArray","numberFormatFn","d","getYOYdiffColor","YOY","prepMaxVal","myData","myArrayOfKeys","tempArr","tempStartVal","i","length","j","push","getMaxVal","tempArrB","tempMax","reduce","a","b","Math","max","tempMin","min","createChart","myID","current","innerHTML","tempMinMax","minVal","maxVal","margin","top","right","bottom","left","width","Number","isNaN","parseInt","select","style","height","justBisect","bisector","indexOf","x","scaleLinear","range","y","xAxis","axisBottom","tickFormat","niceDateAbbrev","tickPadding","yAxis","axisRight","ticks","createLineConsts","myArr","map","val","index","line","defined","lineConst","CVsvg","append","attr","forEach","domain","abs","item","datum","transition","duration","call","lineTrace","createMarkers","tooltipDiv","dateContainer","text","dateText","createLineDivTextConsts","lineTextContainer","createLineTextConsts","lineTextConsts","on","xy","mouse","event","currentTarget","x0","invert","mouseIndex","d0","d1","undefined","myText","niceDate","niceTime","set","add"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB,C,CAEA;;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAMC,KAAK,GAAGR,SAAS,EAAvB;AAEA,QAAMS,aAAa,GAAG,GAAtB;AACA,MAAIC,gBAAJ;AACA,MAAIC,OAAJ;;AALuC,oBAMLV,QAAQ,CAACM,KAAK,CAACK,IAAP,CANH;AAAA;AAAA,QAMhCC,SANgC;AAAA,QAMrBC,YANqB;;AAAA,qBAOHb,QAAQ,CAACM,KAAK,CAACQ,UAAP,CAPL;AAAA;AAAA,QAOhCA,UAPgC;AAAA,QAOpBC,aAPoB,kBAQvC;AACA;;;AACA,WAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,WAAO,MAAMA,CAAb;AACD,GAZsC,CAcvC;AACA;AACA;;;AACA,WAASC,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,QAAIA,GAAG,GAAG,CAAV,EAAa;AACX,aAAO,QAAP;AACD,KAFD,MAEO;AACL,aAAO,UAAP;AACD;AACF;;AACD,WAASC,UAAT,CAAoBC,MAApB,EAA4BC,aAA5B,EAA2C;AACzC,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,aAAa,CAACI,MAAlC,EAA0CC,CAAC,EAA3C,EAA+C;AAC7C,YAAIN,MAAM,CAACI,CAAD,CAAN,CAAUH,aAAa,CAACK,CAAD,CAAvB,MAAgC,IAApC,EAA0C;AACxCJ,UAAAA,OAAO,CAACK,IAAR,CAAaP,MAAM,CAACI,CAAD,CAAN,CAAUH,aAAa,CAACK,CAAD,CAAvB,CAAb;AACD;AACF;AACF,KAVwC,CAWzC;AACA;;;AACA,WAAOJ,OAAP;AACD;;AAED,WAASM,SAAT,CAAmBR,MAAnB,EAA2BC,aAA3B,EAA0C;AACxC;AACA,QAAIC,OAAO,GAAGH,UAAU,CAACC,MAAD,EAASC,aAAT,CAAxB;AACA,QAAIQ,QAAQ,GAAGV,UAAU,CAACC,MAAD,EAASC,aAAT,CAAzB;AAEA,QAAIS,OAAO,GAAGR,OAAO,CAACS,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUC,IAAI,CAACC,GAAL,CAASH,CAAT,EAAYC,CAAZ,CAAzB,CAAd;AACA,QAAIG,OAAO,GAAGP,QAAQ,CAACE,MAAT,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUC,IAAI,CAACG,GAAL,CAASL,CAAT,EAAYC,CAAZ,CAA1B,CAAd;AACA,WAAO;AAAEI,MAAAA,GAAG,EAAED,OAAP;AAAgBD,MAAAA,GAAG,EAAEL;AAArB,KAAP;AACD;;AACD,WAASQ,WAAT,CAAqB3B,SAArB,EAAgCU,aAAhC,EAA+CkB,IAA/C,EAAqD;AACnD/B,IAAAA,gBAAgB,GAAGF,KAAK,CAACkC,OAAzB;AACAhC,IAAAA,gBAAgB,CAACiC,SAAjB,GAA6B,EAA7B;AACA,QAAIC,UAAU,GAAGd,SAAS,CAACjB,SAAD,EAAYU,aAAZ,CAA1B;AACA,QAAIsB,MAAM,GAAGD,UAAU,CAACL,GAAxB;AACA,QAAIO,MAAM,GAAGF,UAAU,CAACP,GAAxB,CALmD,CAMnD;;AACA,QAAIU,MAAM,GAAG;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,MAAM,EAAE,CAA9B;AAAiCC,MAAAA,IAAI,EAAE;AAAvC,KAAb,CAPmD,CAQnD;;AACA,QAAIC,KAAK,GAAGC,MAAM,CAACC,KAAP,CACVC,QAAQ,CAACnD,EAAE,CAACoD,MAAH,CAAU9C,gBAAV,EAA4B+C,KAA5B,CAAkC,OAAlC,CAAD,CADE,IAGR,CAHQ,GAIRF,QAAQ,CAACnD,EAAE,CAACoD,MAAH,CAAU9C,gBAAV,EAA4B+C,KAA5B,CAAkC,OAAlC,CAAD,CAAR,GACAV,MAAM,CAACI,IADP,GAEAJ,MAAM,CAACE,KANX;AAOA,QAAIS,MAAM,GAAG,MAAMX,MAAM,CAACC,GAA1B;AACA,QAAIW,UAAU,GAAGvD,EAAE,CAACwD,QAAH,CAAY1C,CAAC,IAAIL,SAAS,CAACgD,OAAV,CAAkB3C,CAAlB,CAAjB,EAAuCiC,IAAxD,CAjBmD,CAmBnD;;AAEA,QAAIW,CAAC,GAAG1D,EAAE,CAAC2D,WAAH,GAAiBC,KAAjB,CAAuB,CAAC,CAAD,EAAIZ,KAAJ,CAAvB,CAAR;AACA,QAAIa,CAAC,GAAG7D,EAAE,CAAC2D,WAAH,GAAiBC,KAAjB,CAAuB,CAACN,MAAD,EAAS,CAAT,CAAvB,CAAR,CAtBmD,CAwBnD;;AAEA,QAAIQ,KAAK,GAAG9D,EAAE,CACX+D,UADS,CACEL,CADF,EAEV;AAFU,KAGTM,UAHS,CAGE,UAASlD,CAAT,EAAY;AACtB,aAAOL,SAAS,CAACK,CAAD,CAAT,CAAamD,cAApB;AACD,KALS,EAMTC,WANS,CAMG,CANH,CAAZ;AAQA,QAAIC,KAAK,GAAGnE,EAAE,CACXoE,SADS,CACCP,CADD,EAETG,UAFS,CAEElD,CAAC,IAAI;AACf,aAAOD,cAAc,CAACC,CAAD,CAArB;AACD,KAJS,EAKTuD,KALS,CAKH,CALG,EAMTH,WANS,CAMG,CANH,CAAZ,CAlCmD,CA0CnD;AAEA;;AACA,aAASI,gBAAT,GAA4B;AAC1B,UAAIC,KAAK,GAAG,EAAZ;AACApD,MAAAA,aAAa,CAACqD,GAAd,CAAkB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChCH,QAAAA,KAAK,CAAC9C,IAAN,CACEzB,EAAE,CACC2E,IADH,GAEGC,OAFH,CAEW,UAAS9D,CAAT,EAAY;AACnB,cAAIA,CAAC,CAAC2D,GAAD,CAAD,KAAW,IAAf,EAAqB;AACnB,mBAAO3D,CAAC,CAAC2D,GAAD,CAAR;AACD;AACF,SANH,EAOGf,CAPH,CAOK,CAAC5C,CAAD,EAAIQ,CAAJ,KAAU;AACX,iBAAOoC,CAAC,CAACpC,CAAD,CAAR;AACD,SATH,EAUGuC,CAVH,CAUK/C,CAAC,IAAI+C,CAAC,CAAC/C,CAAC,CAAC2D,GAAD,CAAF,CAVX,CADF;AAaD,OAdD;AAeA,aAAOF,KAAP;AACD;;AAED,UAAMM,SAAS,GAAGP,gBAAgB,EAAlC,CAjEmD,CAmEnD;;AAEA,UAAMQ,KAAK,GAAG9E,EAAE,CACboD,MADW,CACJ9C,gBADI,EAEXyE,MAFW,CAEJ,KAFI,EAGXC,IAHW,CAGN,IAHM,EAGA3C,IAHA,EAIX2C,IAJW,CAIN,OAJM,EAIG,MAJH,EAKXA,IALW,CAKN,QALM,EAKI1B,MAAM,GAAGX,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACG,MAA7B,GAAsC,EAL1C,EAMXiC,MANW,CAMJ,GANI,EAOXC,IAPW,CAON,WAPM,EAOO,eAAerC,MAAM,CAACI,IAAtB,GAA6B,GAA7B,GAAmCJ,MAAM,CAACC,GAA1C,GAAgD,GAPvD,CAAd,CArEmD,CA8EnD;;AAEAnC,IAAAA,SAAS,CAACwE,OAAV,CAAkBnE,CAAC,IAAI;AACrBA,MAAAA,CAAC,GAAG,CAACA,CAAL;AACD,KAFD,EAhFmD,CAoFnD;;AAEA4C,IAAAA,CAAC,CAACwB,MAAF,CAAS,CACP/B,QAAQ,CAACnD,EAAE,CAACmC,GAAH,CAAO1B,SAAP,EAAkB,CAACK,CAAD,EAAIQ,CAAJ,KAAUA,CAA5B,CAAD,CADD,EAEP6B,QAAQ,CAACnD,EAAE,CAACiC,GAAH,CAAOxB,SAAP,EAAkB,CAACK,CAAD,EAAIQ,CAAJ,KAAUA,CAA5B,CAAD,CAFD,CAAT;AAIAuC,IAAAA,CAAC,CAACqB,MAAF,CAAS,CAACzC,MAAM,GAAGT,IAAI,CAACmD,GAAL,CAAS1C,MAAT,IAAmB,EAA7B,EAAiCC,MAAjC,CAAT,EA1FmD,CA2FnD;AAEA;;AAEAvB,IAAAA,aAAa,CAAC8D,OAAd,CAAsB,CAACG,IAAD,EAAOV,KAAP,KAAiB;AACrCI,MAAAA,KAAK,CAACC,MAAN,CAAa,MAAb,EACGM,KADH,CACS5E,SADT,EAEGuE,IAFH,CAEQ,OAFR,gBAEwBN,KAFxB,YAGGM,IAHH,CAGQ,GAHR,EAGaH,SAAS,CAACH,KAAD,CAHtB,EAIGY,UAJH,GAKGC,QALH,CAKY,GALZ;AAMD,KAPD,EA/FmD,CAwGnD;;AAEAT,IAAAA,KAAK,CAACC,MAAN,CAAa,GAAb,EACGC,IADH,CACQ,OADR,EACiB,OADjB,EAEGA,IAFH,CAEQ,WAFR,EAEqB,gBAAgBhC,KAAK,GAAG,CAAxB,IAA6B,KAFlD,EAGGwC,IAHH,CAGQrB,KAHR;AAKAW,IAAAA,KAAK,CAACC,MAAN,CAAa,GAAb,EACGC,IADH,CACQ,OADR,EACiB,OADjB,EAEGA,IAFH,CAEQ,WAFR,EAEqB,iBAAiB1B,MAAjB,GAA0B,GAF/C,EAGGkC,IAHH,CAGQ1B,KAHR,EA/GmD,CAoHnD;;AAEA,UAAM2B,SAAS,GAAGX,KAAK,CAACC,MAAN,CAAa,MAAb,EACfC,IADe,CACV,OADU,EACD,cADC,EAEf3B,KAFe,CAET,SAFS,EAEE,GAFF,EAGf2B,IAHe,CAGV,IAHU,EAGJ,CAHI,EAIfA,IAJe,CAIV,IAJU,EAIJ1B,MAJI,CAAlB;;AAMA,aAASoC,aAAT,GAAyB;AACvBvE,MAAAA,aAAa,CAAC8D,OAAd,CAAsB,CAACR,GAAD,EAAMC,KAAN,KAAgB;AACpCI,QAAAA,KAAK,CAACC,MAAN,CAAa,GAAb,EACGC,IADH,CACQ,OADR,kBAC0BN,KAD1B,GAEGK,MAFH,CAEU,QAFV,EAGGC,IAHH,CAGQ,OAHR,4BAGoCN,KAHpC,GAIGY,UAJH,GAKGC,QALH,CAKY,GALZ,EAMGP,IANH,CAMQ,GANR,EAMa,CANb;AAOD,OARD;AASD;;AAEDU,IAAAA,aAAa,GAxIsC,CAyInD;;AAEA,UAAMC,UAAU,GAAG3F,EAAE,CAClBoD,MADgB,CACT9C,gBADS,EAEhByE,MAFgB,CAET,KAFS,EAGhBC,IAHgB,CAGX,OAHW,EAGF,YAHE,EAIhBA,IAJgB,CAIX,IAJW,YAIF3C,IAJE,aAAnB;AAKA,UAAMuD,aAAa,GAAGD,UAAU,CAC7BZ,MADmB,CACZ,KADY,EAEnBC,IAFmB,CAEd,OAFc,EAEL,gBAFK,CAAtB;AAGAY,IAAAA,aAAa,CACVb,MADH,CACU,KADV,EAEGC,IAFH,CAEQ,OAFR,EAEiB,kBAFjB,EAGGa,IAHH,CAGQ,MAHR;AAIA,UAAMC,QAAQ,GAAGF,aAAa,CAACb,MAAd,CAAqB,KAArB,EAA4BC,IAA5B,CAAiC,OAAjC,EAA0C,YAA1C,CAAjB;;AAEA,aAASe,uBAAT,GAAmC;AACjC,UAAIxB,KAAK,GAAG,EAAZ;AACApD,MAAAA,aAAa,CAACqD,GAAd,CAAkB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChCH,QAAAA,KAAK,CAAC9C,IAAN,CAAWkE,UAAU,CAACZ,MAAX,CAAkB,KAAlB,EAAyBC,IAAzB,CAA8B,OAA9B,EAAuC,gBAAvC,CAAX;AACD,OAFD;AAGA,aAAOT,KAAP;AACD;;AACD,UAAMyB,iBAAiB,GAAGD,uBAAuB,EAAjD;AAEA5E,IAAAA,aAAa,CAAC8D,OAAd,CAAsB,CAACR,GAAD,EAAMC,KAAN,KAAgB;AACpCsB,MAAAA,iBAAiB,CAACtB,KAAD,CAAjB,CACGK,MADH,CACU,KADV,EAEGC,IAFH,CAEQ,OAFR,EAEiB,kBAFjB,EAGGa,IAHH,CAGQpB,GAHR;AAKAuB,MAAAA,iBAAiB,CAACtB,KAAD,CAAjB,CAAyBK,MAAzB,CAAgC,KAAhC,EAAuCC,IAAvC,CAA4C,OAA5C,oBAAgEN,KAAhE;AACD,KAPD;;AASA,aAASuB,oBAAT,GAAgC;AAC9B,UAAI1B,KAAK,GAAG,EAAZ;AACApD,MAAAA,aAAa,CAACqD,GAAd,CAAkB,CAACY,IAAD,EAAOV,KAAP,KAAiB;AACjCH,QAAAA,KAAK,CAAC9C,IAAN,CACEuE,iBAAiB,CAACtB,KAAD,CAAjB,CACGK,MADH,CACU,KADV,EAEGC,IAFH,CAEQ,OAFR,oCAE4CN,KAF5C,EADF;AAKD,OAND;AAOA,aAAOH,KAAP;AACD;;AACD,UAAM2B,cAAc,GAAGD,oBAAoB,EAA3C,CAtLmD,CAuLnD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAnB,IAAAA,KAAK,CAACC,MAAN,CAAa,MAAb,EACGoB,EADH,CACM,WADN,EACmB,MAAM;AACrBV,MAAAA,SAAS,CAACpC,KAAV,CAAgB,SAAhB,EAA2B,IAA3B;AACArD,MAAAA,EAAE,CAACoD,MAAH,YAAcf,IAAd,mBAAkCgB,KAAlC,CAAwC,SAAxC,EAAmD,GAAnD,EAFqB,CAGrB;AACD,KALH,EAMG8C,EANH,CAMM,WANN,EAMmB,MAAM;AACrB,UAAIC,EAAE,GAAGpG,EAAE,CAACqG,KAAH,CAASrG,EAAE,CAACsG,KAAH,CAASC,aAAlB,CAAT;AAEA,UAAIC,EAAE,GAAG9C,CAAC,CAAC+C,MAAF,CAASL,EAAE,CAAC,CAAD,CAAX,CAAT;AACA,UAAIM,UAAU,GAAGnD,UAAU,CAAC9C,SAAD,EAAY+F,EAAZ,EAAgB,CAAhB,CAA3B;AACA,UAAIG,EAAE,GAAGlG,SAAS,CAACiG,UAAU,GAAG,CAAd,CAAlB;AACA,UAAIE,EAAE,GAAGnG,SAAS,CAACiG,UAAD,CAAlB;AACA,UAAI5F,CAAJ;;AACA,UAAI8F,EAAE,KAAKC,SAAX,EAAsB;AACpB/F,QAAAA,CAAC,GAAG0F,EAAE,GAAG/F,SAAS,CAACgD,OAAV,CAAkBkD,EAAlB,CAAL,GAA6BlG,SAAS,CAACgD,OAAV,CAAkBmD,EAAlB,IAAwBJ,EAArD,GAA0DI,EAA1D,GAA+DD,EAAnE;AACD,OAFD,MAEO;AACL7F,QAAAA,CAAC,GAAG6F,EAAJ;AACD;;AAEDlB,MAAAA,SAAS,CAACT,IAAV,CACE,WADF,EAEE,eAAetB,CAAC,CAACjD,SAAS,CAACgD,OAAV,CAAkB3C,CAAlB,CAAD,CAAhB,GAAyC,KAF3C;AAIAK,MAAAA,aAAa,CAAC8D,OAAd,CAAsB,CAACG,IAAD,EAAOV,KAAP,KAAiB;AACrC1E,QAAAA,EAAE,CAACoD,MAAH,YAAcf,IAAd,qBAA6BqC,KAA7B,GAAsCM,IAAtC,CACE,WADF,EAEE,eACEtB,CAAC,CAACjD,SAAS,CAACgD,OAAV,CAAkB3C,CAAlB,CAAD,CADH,GAEE,GAFF,GAGE+C,CAAC,CAAC/C,CAAC,CAACK,aAAa,CAACuD,KAAD,CAAd,CAAF,CAHH,GAIE,GANJ;AAQD,OATD;AAUAvD,MAAAA,aAAa,CAAC8D,OAAd,CAAsB,CAACG,IAAD,EAAOV,KAAP,KAAiB;AACrC,YAAIoC,MAAM,GACRhG,CAAC,CAACK,aAAa,CAACuD,KAAD,CAAd,CAAD,KAA4B,IAA5B,GACI7D,cAAc,CAACC,CAAC,CAACK,aAAa,CAACuD,KAAD,CAAd,CAAF,CADlB,GAEI,EAHN;AAIA1E,QAAAA,EAAE,CAACoD,MAAH,YAAcf,IAAd,mCAA2CqC,KAA3C,GAAoDmB,IAApD,CAAyDiB,MAAzD;AACD,OAND,EA5BqB,CAoCrB;;AAEAhB,MAAAA,QAAQ,CAACD,IAAT,CAAc/E,CAAC,CAACiG,QAAF,GAAa,GAAb,GAAmBjG,CAAC,CAACkG,QAAnC,EAtCqB,CAuCrB;AACA;;AAEAhH,MAAAA,EAAE,CAACoD,MAAH,YAAcf,IAAd,mBAAkC2C,IAAlC,CAAuC,IAAvC,EAA6C1B,MAA7C;AACD,KAjDH,EAkDG6C,EAlDH,CAkDM,YAlDN,EAkDoB,MAAM;AACtBnG,MAAAA,EAAE,CAACoD,MAAH,YAAcf,IAAd,mBAAkCgB,KAAlC,CAAwC,SAAxC,EAAmD,IAAnD;AACD,KApDH,EAqDG2B,IArDH,CAqDQ,OArDR,EAqDiB,WArDjB,EAsDGA,IAtDH,CAsDQ,MAtDR,EAsDgB,MAtDhB,EAuDGA,IAvDH,CAuDQ,GAvDR,EAuDa,CAvDb,EAwDGA,IAxDH,CAwDQ,gBAxDR,EAwD0B,KAxD1B,EAyDGA,IAzDH,CAyDQ,OAzDR,EAyDiBhC,KAzDjB,EA0DGgC,IA1DH,CA0DQ,WA1DR,EA0DqB,gBA1DrB,EA2DGA,IA3DH,CA2DQ,QA3DR,EA2DkB1B,MA3DlB,EA4DGgC,UA5DH,GA6DGC,QA7DH,CA6DY,GA7DZ,EAjMmD,CAgQnD;;AAEAvF,IAAAA,EAAE,CAACiH,GAAH,GAASC,GAAT,CAAazG,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAtB;AACA,QAAIT,CAAC,GAAGL,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAjB;AACAkE,IAAAA,SAAS,CAACT,IAAV,CAAe,WAAf,EAA4B,eAAetB,CAAC,CAACjD,SAAS,CAACgD,OAAV,CAAkB3C,CAAlB,CAAD,CAAhB,GAAyC,KAArE;AACAK,IAAAA,aAAa,CAAC8D,OAAd,CAAsB,CAACG,IAAD,EAAOV,KAAP,KAAiB;AACrC1E,MAAAA,EAAE,CAACoD,MAAH,YAAcf,IAAd,qBAA6BqC,KAA7B,GAAsCM,IAAtC,CACE,WADF,EAEE,eACEtB,CAAC,CAACjD,SAAS,CAACgD,OAAV,CAAkB3C,CAAlB,CAAD,CADH,GAEE,GAFF,GAGE+C,CAAC,CAAC/C,CAAC,CAACK,aAAa,CAACuD,KAAD,CAAd,CAAF,CAHH,GAIE,GANJ;AAQD,KATD;AAUAvD,IAAAA,aAAa,CAAC8D,OAAd,CAAsB,CAACG,IAAD,EAAOV,KAAP,KAAiB;AACrC,UAAIoC,MAAM,GACRhG,CAAC,CAACK,aAAa,CAACuD,KAAD,CAAd,CAAD,KAA4B,IAA5B,GACI7D,cAAc,CAACC,CAAC,CAACK,aAAa,CAACuD,KAAD,CAAd,CAAF,CADlB,GAEI,EAHN;AAIA1E,MAAAA,EAAE,CAACoD,MAAH,YAAcf,IAAd,mCAA2CqC,KAA3C,GAAoDmB,IAApD,CAAyDiB,MAAzD;AACD,KAND;AAOAhB,IAAAA,QAAQ,CAACD,IAAT,CAAc/E,CAAC,CAACiG,QAAF,GAAa,GAAb,GAAmBjG,CAAC,CAACkG,QAAnC,EAtRmD,CAuRnD;AACA;;AAEAhH,IAAAA,EAAE,CAACoD,MAAH,YAAcf,IAAd,mBAAkC2C,IAAlC,CAAuC,IAAvC,EAA6C1B,MAA7C;AACD;;AAEDvD,EAAAA,SAAS,CAAC,MAAM;AACdqC,IAAAA,WAAW,CAAC3B,SAAD,EAAYE,UAAZ,EAAwBR,KAAK,CAACkC,IAA9B,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAK,IAAA,GAAG,EAAEjC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport * as moment from \"moment\";\n\n// TODO get rid of startvals ref\nexport default function LineChart(props) {\n  const chart = createRef();\n\n  const defaultHeight = 220;\n  var containerElement;\n  let YOYdiff;\n  const [chartData, setChartData] = useState(props.data);\n  const [valueArray, setValueArray] = useState(props.valueArray);\n  // const [startVals, setStartVals] = useState([]);\n  // var startValsRef = useRef([]);\n  function numberFormatFn(d) {\n    return \"$\" + d;\n  }\n\n  // function getLineDiffValue(line0, lineTwo) {\n  //   return line0 == null || lineTwo == null ? null : line0 - lineTwo;\n  // }\n  function getYOYdiffColor(YOY) {\n    if (YOY < 0) {\n      return \"YOYred\";\n    } else {\n      return \"YOYgreen\";\n    }\n  }\n  function prepMaxVal(myData, myArrayOfKeys) {\n    let tempArr = [];\n    let tempStartVal = [];\n    for (let i = 0; i < myData.length; i++) {\n      // push whatever arr[j] is in the array as a key into\n      for (let j = 0; j < myArrayOfKeys.length; j++) {\n        if (myData[i][myArrayOfKeys[j]] !== null) {\n          tempArr.push(myData[i][myArrayOfKeys[j]]);\n        }\n      }\n    }\n    // startValsRef = tempStartVal;\n    // setStartVals(tempStartVal);\n    return tempArr;\n  }\n\n  function getMaxVal(myData, myArrayOfKeys) {\n    // console.log(startVals, startValsRef);\n    let tempArr = prepMaxVal(myData, myArrayOfKeys);\n    let tempArrB = prepMaxVal(myData, myArrayOfKeys);\n\n    let tempMax = tempArr.reduce((a, b) => Math.max(a, b));\n    let tempMin = tempArrB.reduce((a, b) => Math.min(a, b));\n    return { min: tempMin, max: tempMax };\n  }\n  function createChart(chartData, myArrayOfKeys, myID) {\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    let tempMinMax = getMaxVal(chartData, myArrayOfKeys);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max;\n    // let currentMonth = getCurrentMonth();\n    let margin = { top: 20, right: 60, bottom: 0, left: 10 };\n    //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n    let width = Number.isNaN(\n      parseInt(d3.select(containerElement).style(\"width\"))\n    )\n      ? 0\n      : parseInt(d3.select(containerElement).style(\"width\")) -\n        margin.left -\n        margin.right;\n    let height = 220 - margin.top;\n    let justBisect = d3.bisector(d => chartData.indexOf(d)).left;\n\n    //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n    let y = d3.scaleLinear().range([height, 0]);\n\n    //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3\n      .axisBottom(x)\n      // .ticks(12)\n      .tickFormat(function(d) {\n        return chartData[d].niceDateAbbrev;\n      })\n      .tickPadding(6);\n\n    let yAxis = d3\n      .axisRight(y)\n      .tickFormat(d => {\n        return numberFormatFn(d);\n      })\n      .ticks(6)\n      .tickPadding(6);\n\n    //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    // put consts of the lines into the global scope\n    function createLineConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(\n          d3\n            .line()\n            .defined(function(d) {\n              if (d[val] !== null) {\n                return d[val];\n              }\n            })\n            .x((d, i) => {\n              return x(i);\n            })\n            .y(d => y(d[val]))\n        );\n      });\n      return myArr;\n    }\n\n    const lineConst = createLineConsts();\n\n    // //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3\n      .select(containerElement)\n      .append(\"svg\")\n      .attr(\"id\", myID)\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", height + margin.top + margin.bottom + 40)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // // //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n\n    // // //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([\n      parseInt(d3.min(chartData, (d, i) => i)),\n      parseInt(d3.max(chartData, (d, i) => i))\n    ]);\n    y.domain([minVal - Math.abs(minVal) / 10, maxVal]);\n    // y.domain([0, maxVal]);\n\n    // // //////////////////////// Append the lines / areas  ////////////////////////\n\n    myArrayOfKeys.forEach((item, index) => {\n      CVsvg.append(\"path\")\n        .datum(chartData)\n        .attr(\"class\", `line${index} line`)\n        .attr(\"d\", lineConst[index])\n        .transition()\n        .duration(500);\n    });\n\n    // // ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n      .attr(\"transform\", \"translate(\" + (width + 6) + \",0)\")\n      .call(yAxis);\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"xAxis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    // // //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\")\n      .attr(\"class\", \"mouse-line x\")\n      .style(\"opacity\", 0.5)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", height);\n\n    function createMarkers() {\n      myArrayOfKeys.forEach((val, index) => {\n        CVsvg.append(\"g\")\n          .attr(\"class\", `marker${index}`)\n          .append(\"circle\")\n          .attr(\"class\", `line-marker line${index}`)\n          .transition()\n          .duration(500)\n          .attr(\"r\", 5);\n      });\n    }\n\n    createMarkers();\n    // // //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3\n      .select(containerElement)\n      .append(\"div\")\n      .attr(\"class\", \"tooltipDiv\")\n      .attr(\"id\", `${myID}Tooltip`);\n    const dateContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    dateContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"Date\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n\n    function createLineDivTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(tooltipDiv.append(\"div\").attr(\"class\", \"text-container\"));\n      });\n      return myArr;\n    }\n    const lineTextContainer = createLineDivTextConsts();\n\n    myArrayOfKeys.forEach((val, index) => {\n      lineTextContainer[index]\n        .append(\"div\")\n        .attr(\"class\", \"label-style mr-1\")\n        .text(val);\n\n      lineTextContainer[index].append(\"div\").attr(\"class\", `dot line${index}`);\n    });\n\n    function createLineTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((item, index) => {\n        myArr.push(\n          lineTextContainer[index]\n            .append(\"div\")\n            .attr(\"class\", `value-text lineTextConst${index}`)\n        );\n      });\n      return myArr;\n    }\n    const lineTextConsts = createLineTextConsts();\n    // const YOYContainer = tooltipDiv\n    //   .append(\"div\")\n    //   .attr(\"class\", \"text-container\");\n    // YOYContainer.append(\"div\")\n    //   .attr(\"class\", \"label-style mr-1\")\n    //   .text(\"YOY\");\n    // const YOYText = YOYContainer.append(\"div\");\n\n    // //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\")\n      .on(\"mouseover\", () => {\n        lineTrace.style(\"display\", null);\n        d3.select(`#${myID} .mouse-line`).style(\"opacity\", \"1\");\n        // d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n      })\n      .on(\"mousemove\", () => {\n        let xy = d3.mouse(d3.event.currentTarget);\n\n        let x0 = x.invert(xy[0]);\n        let mouseIndex = justBisect(chartData, x0, 1);\n        let d0 = chartData[mouseIndex - 1];\n        let d1 = chartData[mouseIndex];\n        let d;\n        if (d1 !== undefined) {\n          d = x0 - chartData.indexOf(d0) > chartData.indexOf(d1) - x0 ? d1 : d0;\n        } else {\n          d = d0;\n        }\n\n        lineTrace.attr(\n          \"transform\",\n          \"translate(\" + x(chartData.indexOf(d)) + \",0)\"\n        );\n        myArrayOfKeys.forEach((item, index) => {\n          d3.select(`#${myID} .marker${index}`).attr(\n            \"transform\",\n            \"translate(\" +\n              x(chartData.indexOf(d)) +\n              \",\" +\n              y(d[myArrayOfKeys[index]]) +\n              \")\"\n          );\n        });\n        myArrayOfKeys.forEach((item, index) => {\n          let myText =\n            d[myArrayOfKeys[index]] !== null\n              ? numberFormatFn(d[myArrayOfKeys[index]])\n              : \"\";\n          d3.select(`#${myID}Tooltip .lineTextConst${index}`).text(myText);\n        });\n\n        // // YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n\n        dateText.text(d.niceDate + \" \" + d.niceTime);\n        // // YOYText.text(YOYdiff);\n        // // YOYText.attr(\"class\", YOYdiffColor);\n\n        d3.select(`#${myID} .mouse-line`).attr(\"y2\", height);\n      })\n      .on(\"mouseleave\", () => {\n        d3.select(`#${myID} .mouse-line`).style(\"opacity\", \".5\");\n      })\n      .attr(\"class\", \"totalRect\")\n      .attr(\"fill\", \"none\")\n      .attr(\"x\", 0)\n      .attr(\"pointer-events\", \"all\")\n      .attr(\"width\", width)\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"height\", height)\n      .transition()\n      .duration(500);\n\n    // //////////////////////// Set the data on load ////////////////////////\n\n    d3.set().add(chartData[chartData.length - 1]);\n    let d = chartData[chartData.length - 1];\n    lineTrace.attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",0)\");\n    myArrayOfKeys.forEach((item, index) => {\n      d3.select(`#${myID} .marker${index}`).attr(\n        \"transform\",\n        \"translate(\" +\n          x(chartData.indexOf(d)) +\n          \",\" +\n          y(d[myArrayOfKeys[index]]) +\n          \")\"\n      );\n    });\n    myArrayOfKeys.forEach((item, index) => {\n      let myText =\n        d[myArrayOfKeys[index]] !== null\n          ? numberFormatFn(d[myArrayOfKeys[index]])\n          : \"\";\n      d3.select(`#${myID}Tooltip .lineTextConst${index}`).text(myText);\n    });\n    dateText.text(d.niceDate + \" \" + d.niceTime);\n    // // YOYText.text(YOYdiff);\n    // // YOYText.attr(\"class\", YOYdiffColor);\n\n    d3.select(`#${myID} .mouse-line`).attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, valueArray, props.myID);\n  }, []);\n\n  return <div ref={chart}></div>;\n}\n"]},"metadata":{},"sourceType":"module"}