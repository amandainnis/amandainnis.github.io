{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChart.js\";\nimport React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport * as moment from \"moment\";\nexport default function LineChart(props) {\n  const chart = createRef();\n  const startValTicker = useRef();\n  const startValBenchmark = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n  let YOYdiff;\n\n  const _useState = useState(props.data),\n        _useState2 = _slicedToArray(_useState, 2),\n        chartData = _useState2[0],\n        setChartData = _useState2[1];\n\n  const _useState3 = useState(props.valueArray),\n        _useState4 = _slicedToArray(_useState3, 2),\n        valueArray = _useState4[0],\n        setValueArray = _useState4[1];\n\n  function numberFormatFn(d) {\n    return \"$\" + d;\n  } // function getLineDiffValue(line0, lineTwo) {\n  //   return line0 == null || lineTwo == null ? null : line0 - lineTwo;\n  // }\n\n\n  function getYOYdiffColor(YOY) {\n    if (YOY < 0) {\n      return \"YOYred\";\n    } else {\n      return \"YOYgreen\";\n    }\n  }\n\n  function prepMaxVal(myData, myArrayOfKeys) {\n    let tempArr = [];\n\n    for (let i = 0; i < myData.length; i++) {\n      // push whatever arr[j] is in the array as a key into\n      for (let j = 0; j < myArrayOfKeys.length; j++) {\n        if (myData[i][myArrayOfKeys[j]] !== null) tempArr.push(myData[i][myArrayOfKeys[j]]);\n      }\n    } // console.log(tempArr);\n\n\n    return tempArr;\n  }\n\n  function getMaxVal(myData, myArrayOfKeys) {\n    let tempArr = prepMaxVal(myData, myArrayOfKeys);\n    let tempArrB = prepMaxVal(myData, myArrayOfKeys);\n    let tempMax = tempArr.reduce((a, b) => Math.max(a, b));\n    let tempMin = tempArrB.reduce((a, b) => Math.min(a, b));\n    return {\n      min: tempMin,\n      max: tempMax\n    };\n  }\n\n  function createChart(chartData, myArrayOfKeys, myID) {\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    let tempMinMax = getMaxVal(chartData, myArrayOfKeys);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max; // let currentMonth = getCurrentMonth();\n\n    let margin = {\n      top: 20,\n      right: 60,\n      bottom: 0,\n      left: 10\n    }; //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n\n    let width = Number.isNaN(parseInt(d3.select(containerElement).style(\"width\"))) ? 0 : parseInt(d3.select(containerElement).style(\"width\")) - margin.left - margin.right;\n    let height = 220 - margin.top;\n    let justBisect = d3.bisector(d => chartData.indexOf(d)).left; //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n    let y = d3.scaleLinear().range([height, 0]); //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3.axisBottom(x) // .ticks(12)\n    .tickFormat(function (d) {\n      return chartData[d].niceDateAbbrev;\n    }).tickPadding(6);\n    let yAxis = d3.axisRight(y).tickFormat(d => {\n      return numberFormatFn(d);\n    }).ticks(6).tickPadding(6); //////////////////////// Define the lines and/or areas  ////////////////////////\n    // put consts of the lines into the global scope\n\n    function createLineConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(d3.line().defined(function (d) {\n          if (d[val] !== null) {\n            return d[val];\n          }\n        }).x((d, i) => {\n          return x(i);\n        }).y(d => y(d[val])));\n      });\n      return myArr;\n    }\n\n    const lineConst = createLineConsts();\n    console.log(lineConst[0]); // const line0 = d3\n    //   .line()\n    //   .defined(function(d) {\n    //     if (d[\"price\"] !== null) {\n    //       return d[\"price\"];\n    //     }\n    //   })\n    //   .x((d, i) => {\n    //     return x(i);\n    //   })\n    //   .y(d => y(d[\"price\"]));\n    // //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3.select(containerElement).append(\"svg\").attr(\"id\", myID).attr(\"width\", \"100%\").attr(\"height\", height + margin.top + margin.bottom + 40).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // // //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    }); // // //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([parseInt(d3.min(chartData, (d, i) => i)), parseInt(d3.max(chartData, (d, i) => i))]); // y.domain([minVal, maxVal]);\n\n    y.domain([0, maxVal]); // // //////////////////////// Append the lines / areas  ////////////////////////\n\n    myArrayOfKeys.forEach((item, index) => {\n      CVsvg.append(\"path\").datum(chartData).attr(\"class\", \"line\".concat(index, \" line\")).attr(\"d\", lineConst[index]).transition().duration(500);\n    }); // // ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\").attr(\"class\", \"yAxis\").attr(\"transform\", \"translate(\" + (width + 6) + \",0)\").call(yAxis);\n    CVsvg.append(\"g\").attr(\"class\", \"xAxis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis); // // //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\").attr(\"class\", \"mouse-line x\").style(\"opacity\", 0.5).attr(\"y1\", 0).attr(\"y2\", height); // function createMarkerConsts() {\n    //   let myArr = [];\n    //   myArrayOfKeys.map((val, index) => {\n    //     myArr.push(\n    //       CVsvg.append(\"g\")\n    //         .attr(\"class\", `marker${index}`)\n    //         .append(\"circle\")\n    //         .attr(\"class\", `line-marker line${index}`)\n    //         .transition()\n    //         .duration(500)\n    //         .attr(\"r\", 5)\n    //     );\n    //   });\n    //   return myArr;\n    // }\n    // const marker = createMarkerConsts();\n    // console.log(marker, marker[0], marker[1]);\n\n    function createMarkers() {\n      myArrayOfKeys.forEach((val, index) => {\n        CVsvg.append(\"g\").attr(\"class\", \"marker\".concat(index)).append(\"circle\").attr(\"class\", \"line-marker line\".concat(index)).transition().duration(500).attr(\"r\", 5);\n      });\n    }\n\n    createMarkers(); // // //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3.select(containerElement).append(\"div\").attr(\"class\", \"tooltipDiv\").attr(\"id\", \"#\".concat(myID, \"-tooltip\"));\n    const dateContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    dateContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"Date\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n\n    function createLineDivTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(tooltipDiv.append(\"div\").attr(\"class\", \"text-container\"));\n      });\n      return myArr;\n    }\n\n    const lineTextContainer = createLineDivTextConsts();\n    myArrayOfKeys.forEach((val, index) => {\n      lineTextContainer[index].append(\"div\").attr(\"class\", \"label-style mr-1\").text(val);\n      lineTextContainer[index].append(\"div\").attr(\"class\", \"dot line\".concat(index));\n    });\n\n    function createLineTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((item, index) => {\n        myArr.push(lineTextContainer[index].append(\"div\").attr(\"class\", \"value-text lineTextConst\".concat(index)));\n      });\n      return myArr;\n    }\n\n    const lineTextConsts = createLineTextConsts(); // const YOYContainer = tooltipDiv\n    //   .append(\"div\")\n    //   .attr(\"class\", \"text-container\");\n    // YOYContainer.append(\"div\")\n    //   .attr(\"class\", \"label-style mr-1\")\n    //   .text(\"YOY\");\n    // const YOYText = YOYContainer.append(\"div\");\n    // //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\").on(\"mouseover\", () => {\n      lineTrace.style(\"display\", null);\n      d3.select(\".mouse-line\").style(\"opacity\", \"1\"); // d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n    }).on(\"mousemove\", () => {\n      let xy = d3.mouse(d3.event.currentTarget);\n      let x0 = x.invert(xy[0]);\n      let mouseIndex = justBisect(chartData, x0, 1);\n      let d0 = chartData[mouseIndex - 1];\n      let d1 = chartData[mouseIndex];\n      let d;\n\n      if (d1 !== undefined) {\n        d = x0 - chartData.indexOf(d0) > chartData.indexOf(d1) - x0 ? d1 : d0;\n      } else {\n        d = d0;\n      }\n\n      lineTrace.attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",0)\");\n      myArrayOfKeys.forEach((item, index) => {\n        d3.select(\"#\".concat(myID, \" .marker\").concat(index)).attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",\" + y(d[myArrayOfKeys[index]]) + \")\");\n      });\n      myArrayOfKeys.forEach((item, index) => {\n        let myText = d[myArrayOfKeys[index]] !== null ? numberFormatFn(d[myArrayOfKeys[index]]) : \"\";\n        d3.select(\"#\".concat(myID, \"-tooltip .lineTextConst\").concat(index)).text(myText);\n      }); // // YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n\n      dateText.text(d.niceDate + \" \" + d.niceTime); // // YOYText.text(YOYdiff);\n      // // YOYText.attr(\"class\", YOYdiffColor);\n\n      d3.select(\".mouse-line.x\").attr(\"y2\", height);\n    }).on(\"mouseleave\", () => {\n      d3.select(\"#\".concat(myID, \" .mouse-line\")).style(\"opacity\", \".5\");\n    }).attr(\"class\", \"totalRect\").attr(\"fill\", \"none\").attr(\"x\", 0).attr(\"pointer-events\", \"all\").attr(\"width\", width).attr(\"transform\", \"translate(0,0)\").attr(\"height\", height).transition().duration(500); // //////////////////////// Set the data on load ////////////////////////\n\n    d3.set().add(chartData[chartData.length - 1]);\n    let d = chartData[chartData.length - 1];\n    lineTrace.attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",0)\");\n    myArrayOfKeys.forEach((item, index) => {\n      d3.select(\"#\".concat(myID, \" .marker\").concat(index)).attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",\" + y(d[myArrayOfKeys[index]]) + \")\");\n    });\n    myArrayOfKeys.forEach((item, index) => {\n      let myText = d[myArrayOfKeys[index]] !== null ? numberFormatFn(d[myArrayOfKeys[index]]) : \"\";\n      d3.select(\"#\".concat(myID, \"-tooltip .lineTextConst\").concat(index)).text(myText);\n    });\n    dateText.text(d.niceDate + \" \" + d.niceTime); // // YOYText.text(YOYdiff);\n    // // YOYText.attr(\"class\", YOYdiffColor);\n\n    d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, valueArray, props.myID);\n  }, []);\n  return React.createElement(\"div\", {\n    ref: chart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChart.js"],"names":["React","createRef","useState","useRef","useEffect","d3","moment","LineChart","props","chart","startValTicker","startValBenchmark","defaultHeight","containerElement","YOYdiff","data","chartData","setChartData","valueArray","setValueArray","numberFormatFn","d","getYOYdiffColor","YOY","prepMaxVal","myData","myArrayOfKeys","tempArr","i","length","j","push","getMaxVal","tempArrB","tempMax","reduce","a","b","Math","max","tempMin","min","createChart","myID","current","innerHTML","tempMinMax","minVal","maxVal","margin","top","right","bottom","left","width","Number","isNaN","parseInt","select","style","height","justBisect","bisector","indexOf","x","scaleLinear","range","y","xAxis","axisBottom","tickFormat","niceDateAbbrev","tickPadding","yAxis","axisRight","ticks","createLineConsts","myArr","map","val","index","line","defined","lineConst","console","log","CVsvg","append","attr","forEach","domain","item","datum","transition","duration","call","lineTrace","createMarkers","tooltipDiv","dateContainer","text","dateText","createLineDivTextConsts","lineTextContainer","createLineTextConsts","lineTextConsts","on","xy","mouse","event","currentTarget","x0","invert","mouseIndex","d0","d1","undefined","myText","niceDate","niceTime","set","add"],"mappings":"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","sourcesContent":["import React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport * as moment from \"moment\";\n\nexport default function LineChart(props) {\n  const chart = createRef();\n\n  const startValTicker = useRef();\n  const startValBenchmark = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n  let YOYdiff;\n  const [chartData, setChartData] = useState(props.data);\n  const [valueArray, setValueArray] = useState(props.valueArray);\n  function numberFormatFn(d) {\n    return \"$\" + d;\n  }\n\n  // function getLineDiffValue(line0, lineTwo) {\n  //   return line0 == null || lineTwo == null ? null : line0 - lineTwo;\n  // }\n  function getYOYdiffColor(YOY) {\n    if (YOY < 0) {\n      return \"YOYred\";\n    } else {\n      return \"YOYgreen\";\n    }\n  }\n  function prepMaxVal(myData, myArrayOfKeys) {\n    let tempArr = [];\n\n    for (let i = 0; i < myData.length; i++) {\n      // push whatever arr[j] is in the array as a key into\n      for (let j = 0; j < myArrayOfKeys.length; j++) {\n        if (myData[i][myArrayOfKeys[j]] !== null)\n          tempArr.push(myData[i][myArrayOfKeys[j]]);\n      }\n    }\n    // console.log(tempArr);\n    return tempArr;\n  }\n\n  function getMaxVal(myData, myArrayOfKeys) {\n    let tempArr = prepMaxVal(myData, myArrayOfKeys);\n    let tempArrB = prepMaxVal(myData, myArrayOfKeys);\n\n    let tempMax = tempArr.reduce((a, b) => Math.max(a, b));\n    let tempMin = tempArrB.reduce((a, b) => Math.min(a, b));\n    return { min: tempMin, max: tempMax };\n  }\n  function createChart(chartData, myArrayOfKeys, myID) {\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    let tempMinMax = getMaxVal(chartData, myArrayOfKeys);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max;\n    // let currentMonth = getCurrentMonth();\n    let margin = { top: 20, right: 60, bottom: 0, left: 10 };\n    //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n    let width = Number.isNaN(\n      parseInt(d3.select(containerElement).style(\"width\"))\n    )\n      ? 0\n      : parseInt(d3.select(containerElement).style(\"width\")) -\n        margin.left -\n        margin.right;\n    let height = 220 - margin.top;\n    let justBisect = d3.bisector(d => chartData.indexOf(d)).left;\n\n    //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n\n    let y = d3.scaleLinear().range([height, 0]);\n\n    //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3\n      .axisBottom(x)\n      // .ticks(12)\n      .tickFormat(function(d) {\n        return chartData[d].niceDateAbbrev;\n      })\n      .tickPadding(6);\n\n    let yAxis = d3\n      .axisRight(y)\n      .tickFormat(d => {\n        return numberFormatFn(d);\n      })\n      .ticks(6)\n      .tickPadding(6);\n\n    //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    // put consts of the lines into the global scope\n    function createLineConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(\n          d3\n            .line()\n            .defined(function(d) {\n              if (d[val] !== null) {\n                return d[val];\n              }\n            })\n            .x((d, i) => {\n              return x(i);\n            })\n            .y(d => y(d[val]))\n        );\n      });\n      return myArr;\n    }\n\n    const lineConst = createLineConsts();\n    console.log(lineConst[0]);\n\n    // const line0 = d3\n    //   .line()\n    //   .defined(function(d) {\n    //     if (d[\"price\"] !== null) {\n    //       return d[\"price\"];\n    //     }\n    //   })\n    //   .x((d, i) => {\n    //     return x(i);\n    //   })\n    //   .y(d => y(d[\"price\"]));\n\n    // //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3\n      .select(containerElement)\n      .append(\"svg\")\n      .attr(\"id\", myID)\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", height + margin.top + margin.bottom + 40)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // // //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n\n    // // //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([\n      parseInt(d3.min(chartData, (d, i) => i)),\n      parseInt(d3.max(chartData, (d, i) => i))\n    ]);\n    // y.domain([minVal, maxVal]);\n    y.domain([0, maxVal]);\n\n    // // //////////////////////// Append the lines / areas  ////////////////////////\n\n    myArrayOfKeys.forEach((item, index) => {\n      CVsvg.append(\"path\")\n        .datum(chartData)\n        .attr(\"class\", `line${index} line`)\n        .attr(\"d\", lineConst[index])\n        .transition()\n        .duration(500);\n    });\n\n    // // ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n      .attr(\"transform\", \"translate(\" + (width + 6) + \",0)\")\n      .call(yAxis);\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"xAxis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    // // //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\")\n      .attr(\"class\", \"mouse-line x\")\n      .style(\"opacity\", 0.5)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", height);\n\n    // function createMarkerConsts() {\n    //   let myArr = [];\n    //   myArrayOfKeys.map((val, index) => {\n    //     myArr.push(\n    //       CVsvg.append(\"g\")\n    //         .attr(\"class\", `marker${index}`)\n    //         .append(\"circle\")\n    //         .attr(\"class\", `line-marker line${index}`)\n    //         .transition()\n    //         .duration(500)\n    //         .attr(\"r\", 5)\n    //     );\n    //   });\n    //   return myArr;\n    // }\n    // const marker = createMarkerConsts();\n\n    // console.log(marker, marker[0], marker[1]);\n\n    function createMarkers() {\n      myArrayOfKeys.forEach((val, index) => {\n        CVsvg.append(\"g\")\n          .attr(\"class\", `marker${index}`)\n          .append(\"circle\")\n          .attr(\"class\", `line-marker line${index}`)\n          .transition()\n          .duration(500)\n          .attr(\"r\", 5);\n      });\n    }\n\n    createMarkers();\n    // // //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3\n      .select(containerElement)\n      .append(\"div\")\n      .attr(\"class\", \"tooltipDiv\")\n      .attr(\"id\", `#${myID}-tooltip`);\n    const dateContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    dateContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"Date\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n\n    function createLineDivTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(tooltipDiv.append(\"div\").attr(\"class\", \"text-container\"));\n      });\n      return myArr;\n    }\n    const lineTextContainer = createLineDivTextConsts();\n\n    myArrayOfKeys.forEach((val, index) => {\n      lineTextContainer[index]\n        .append(\"div\")\n        .attr(\"class\", \"label-style mr-1\")\n        .text(val);\n\n      lineTextContainer[index].append(\"div\").attr(\"class\", `dot line${index}`);\n    });\n\n    function createLineTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((item, index) => {\n        myArr.push(\n          lineTextContainer[index]\n            .append(\"div\")\n            .attr(\"class\", `value-text lineTextConst${index}`)\n        );\n      });\n      return myArr;\n    }\n    const lineTextConsts = createLineTextConsts();\n    // const YOYContainer = tooltipDiv\n    //   .append(\"div\")\n    //   .attr(\"class\", \"text-container\");\n    // YOYContainer.append(\"div\")\n    //   .attr(\"class\", \"label-style mr-1\")\n    //   .text(\"YOY\");\n    // const YOYText = YOYContainer.append(\"div\");\n\n    // //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\")\n      .on(\"mouseover\", () => {\n        lineTrace.style(\"display\", null);\n        d3.select(\".mouse-line\").style(\"opacity\", \"1\");\n        // d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n      })\n      .on(\"mousemove\", () => {\n        let xy = d3.mouse(d3.event.currentTarget);\n\n        let x0 = x.invert(xy[0]);\n        let mouseIndex = justBisect(chartData, x0, 1);\n        let d0 = chartData[mouseIndex - 1];\n        let d1 = chartData[mouseIndex];\n        let d;\n        if (d1 !== undefined) {\n          d = x0 - chartData.indexOf(d0) > chartData.indexOf(d1) - x0 ? d1 : d0;\n        } else {\n          d = d0;\n        }\n\n        lineTrace.attr(\n          \"transform\",\n          \"translate(\" + x(chartData.indexOf(d)) + \",0)\"\n        );\n        myArrayOfKeys.forEach((item, index) => {\n          d3.select(`#${myID} .marker${index}`).attr(\n            \"transform\",\n            \"translate(\" +\n              x(chartData.indexOf(d)) +\n              \",\" +\n              y(d[myArrayOfKeys[index]]) +\n              \")\"\n          );\n        });\n        myArrayOfKeys.forEach((item, index) => {\n          let myText =\n            d[myArrayOfKeys[index]] !== null\n              ? numberFormatFn(d[myArrayOfKeys[index]])\n              : \"\";\n          d3.select(`#${myID}-tooltip .lineTextConst${index}`).text(myText);\n        });\n\n        // // YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n\n        dateText.text(d.niceDate + \" \" + d.niceTime);\n        // // YOYText.text(YOYdiff);\n        // // YOYText.attr(\"class\", YOYdiffColor);\n\n        d3.select(\".mouse-line.x\").attr(\"y2\", height);\n      })\n      .on(\"mouseleave\", () => {\n        d3.select(`#${myID} .mouse-line`).style(\"opacity\", \".5\");\n      })\n      .attr(\"class\", \"totalRect\")\n      .attr(\"fill\", \"none\")\n      .attr(\"x\", 0)\n      .attr(\"pointer-events\", \"all\")\n      .attr(\"width\", width)\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"height\", height)\n      .transition()\n      .duration(500);\n\n    // //////////////////////// Set the data on load ////////////////////////\n\n    d3.set().add(chartData[chartData.length - 1]);\n    let d = chartData[chartData.length - 1];\n    lineTrace.attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",0)\");\n    myArrayOfKeys.forEach((item, index) => {\n      d3.select(`#${myID} .marker${index}`).attr(\n        \"transform\",\n        \"translate(\" +\n          x(chartData.indexOf(d)) +\n          \",\" +\n          y(d[myArrayOfKeys[index]]) +\n          \")\"\n      );\n    });\n    myArrayOfKeys.forEach((item, index) => {\n      let myText =\n        d[myArrayOfKeys[index]] !== null\n          ? numberFormatFn(d[myArrayOfKeys[index]])\n          : \"\";\n      d3.select(`#${myID}-tooltip .lineTextConst${index}`).text(myText);\n    });\n    dateText.text(d.niceDate + \" \" + d.niceTime);\n    // // YOYText.text(YOYdiff);\n    // // YOYText.attr(\"class\", YOYdiffColor);\n\n    d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, valueArray, props.myID);\n  }, []);\n\n  return <div ref={chart}></div>;\n}\n"]},"metadata":{},"sourceType":"module"}