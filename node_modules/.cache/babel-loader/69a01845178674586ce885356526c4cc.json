{"ast":null,"code":"import _slicedToArray from\"/Users/amandainnis/amandainnis.github.io/amandainnis.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createRef,useState,useRef,useEffect}from\"react\";import*as d3 from\"d3\";import*as moment from\"moment\";// each charted value has a display name for tooltip\n// tooltip may or may not have a charted value\n// each line takes a\nexport default function LineChart(props){var chart=createRef();var innerWidth;var defaultHeight=220;var containerElement;var YOYdiff;var _useState=useState(props.data),_useState2=_slicedToArray(_useState,2),chartData=_useState2[0],setChartData=_useState2[1];// const [innerWidth, setInnerWidth] = useState();\nvar _useState3=useState(props.valueArray),_useState4=_slicedToArray(_useState3,2),valueArray=_useState4[0],setValueArray=_useState4[1];// function getLineDiffValue(line0, lineTwo) {\n//   return line0 == null || lineTwo == null ? null : line0 - lineTwo;\n// }\nfunction getYOYdiffColor(YOY){if(YOY<0){return\"YOYred\";}else{return\"YOYgreen\";}}function prepMaxVal(myData,myArrayOfKeys){var tempArr=[];var tempStartVal=[];for(var i=0;i<myData.length;i++){// push whatever arr[j] is in the array as a key into\nfor(var j=0;j<myArrayOfKeys.length;j++){if(myData[i][myArrayOfKeys[j]]!==null){tempArr.push(myData[i][myArrayOfKeys[j][\"dataKey\"]]);}}}return tempArr;}function getMaxVal(myData,myArrayOfKeys){// console.log(startVals, startValsRef);\nvar tempArr=prepMaxVal(myData,myArrayOfKeys);var tempArrB=prepMaxVal(myData,myArrayOfKeys);var tempMax=tempArr.reduce(function(a,b){return Math.max(a,b);});var tempMin=tempArrB.reduce(function(a,b){return Math.min(a,b);});return{min:tempMin,max:tempMax};}function createChart(chartData,myArrayOfKeys,myID,numberFormatFn){containerElement=chart.current;innerWidth=chart.current.clientWidth;containerElement.innerHTML=\"\";var tempMinMax=getMaxVal(chartData,myArrayOfKeys);var minVal=tempMinMax.min;var maxVal=tempMinMax.max;// let currentMonth = getCurrentMonth();\nvar margin={top:20,right:60,bottom:0,left:10};//////////////////////// Establish the reused vals and the bound functions  ////////////////////////\nvar width=Number.isNaN(parseInt(d3.select(containerElement).style(\"width\")))?0:parseInt(d3.select(containerElement).style(\"width\"))-margin.left-margin.right;var height=300-margin.top;var justBisect=d3.bisector(function(d){return chartData.indexOf(d);}).left;//////////////////////// Set the scales  ////////////////////////\nvar x=d3.scaleLinear().range([0,width]);var y=d3.scaleLinear().range([height,0]);// //////////////////////// Set the axis ////////////////////////\nvar xAxis=d3.axisBottom(x).ticks(5).tickFormat(function(d){return chartData[d].niceDateAbbrev;}).tickPadding(6);var yAxis=d3.axisRight(y).tickFormat(function(d){return numberFormatFn(d);}).ticks(6).tickPadding(6);// //////////////////////// Define the lines and/or areas  ////////////////////////\n// put consts of the lines into the global scope\n// defined means it can show gaps, isNan means it can have zero as a value\nfunction createLineConsts(){var myArr=[];myArrayOfKeys.map(function(val,index){myArr.push(d3.line().defined(function(d){return!Number.isNaN(d[val[\"dataKey\"]]);}).x(function(d,i){return x(i);}).y(function(d){return y(d[val[\"dataKey\"]]);}));});return myArr;}var lineConst=createLineConsts();// // //////////////////////// Define parent SVG  ////////////////////////\nvar CVsvg=d3.select(containerElement).append(\"svg\").attr(\"class\",\"line-chart-svg-container\").attr(\"id\",myID).attr(\"width\",\"100%\").attr(\"height\",height+margin.top+margin.bottom+40).append(\"g\").attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");// // // //////////////////////// Loop through / sort data  ////////////////////////\nchartData.forEach(function(d){d=+d;});// // // //////////////////////// Set the domains  ////////////////////////\nx.domain([parseInt(d3.min(chartData,function(d,i){return i;})),parseInt(d3.max(chartData,function(d,i){return i;}))]);y.domain([minVal,maxVal]);// y.domain([0, maxVal]);\n// // // //////////////////////// Append the lines / areas  ////////////////////////\nmyArrayOfKeys.forEach(function(item,index){CVsvg.append(\"path\").datum(chartData).attr(\"class\",\"line\").attr(\"stroke\",item[\"color\"]).attr(\"d\",lineConst[index]).transition().duration(1000);});// // // ///////////////////////  Add the X & Y Axis  ////////////////////////\nCVsvg.append(\"g\").attr(\"class\",\"yAxis\").attr(\"transform\",\"translate(\"+(width+6)+\",0)\").call(yAxis);CVsvg.append(\"g\").attr(\"class\",\"xAxis\").attr(\"transform\",\"translate(0,\"+height+\")\").call(xAxis);// // // //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\nvar lineTrace=CVsvg.append(\"line\").attr(\"class\",\"mouse-line x\").style(\"opacity\",0.5).attr(\"y1\",0).attr(\"y2\",height);function createMarkers(){myArrayOfKeys.forEach(function(item,index){CVsvg.append(\"g\").attr(\"class\",\"marker\".concat(index)).append(\"circle\").attr(\"class\",\"line-marker\").attr(\"stroke\",item[\"marker\"]).transition().duration(500).attr(\"r\",5);});}createMarkers();// // // //////////////////////// Tooltip  ////////////////////////\nvar tooltipDiv=d3.select(containerElement).append(\"div\").attr(\"class\",\"tooltipDiv\").attr(\"id\",\"\".concat(myID,\"Tooltip\"));var dateContainer=tooltipDiv.append(\"div\").attr(\"class\",\"text-container\");dateContainer.append(\"div\").attr(\"class\",\"label-style mr-1\").text(\"Date:\");var dateText=dateContainer.append(\"div\").attr(\"class\",\"value-text\");function createLineDivTextConsts(){var myArr=[];myArrayOfKeys.map(function(val,index){myArr.push(tooltipDiv.append(\"div\").attr(\"class\",\"text-container\"));});return myArr;}var lineTextContainer=createLineDivTextConsts();myArrayOfKeys.forEach(function(item,index){lineTextContainer[index].append(\"div\").attr(\"class\",\"label-style mr-1\").text(item[\"tooltipLabel\"]);lineTextContainer[index].append(\"div\").attr(\"class\",\"dash\").style(\"background-color\",item[\"marker\"]);});function createLineTextConsts(){var myArr=[];myArrayOfKeys.map(function(item,index){myArr.push(lineTextContainer[index].append(\"div\").attr(\"class\",\"value-text\").attr(\"id\",\"lineTextConst\".concat(myID).concat(index)));});return myArr;}var lineTextConsts=createLineTextConsts();// const YOYContainer = tooltipDiv\n//   .append(\"div\")\n//   .attr(\"class\", \"text-container\");\n// YOYContainer.append(\"div\")\n//   .attr(\"class\", \"label-style mr-1\")\n//   .text(\"YOY\");\n// const YOYText = YOYContainer.append(\"div\");\n// // //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\nCVsvg.append(\"rect\").on(\"mouseover\",function(){lineTrace.style(\"display\",null);d3.select(\"#\".concat(myID,\" .mouse-line\")).style(\"opacity\",\"1\");// d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n}).on(\"mousemove\",function(){var xy=d3.mouse(d3.event.currentTarget);var x0=x.invert(xy[0]);var mouseIndex=justBisect(chartData,x0,1);var d0=chartData[mouseIndex-1];var d1=chartData[mouseIndex];var d;if(d1!==undefined){d=x0-chartData.indexOf(d0)>chartData.indexOf(d1)-x0?d1:d0;}else{d=d0;}lineTrace.attr(\"transform\",\"translate(\"+x(chartData.indexOf(d))+\",0)\");myArrayOfKeys.forEach(function(item,index){d3.select(\"#\".concat(myID,\" .marker\").concat(index)).attr(\"transform\",\"translate(\"+x(chartData.indexOf(d))+\",\"+y(d[item[\"dataKey\"]])+\")\");});myArrayOfKeys.forEach(function(item,index){var myText=d[myArrayOfKeys[index]]!==null?numberFormatFn(d[item[\"dataKey\"]]):\"\";d3.select(\"#\".concat(myID,\"Tooltip #lineTextConst\").concat(myID).concat(index)).text(myText);});dateText.text(d.niceDate+\", \"+d.niceTime);d3.select(\"#\".concat(myID,\" .mouse-line\")).attr(\"y2\",height);}).on(\"mouseleave\",function(){d3.select(\"#\".concat(myID,\" .mouse-line\")).style(\"opacity\",\".5\");}).attr(\"class\",\"totalRect\").attr(\"fill\",\"none\").attr(\"x\",0).attr(\"pointer-events\",\"all\").attr(\"width\",width).attr(\"transform\",\"translate(0,0)\").attr(\"height\",height).transition().duration(500);// ////////////////////////// Set the data on load ////////////////////////\nd3.set().add(chartData[chartData.length-1]);var d=chartData[chartData.length-1];lineTrace.attr(\"transform\",\"translate(\"+x(chartData.indexOf(d))+\",0)\");myArrayOfKeys.forEach(function(item,index){d3.select(\"#\".concat(myID,\" .marker\").concat(index)).attr(\"transform\",\"translate(\"+x(chartData.indexOf(d))+\",\"+y(d[item[\"dataKey\"]])+\")\");});myArrayOfKeys.forEach(function(item,index){var myText=d[myArrayOfKeys[index]]!==null?numberFormatFn(d[item[\"dataKey\"]]):\"\";d3.select(\"#\".concat(myID,\"Tooltip #lineTextConst\").concat(myID).concat(index)).text(myText);});dateText.text(d.niceDate+\", \"+d.niceTime);// // YOYText.text(YOYdiff);\n// // YOYText.attr(\"class\", YOYdiffColor);\nd3.select(\"#\".concat(myID,\" .mouse-line\")).attr(\"y2\",height);}useEffect(function(){createChart(chartData,valueArray,props.myID,props.numberFormatFn);},[]);useEffect(function(){createChart(chartData,valueArray,props.myID,props.numberFormatFn);},[props.resize]);return React.createElement(\"div\",{ref:chart});}","map":{"version":3,"sources":["/Users/amandainnis/amandainnis.github.io/amandainnis.github.io/src/components/reusable/LineChart.js"],"names":["React","createRef","useState","useRef","useEffect","d3","moment","LineChart","props","chart","innerWidth","defaultHeight","containerElement","YOYdiff","data","chartData","setChartData","valueArray","setValueArray","getYOYdiffColor","YOY","prepMaxVal","myData","myArrayOfKeys","tempArr","tempStartVal","i","length","j","push","getMaxVal","tempArrB","tempMax","reduce","a","b","Math","max","tempMin","min","createChart","myID","numberFormatFn","current","clientWidth","innerHTML","tempMinMax","minVal","maxVal","margin","top","right","bottom","left","width","Number","isNaN","parseInt","select","style","height","justBisect","bisector","d","indexOf","x","scaleLinear","range","y","xAxis","axisBottom","ticks","tickFormat","niceDateAbbrev","tickPadding","yAxis","axisRight","createLineConsts","myArr","map","val","index","line","defined","lineConst","CVsvg","append","attr","forEach","domain","item","datum","transition","duration","call","lineTrace","createMarkers","tooltipDiv","dateContainer","text","dateText","createLineDivTextConsts","lineTextContainer","createLineTextConsts","lineTextConsts","on","xy","mouse","event","currentTarget","x0","invert","mouseIndex","d0","d1","undefined","myText","niceDate","niceTime","set","add","resize"],"mappings":"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","sourcesContent":["import React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport * as moment from \"moment\";\n\n// each charted value has a display name for tooltip\n// tooltip may or may not have a charted value\n// each line takes a\nexport default function LineChart(props) {\n  const chart = createRef();\n  let innerWidth;\n  const defaultHeight = 220;\n  var containerElement;\n  let YOYdiff;\n  const [chartData, setChartData] = useState(props.data);\n  // const [innerWidth, setInnerWidth] = useState();\n\n  const [valueArray, setValueArray] = useState(props.valueArray);\n\n  // function getLineDiffValue(line0, lineTwo) {\n  //   return line0 == null || lineTwo == null ? null : line0 - lineTwo;\n  // }\n  function getYOYdiffColor(YOY) {\n    if (YOY < 0) {\n      return \"YOYred\";\n    } else {\n      return \"YOYgreen\";\n    }\n  }\n  function prepMaxVal(myData, myArrayOfKeys) {\n    let tempArr = [];\n    let tempStartVal = [];\n    for (let i = 0; i < myData.length; i++) {\n      // push whatever arr[j] is in the array as a key into\n      for (let j = 0; j < myArrayOfKeys.length; j++) {\n        if (myData[i][myArrayOfKeys[j]] !== null) {\n          tempArr.push(myData[i][myArrayOfKeys[j][\"dataKey\"]]);\n        }\n      }\n    }\n    return tempArr;\n  }\n\n  function getMaxVal(myData, myArrayOfKeys) {\n    // console.log(startVals, startValsRef);\n    let tempArr = prepMaxVal(myData, myArrayOfKeys);\n    let tempArrB = prepMaxVal(myData, myArrayOfKeys);\n\n    let tempMax = tempArr.reduce((a, b) => Math.max(a, b));\n    let tempMin = tempArrB.reduce((a, b) => Math.min(a, b));\n    return { min: tempMin, max: tempMax };\n  }\n\n  function createChart(chartData, myArrayOfKeys, myID, numberFormatFn) {\n    containerElement = chart.current;\n    innerWidth = chart.current.clientWidth;\n\n    containerElement.innerHTML = \"\";\n    let tempMinMax = getMaxVal(chartData, myArrayOfKeys);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max;\n    // let currentMonth = getCurrentMonth();\n    let margin = { top: 20, right: 60, bottom: 0, left: 10 };\n    //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n    let width = Number.isNaN(\n      parseInt(d3.select(containerElement).style(\"width\"))\n    )\n      ? 0\n      : parseInt(d3.select(containerElement).style(\"width\")) -\n        margin.left -\n        margin.right;\n    let height = 300 - margin.top;\n    let justBisect = d3.bisector(d => chartData.indexOf(d)).left;\n\n    //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n    let y = d3.scaleLinear().range([height, 0]);\n\n    // //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3\n      .axisBottom(x)\n      .ticks(5)\n      .tickFormat(function(d) {\n        return chartData[d].niceDateAbbrev;\n      })\n      .tickPadding(6);\n\n    let yAxis = d3\n      .axisRight(y)\n      .tickFormat(d => {\n        return numberFormatFn(d);\n      })\n      .ticks(6)\n      .tickPadding(6);\n\n    // //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    // put consts of the lines into the global scope\n    // defined means it can show gaps, isNan means it can have zero as a value\n    function createLineConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(\n          d3\n            .line()\n            .defined(d => {\n              return !Number.isNaN(d[val[\"dataKey\"]]);\n            })\n            .x((d, i) => {\n              return x(i);\n            })\n            .y(d => y(d[val[\"dataKey\"]]))\n        );\n      });\n      return myArr;\n    }\n\n    const lineConst = createLineConsts();\n\n    // // //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3\n      .select(containerElement)\n      .append(\"svg\")\n      .attr(\"class\", \"line-chart-svg-container\")\n      .attr(\"id\", myID)\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", height + margin.top + margin.bottom + 40)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // // // //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n\n    // // // //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([\n      parseInt(d3.min(chartData, (d, i) => i)),\n      parseInt(d3.max(chartData, (d, i) => i))\n    ]);\n    y.domain([minVal, maxVal]);\n    // y.domain([0, maxVal]);\n\n    // // // //////////////////////// Append the lines / areas  ////////////////////////\n\n    myArrayOfKeys.forEach((item, index) => {\n      CVsvg.append(\"path\")\n        .datum(chartData)\n        .attr(\"class\", \"line\")\n        .attr(\"stroke\", item[\"color\"])\n        .attr(\"d\", lineConst[index])\n        .transition()\n        .duration(1000);\n    });\n\n    // // // ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n      .attr(\"transform\", \"translate(\" + (width + 6) + \",0)\")\n      .call(yAxis);\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"xAxis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    // // // //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\")\n      .attr(\"class\", \"mouse-line x\")\n      .style(\"opacity\", 0.5)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", height);\n\n    function createMarkers() {\n      myArrayOfKeys.forEach((item, index) => {\n        CVsvg.append(\"g\")\n          .attr(\"class\", `marker${index}`)\n          .append(\"circle\")\n          .attr(\"class\", `line-marker`)\n          .attr(\"stroke\", item[\"marker\"])\n          .transition()\n          .duration(500)\n          .attr(\"r\", 5);\n      });\n    }\n\n    createMarkers();\n    // // // //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3\n      .select(containerElement)\n      .append(\"div\")\n      .attr(\"class\", \"tooltipDiv\")\n      .attr(\"id\", `${myID}Tooltip`);\n    const dateContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    dateContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"Date:\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n\n    function createLineDivTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((val, index) => {\n        myArr.push(tooltipDiv.append(\"div\").attr(\"class\", \"text-container\"));\n      });\n      return myArr;\n    }\n    const lineTextContainer = createLineDivTextConsts();\n\n    myArrayOfKeys.forEach((item, index) => {\n      lineTextContainer[index]\n        .append(\"div\")\n        .attr(\"class\", \"label-style mr-1\")\n        .text(item[\"tooltipLabel\"]);\n\n      lineTextContainer[index]\n        .append(\"div\")\n        .attr(\"class\", \"dash\")\n        .style(\"background-color\", item[\"marker\"]);\n    });\n\n    function createLineTextConsts() {\n      let myArr = [];\n      myArrayOfKeys.map((item, index) => {\n        myArr.push(\n          lineTextContainer[index]\n            .append(\"div\")\n            .attr(\"class\", `value-text`)\n            .attr(\"id\", `lineTextConst${myID}${index}`)\n        );\n      });\n      return myArr;\n    }\n    const lineTextConsts = createLineTextConsts();\n    // const YOYContainer = tooltipDiv\n    //   .append(\"div\")\n    //   .attr(\"class\", \"text-container\");\n    // YOYContainer.append(\"div\")\n    //   .attr(\"class\", \"label-style mr-1\")\n    //   .text(\"YOY\");\n    // const YOYText = YOYContainer.append(\"div\");\n\n    // // //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\")\n      .on(\"mouseover\", () => {\n        lineTrace.style(\"display\", null);\n        d3.select(`#${myID} .mouse-line`).style(\"opacity\", \"1\");\n        // d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n      })\n      .on(\"mousemove\", () => {\n        let xy = d3.mouse(d3.event.currentTarget);\n\n        let x0 = x.invert(xy[0]);\n        let mouseIndex = justBisect(chartData, x0, 1);\n        let d0 = chartData[mouseIndex - 1];\n        let d1 = chartData[mouseIndex];\n        let d;\n        if (d1 !== undefined) {\n          d = x0 - chartData.indexOf(d0) > chartData.indexOf(d1) - x0 ? d1 : d0;\n        } else {\n          d = d0;\n        }\n\n        lineTrace.attr(\n          \"transform\",\n          \"translate(\" + x(chartData.indexOf(d)) + \",0)\"\n        );\n        myArrayOfKeys.forEach((item, index) => {\n          d3.select(`#${myID} .marker${index}`).attr(\n            \"transform\",\n            \"translate(\" +\n              x(chartData.indexOf(d)) +\n              \",\" +\n              y(d[item[\"dataKey\"]]) +\n              \")\"\n          );\n        });\n        myArrayOfKeys.forEach((item, index) => {\n          let myText =\n            d[myArrayOfKeys[index]] !== null\n              ? numberFormatFn(d[item[\"dataKey\"]])\n              : \"\";\n\n          d3.select(`#${myID}Tooltip #lineTextConst${myID}${index}`).text(\n            myText\n          );\n        });\n\n        dateText.text(d.niceDate + \", \" + d.niceTime);\n\n        d3.select(`#${myID} .mouse-line`).attr(\"y2\", height);\n      })\n      .on(\"mouseleave\", () => {\n        d3.select(`#${myID} .mouse-line`).style(\"opacity\", \".5\");\n      })\n      .attr(\"class\", \"totalRect\")\n      .attr(\"fill\", \"none\")\n      .attr(\"x\", 0)\n      .attr(\"pointer-events\", \"all\")\n      .attr(\"width\", width)\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"height\", height)\n      .transition()\n      .duration(500);\n\n    // ////////////////////////// Set the data on load ////////////////////////\n\n    d3.set().add(chartData[chartData.length - 1]);\n    let d = chartData[chartData.length - 1];\n    lineTrace.attr(\"transform\", \"translate(\" + x(chartData.indexOf(d)) + \",0)\");\n    myArrayOfKeys.forEach((item, index) => {\n      d3.select(`#${myID} .marker${index}`).attr(\n        \"transform\",\n        \"translate(\" +\n          x(chartData.indexOf(d)) +\n          \",\" +\n          y(d[item[\"dataKey\"]]) +\n          \")\"\n      );\n    });\n    myArrayOfKeys.forEach((item, index) => {\n      let myText =\n        d[myArrayOfKeys[index]] !== null\n          ? numberFormatFn(d[item[\"dataKey\"]])\n          : \"\";\n\n      d3.select(`#${myID}Tooltip #lineTextConst${myID}${index}`).text(myText);\n    });\n    dateText.text(d.niceDate + \", \" + d.niceTime);\n    // // YOYText.text(YOYdiff);\n    // // YOYText.attr(\"class\", YOYdiffColor);\n\n    d3.select(`#${myID} .mouse-line`).attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, valueArray, props.myID, props.numberFormatFn);\n  }, []);\n  useEffect(() => {\n    createChart(chartData, valueArray, props.myID, props.numberFormatFn);\n  }, [props.resize]);\n  return <div ref={chart}></div>;\n}\n"]},"metadata":{},"sourceType":"module"}