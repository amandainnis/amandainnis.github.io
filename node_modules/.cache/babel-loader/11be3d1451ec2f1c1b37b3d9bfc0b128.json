{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/insightAnalytics/InsightAnalyticsCard.js\";\nimport React, { useEffect, createRef, useState } from \"react\";\nimport * as Common from \"../reusable/common\";\n\nconst imgInsightAnalytics = require(\"../../assets/images/drilldown_client-thumb.png\");\n\nconst data = {\n  id: 1,\n  img: imgInsightAnalytics,\n  title: \"Insight Analytics\",\n  subtitle: \"A Client Data Dashboard\",\n  blurb: [\"Insight Analytics new containerized desktop application within the harbor framework.  It will provide analytical and reporting capabilities to Research Sales, Sales Traders and COO/Operations/Finance/Capital Markets personas.\", \"To showcase a user's client universe as relates to top buys / sells, client value, monthly CV totals with YOY comparison, CV by product, sector totals, percent change, sectors by client type. To focus or drilldown on these specific attributes--as well as readership, touchpoint and 13F dataâ€“as they relate to a client / ticker / sector \"],\n  bkgd: \"var(--analytics-bkgd)\"\n};\nconst backupPlan = [{\n  \"Rank A: Real-Time Performance\": {\n    \"Consumer Discretionary\": \"1.57%\",\n    \"Communication Services\": \"1.43%\",\n    Energy: \"1.31%\",\n    Materials: \"1.30%\",\n    Industrials: \"1.16%\",\n    \"Information Technology\": \"1.06%\",\n    Financials: \"0.77%\",\n    \"Real Estate\": \"0.22%\",\n    \"Health Care\": \"-0.33%\",\n    \"Consumer Staples\": \"-0.48%\",\n    Utilities: \"-0.88%\"\n  }\n}];\nconst sectorUrl = \"https://www.alphavantage.co/query?function=SECTOR&apikey=NKT90SOYWKFBP04F\";\n\nfunction InsightAnalyticsCard(props) {\n  var isMounted = false;\n  const sectorDataRef = createRef();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sectorData = _useState4[0],\n        setSectorData = _useState4[1];\n\n  async function asyncFetch() {\n    const res = await fetch(sectorUrl);\n    const myData = await res.json();\n\n    if (myData !== undefined && myData[\"Rank A: Real-Time Performance\"] !== undefined) {\n      console.log(myData[\"Rank A: Real-Time Performance\"]);\n      let reformattedData = addWidth(myData[\"Rank A: Real-Time Performance\"]);\n      console.log(reformattedData);\n      setIsLoading(false);\n      setSectorData(reformattedData);\n      console.log(sectorData);\n      sectorDataRef.current = reformattedData;\n    } else {\n      let reformattedData = addWidth(backupPlan[0][\"Rank A: Real-Time Performance\"]);\n      setIsLoading(false);\n      setSectorData(backupPlan[0][\"Rank A: Real-Time Performance\"]);\n      sectorDataRef.current = reformattedData;\n    }\n  }\n\n  function fetchSectors() {\n    return fetch(sectorUrl).then(res => {\n      if (!res.ok) {\n        throw Error(\"sadface\"); // return (res = backupPlan[0][\"Rank A: Real-Time Performance\"]);\n      }\n\n      return res;\n    }).then(res => res.json());\n  }\n\n  function resolveFetchedSectors() {\n    setIsLoading(true);\n    fetchSectors().then(res => {\n      if (res !== undefined && res[\"Rank A: Real-Time Performance\"] !== undefined) {\n        console.log(res[\"Rank A: Real-Time Performance\"]);\n        let data = addWidth(res[\"Rank A: Real-Time Performance\"]);\n        console.log(data);\n        setIsLoading(false);\n        setSectorData(data);\n        console.log(sectorData);\n        sectorDataRef.current = data;\n      } else {\n        let data = addWidth(backupPlan[0][\"Rank A: Real-Time Performance\"]);\n        setIsLoading(false);\n        setSectorData(backupPlan[0][\"Rank A: Real-Time Performance\"]);\n        sectorDataRef.current = data;\n      }\n    });\n    console.log(sectorDataRef);\n  }\n\n  function mapSectorBackgrounds(value) {\n    if (value === \"Communication Services\") {\n      return \"var(--comm-services)\";\n    } else if (value === \"Consumer Discretionary\") {\n      return \"var(--con-discretionary)\";\n    } else if (value === \"Consumer Staples\") {\n      return \"var(--con-staples)\";\n    } else if (value === \"Energy\") {\n      return \"var(--energy)\";\n    } else if (value === \"Financials\") {\n      return \"var(--financials)\";\n    } else if (value === \"Health Care\") {\n      return \"var(--healthcare)\";\n    } else if (value === \"Industrials\") {\n      return \"var(--industrials)\";\n    } else if (value === \"Information Technology\") {\n      return \"var(--info-tech)\";\n    } else if (value === \"Materials\") {\n      return \"var(--materials)\";\n    } else if (value === \"Real Estate\") {\n      return \"var(--real-estate)\";\n    } else if (value === \"Utilities\") {\n      return \"var(--utilities)\";\n    }\n  }\n\n  function addWidth(res) {\n    let newObject = mapObject(res);\n    newObject = Common.bubbleSort(newObject); // console.log(newObject[0]);\n\n    let maxA = newObject[0].val;\n    let maxB = newObject[newObject.length - 1].val;\n    let max = Math.abs(maxA) > Math.abs(maxB) ? maxA : maxB;\n    let finalObject = newObject.map(item => {\n      let width = Math.abs(Math.round(item.val / max * 1000) / 10);\n      let color = mapSectorBackgrounds(item.name);\n      return {\n        name: item.name,\n        val: item.val,\n        isNegative: item.isNegative,\n        width: width,\n        color: color\n      };\n    }); // console.log(finalObject);\n\n    return finalObject;\n  }\n\n  function mapObject(res) {\n    let tempArr = [];\n    Object.entries(res).map((res, i) => {\n      // console.log(res);\n      let temp = res[1].replace(/\\%/, \"\");\n      temp = parseFloat(temp);\n      let isNegative = temp < 0 ? true : false;\n      return tempArr.push({\n        name: res[0],\n        val: temp,\n        isNegative: isNegative\n      });\n    });\n    return tempArr;\n  }\n\n  useEffect(() => {\n    asyncFetch();\n  }, []);\n  return React.createElement(\"article\", {\n    className: \"portfolio-card\",\n    style: {\n      backgroundColor: data.bkgd\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, data.title), React.createElement(\"h4\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, data.subtitle)), React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bar-graph-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bar-graph\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, sectorData !== null && sectorData.map((res, i) => {\n    if (res.val >= 0) {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"flex-row-center narrow-row-height panel-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"colA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"colB\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"proportion-bar d-flex relative\",\n        style: {\n          width: res.width + \"%\",\n          backgroundColor: res.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"percent-class right-absolute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, res.val, \"%\"), React.createElement(\"div\", {\n        className: \"flex1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"flex-row-center narrow-row-height panel-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"colA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"proportion-bar d-flex relative\",\n        style: {\n          width: res.width + \"%\",\n          backgroundColor: res.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"percent-class left-absolute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, res.val, \"%\"), React.createElement(\"div\", {\n        className: \"flex1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"colB\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }));\n    }\n  })))));\n}\n\nexport default InsightAnalyticsCard;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/insightAnalytics/InsightAnalyticsCard.js"],"names":["React","useEffect","createRef","useState","Common","imgInsightAnalytics","require","data","id","img","title","subtitle","blurb","bkgd","backupPlan","Energy","Materials","Industrials","Financials","Utilities","sectorUrl","InsightAnalyticsCard","props","isMounted","sectorDataRef","isLoading","setIsLoading","sectorData","setSectorData","asyncFetch","res","fetch","myData","json","undefined","console","log","reformattedData","addWidth","current","fetchSectors","then","ok","Error","resolveFetchedSectors","mapSectorBackgrounds","value","newObject","mapObject","bubbleSort","maxA","val","maxB","length","max","Math","abs","finalObject","map","item","width","round","color","name","isNegative","tempArr","Object","entries","i","temp","replace","parseFloat","push","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAO,KAAKC,MAAZ,MAAwB,oBAAxB;;AACA,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,gDAAD,CAAnC;;AACA,MAAMC,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,CADO;AAEXC,EAAAA,GAAG,EAAEJ,mBAFM;AAGXK,EAAAA,KAAK,EAAE,mBAHI;AAIXC,EAAAA,QAAQ,EAAE,yBAJC;AAKXC,EAAAA,KAAK,EAAE,CACL,mOADK,EAEL,kVAFK,CALI;AASXC,EAAAA,IAAI,EAAE;AATK,CAAb;AAWA,MAAMC,UAAU,GAAG,CACjB;AACE,mCAAiC;AAC/B,8BAA0B,OADK;AAE/B,8BAA0B,OAFK;AAG/BC,IAAAA,MAAM,EAAE,OAHuB;AAI/BC,IAAAA,SAAS,EAAE,OAJoB;AAK/BC,IAAAA,WAAW,EAAE,OALkB;AAM/B,8BAA0B,OANK;AAO/BC,IAAAA,UAAU,EAAE,OAPmB;AAQ/B,mBAAe,OARgB;AAS/B,mBAAe,QATgB;AAU/B,wBAAoB,QAVW;AAW/BC,IAAAA,SAAS,EAAE;AAXoB;AADnC,CADiB,CAAnB;AAiBA,MAAMC,SAAS,GACb,2EADF;;AAGA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACnC,MAAIC,SAAS,GAAG,KAAhB;AACA,QAAMC,aAAa,GAAGtB,SAAS,EAA/B;;AAFmC,oBAGDC,QAAQ,CAAC,IAAD,CAHP;AAAA;AAAA,QAG5BsB,SAH4B;AAAA,QAGjBC,YAHiB;;AAAA,qBAICvB,QAAQ,EAJT;AAAA;AAAA,QAI5BwB,UAJ4B;AAAA,QAIhBC,aAJgB;;AAMnC,iBAAeC,UAAf,GAA4B;AAC1B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACX,SAAD,CAAvB;AACA,UAAMY,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAArB;;AACA,QACED,MAAM,KAAKE,SAAX,IACAF,MAAM,CAAC,+BAAD,CAAN,KAA4CE,SAF9C,EAGE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAAC,+BAAD,CAAlB;AACA,UAAIK,eAAe,GAAGC,QAAQ,CAACN,MAAM,CAAC,+BAAD,CAAP,CAA9B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,aAAa,CAACS,eAAD,CAAb;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACAH,MAAAA,aAAa,CAACe,OAAd,GAAwBF,eAAxB;AACD,KAXD,MAWO;AACL,UAAIA,eAAe,GAAGC,QAAQ,CAC5BxB,UAAU,CAAC,CAAD,CAAV,CAAc,+BAAd,CAD4B,CAA9B;AAGAY,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,aAAa,CAACd,UAAU,CAAC,CAAD,CAAV,CAAc,+BAAd,CAAD,CAAb;AACAU,MAAAA,aAAa,CAACe,OAAd,GAAwBF,eAAxB;AACD;AACF;;AAED,WAASG,YAAT,GAAwB;AACtB,WAAOT,KAAK,CAACX,SAAD,CAAL,CACJqB,IADI,CACCX,GAAG,IAAI;AACX,UAAI,CAACA,GAAG,CAACY,EAAT,EAAa;AACX,cAAMC,KAAK,CAAC,SAAD,CAAX,CADW,CAEX;AACD;;AACD,aAAOb,GAAP;AACD,KAPI,EAQJW,IARI,CAQCX,GAAG,IAAIA,GAAG,CAACG,IAAJ,EARR,CAAP;AASD;;AACD,WAASW,qBAAT,GAAiC;AAC/BlB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAc,IAAAA,YAAY,GAAGC,IAAf,CAAoBX,GAAG,IAAI;AACzB,UACEA,GAAG,KAAKI,SAAR,IACAJ,GAAG,CAAC,+BAAD,CAAH,KAAyCI,SAF3C,EAGE;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAAC,+BAAD,CAAf;AACA,YAAIvB,IAAI,GAAG+B,QAAQ,CAACR,GAAG,CAAC,+BAAD,CAAJ,CAAnB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY7B,IAAZ;AACAmB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,aAAa,CAACrB,IAAD,CAAb;AACA4B,QAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACAH,QAAAA,aAAa,CAACe,OAAd,GAAwBhC,IAAxB;AACD,OAXD,MAWO;AACL,YAAIA,IAAI,GAAG+B,QAAQ,CAACxB,UAAU,CAAC,CAAD,CAAV,CAAc,+BAAd,CAAD,CAAnB;AACAY,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,aAAa,CAACd,UAAU,CAAC,CAAD,CAAV,CAAc,+BAAd,CAAD,CAAb;AACAU,QAAAA,aAAa,CAACe,OAAd,GAAwBhC,IAAxB;AACD;AACF,KAlBD;AAmBA4B,IAAAA,OAAO,CAACC,GAAR,CAAYZ,aAAZ;AACD;;AAED,WAASqB,oBAAT,CAA8BC,KAA9B,EAAqC;AACnC,QAAIA,KAAK,KAAK,wBAAd,EAAwC;AACtC,aAAO,sBAAP;AACD,KAFD,MAEO,IAAIA,KAAK,KAAK,wBAAd,EAAwC;AAC7C,aAAO,0BAAP;AACD,KAFM,MAEA,IAAIA,KAAK,KAAK,kBAAd,EAAkC;AACvC,aAAO,oBAAP;AACD,KAFM,MAEA,IAAIA,KAAK,KAAK,QAAd,EAAwB;AAC7B,aAAO,eAAP;AACD,KAFM,MAEA,IAAIA,KAAK,KAAK,YAAd,EAA4B;AACjC,aAAO,mBAAP;AACD,KAFM,MAEA,IAAIA,KAAK,KAAK,aAAd,EAA6B;AAClC,aAAO,mBAAP;AACD,KAFM,MAEA,IAAIA,KAAK,KAAK,aAAd,EAA6B;AAClC,aAAO,oBAAP;AACD,KAFM,MAEA,IAAIA,KAAK,KAAK,wBAAd,EAAwC;AAC7C,aAAO,kBAAP;AACD,KAFM,MAEA,IAAIA,KAAK,KAAK,WAAd,EAA2B;AAChC,aAAO,kBAAP;AACD,KAFM,MAEA,IAAIA,KAAK,KAAK,aAAd,EAA6B;AAClC,aAAO,oBAAP;AACD,KAFM,MAEA,IAAIA,KAAK,KAAK,WAAd,EAA2B;AAChC,aAAO,kBAAP;AACD;AACF;;AAED,WAASR,QAAT,CAAkBR,GAAlB,EAAuB;AACrB,QAAIiB,SAAS,GAAGC,SAAS,CAAClB,GAAD,CAAzB;AACAiB,IAAAA,SAAS,GAAG3C,MAAM,CAAC6C,UAAP,CAAkBF,SAAlB,CAAZ,CAFqB,CAGrB;;AACA,QAAIG,IAAI,GAAGH,SAAS,CAAC,CAAD,CAAT,CAAaI,GAAxB;AACA,QAAIC,IAAI,GAAGL,SAAS,CAACA,SAAS,CAACM,MAAV,GAAmB,CAApB,CAAT,CAAgCF,GAA3C;AACA,QAAIG,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASN,IAAT,IAAiBK,IAAI,CAACC,GAAL,CAASJ,IAAT,CAAjB,GAAkCF,IAAlC,GAAyCE,IAAnD;AAEA,QAAIK,WAAW,GAAGV,SAAS,CAACW,GAAV,CAAcC,IAAI,IAAI;AACtC,UAAIC,KAAK,GAAGL,IAAI,CAACC,GAAL,CAASD,IAAI,CAACM,KAAL,CAAYF,IAAI,CAACR,GAAL,GAAWG,GAAZ,GAAmB,IAA9B,IAAsC,EAA/C,CAAZ;AACA,UAAIQ,KAAK,GAAGjB,oBAAoB,CAACc,IAAI,CAACI,IAAN,CAAhC;AACA,aAAO;AACLA,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IADN;AAELZ,QAAAA,GAAG,EAAEQ,IAAI,CAACR,GAFL;AAGLa,QAAAA,UAAU,EAAEL,IAAI,CAACK,UAHZ;AAILJ,QAAAA,KAAK,EAAEA,KAJF;AAKLE,QAAAA,KAAK,EAAEA;AALF,OAAP;AAOD,KAViB,CAAlB,CARqB,CAmBrB;;AACA,WAAOL,WAAP;AACD;;AACD,WAAST,SAAT,CAAmBlB,GAAnB,EAAwB;AACtB,QAAImC,OAAO,GAAG,EAAd;AACAC,IAAAA,MAAM,CAACC,OAAP,CAAerC,GAAf,EAAoB4B,GAApB,CAAwB,CAAC5B,GAAD,EAAMsC,CAAN,KAAY;AAClC;AACA,UAAIC,IAAI,GAAGvC,GAAG,CAAC,CAAD,CAAH,CAAOwC,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAX;AACAD,MAAAA,IAAI,GAAGE,UAAU,CAACF,IAAD,CAAjB;AACA,UAAIL,UAAU,GAAGK,IAAI,GAAG,CAAP,GAAW,IAAX,GAAkB,KAAnC;AACA,aAAOJ,OAAO,CAACO,IAAR,CAAa;AAClBT,QAAAA,IAAI,EAAEjC,GAAG,CAAC,CAAD,CADS;AAElBqB,QAAAA,GAAG,EAAEkB,IAFa;AAGlBL,QAAAA,UAAU,EAAEA;AAHM,OAAb,CAAP;AAKD,KAVD;AAWA,WAAOC,OAAP;AACD;;AAEDhE,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAoC,IAAA,KAAK,EAAE;AAAE4C,MAAAA,eAAe,EAAElE,IAAI,CAACM;AAAxB,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBN,IAAI,CAACG,KAA5B,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,IAAI,CAACI,QAA/B,CAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGgB,UAAU,KAAK,IAAf,IACCA,UAAU,CAAC+B,GAAX,CAAe,CAAC5B,GAAD,EAAMsC,CAAN,KAAY;AACzB,QAAItC,GAAG,CAACqB,GAAJ,IAAW,CAAf,EAAkB;AAChB,aACE;AACE,QAAA,GAAG,EAAEiB,CADP;AAEE,QAAA,SAAS,EAAC,6CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,gCADZ;AAEE,QAAA,KAAK,EAAE;AACLR,UAAAA,KAAK,EAAE9B,GAAG,CAAC8B,KAAJ,GAAY,GADd;AAELa,UAAAA,eAAe,EAAE3C,GAAG,CAACgC;AAFhB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhC,GAAG,CAACqB,GADP,MARF,EAWE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CALF,CADF;AAqBD,KAtBD,MAsBO;AACL,aACE;AACE,QAAA,GAAG,EAAEiB,CADP;AAEE,QAAA,SAAS,EAAC,6CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,gCADZ;AAEE,QAAA,KAAK,EAAE;AACLR,UAAAA,KAAK,EAAE9B,GAAG,CAAC8B,KAAJ,GAAY,GADd;AAELa,UAAAA,eAAe,EAAE3C,GAAG,CAACgC;AAFhB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhC,GAAG,CAACqB,GADP,MARF,EAWE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CAJF,EAiBE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,CADF;AAqBD;AACF,GA9CD,CAHJ,CADF,CADF,CALF,CADF;AAmFD;;AAED,eAAe9B,oBAAf","sourcesContent":["import React, { useEffect, createRef, useState } from \"react\";\nimport * as Common from \"../reusable/common\";\nconst imgInsightAnalytics = require(\"../../assets/images/drilldown_client-thumb.png\");\nconst data = {\n  id: 1,\n  img: imgInsightAnalytics,\n  title: \"Insight Analytics\",\n  subtitle: \"A Client Data Dashboard\",\n  blurb: [\n    \"Insight Analytics new containerized desktop application within the harbor framework.  It will provide analytical and reporting capabilities to Research Sales, Sales Traders and COO/Operations/Finance/Capital Markets personas.\",\n    \"To showcase a user's client universe as relates to top buys / sells, client value, monthly CV totals with YOY comparison, CV by product, sector totals, percent change, sectors by client type. To focus or drilldown on these specific attributes--as well as readership, touchpoint and 13F dataâ€“as they relate to a client / ticker / sector \"\n  ],\n  bkgd: \"var(--analytics-bkgd)\"\n};\nconst backupPlan = [\n  {\n    \"Rank A: Real-Time Performance\": {\n      \"Consumer Discretionary\": \"1.57%\",\n      \"Communication Services\": \"1.43%\",\n      Energy: \"1.31%\",\n      Materials: \"1.30%\",\n      Industrials: \"1.16%\",\n      \"Information Technology\": \"1.06%\",\n      Financials: \"0.77%\",\n      \"Real Estate\": \"0.22%\",\n      \"Health Care\": \"-0.33%\",\n      \"Consumer Staples\": \"-0.48%\",\n      Utilities: \"-0.88%\"\n    }\n  }\n];\nconst sectorUrl =\n  \"https://www.alphavantage.co/query?function=SECTOR&apikey=NKT90SOYWKFBP04F\";\n\nfunction InsightAnalyticsCard(props) {\n  var isMounted = false;\n  const sectorDataRef = createRef();\n  const [isLoading, setIsLoading] = useState(true);\n  const [sectorData, setSectorData] = useState();\n\n  async function asyncFetch() {\n    const res = await fetch(sectorUrl);\n    const myData = await res.json();\n    if (\n      myData !== undefined &&\n      myData[\"Rank A: Real-Time Performance\"] !== undefined\n    ) {\n      console.log(myData[\"Rank A: Real-Time Performance\"]);\n      let reformattedData = addWidth(myData[\"Rank A: Real-Time Performance\"]);\n      console.log(reformattedData);\n      setIsLoading(false);\n      setSectorData(reformattedData);\n      console.log(sectorData);\n      sectorDataRef.current = reformattedData;\n    } else {\n      let reformattedData = addWidth(\n        backupPlan[0][\"Rank A: Real-Time Performance\"]\n      );\n      setIsLoading(false);\n      setSectorData(backupPlan[0][\"Rank A: Real-Time Performance\"]);\n      sectorDataRef.current = reformattedData;\n    }\n  }\n\n  function fetchSectors() {\n    return fetch(sectorUrl)\n      .then(res => {\n        if (!res.ok) {\n          throw Error(\"sadface\");\n          // return (res = backupPlan[0][\"Rank A: Real-Time Performance\"]);\n        }\n        return res;\n      })\n      .then(res => res.json());\n  }\n  function resolveFetchedSectors() {\n    setIsLoading(true);\n    fetchSectors().then(res => {\n      if (\n        res !== undefined &&\n        res[\"Rank A: Real-Time Performance\"] !== undefined\n      ) {\n        console.log(res[\"Rank A: Real-Time Performance\"]);\n        let data = addWidth(res[\"Rank A: Real-Time Performance\"]);\n        console.log(data);\n        setIsLoading(false);\n        setSectorData(data);\n        console.log(sectorData);\n        sectorDataRef.current = data;\n      } else {\n        let data = addWidth(backupPlan[0][\"Rank A: Real-Time Performance\"]);\n        setIsLoading(false);\n        setSectorData(backupPlan[0][\"Rank A: Real-Time Performance\"]);\n        sectorDataRef.current = data;\n      }\n    });\n    console.log(sectorDataRef);\n  }\n\n  function mapSectorBackgrounds(value) {\n    if (value === \"Communication Services\") {\n      return \"var(--comm-services)\";\n    } else if (value === \"Consumer Discretionary\") {\n      return \"var(--con-discretionary)\";\n    } else if (value === \"Consumer Staples\") {\n      return \"var(--con-staples)\";\n    } else if (value === \"Energy\") {\n      return \"var(--energy)\";\n    } else if (value === \"Financials\") {\n      return \"var(--financials)\";\n    } else if (value === \"Health Care\") {\n      return \"var(--healthcare)\";\n    } else if (value === \"Industrials\") {\n      return \"var(--industrials)\";\n    } else if (value === \"Information Technology\") {\n      return \"var(--info-tech)\";\n    } else if (value === \"Materials\") {\n      return \"var(--materials)\";\n    } else if (value === \"Real Estate\") {\n      return \"var(--real-estate)\";\n    } else if (value === \"Utilities\") {\n      return \"var(--utilities)\";\n    }\n  }\n\n  function addWidth(res) {\n    let newObject = mapObject(res);\n    newObject = Common.bubbleSort(newObject);\n    // console.log(newObject[0]);\n    let maxA = newObject[0].val;\n    let maxB = newObject[newObject.length - 1].val;\n    let max = Math.abs(maxA) > Math.abs(maxB) ? maxA : maxB;\n\n    let finalObject = newObject.map(item => {\n      let width = Math.abs(Math.round((item.val / max) * 1000) / 10);\n      let color = mapSectorBackgrounds(item.name);\n      return {\n        name: item.name,\n        val: item.val,\n        isNegative: item.isNegative,\n        width: width,\n        color: color\n      };\n    });\n    // console.log(finalObject);\n    return finalObject;\n  }\n  function mapObject(res) {\n    let tempArr = [];\n    Object.entries(res).map((res, i) => {\n      // console.log(res);\n      let temp = res[1].replace(/\\%/, \"\");\n      temp = parseFloat(temp);\n      let isNegative = temp < 0 ? true : false;\n      return tempArr.push({\n        name: res[0],\n        val: temp,\n        isNegative: isNegative\n      });\n    });\n    return tempArr;\n  }\n\n  useEffect(() => {\n    asyncFetch();\n  }, []);\n\n  return (\n    <article className=\"portfolio-card\" style={{ backgroundColor: data.bkgd }}>\n      <div className=\"text-section\">\n        <h1 className=\"title\">{data.title}</h1>\n        <h4 className=\"subtitle\">{data.subtitle}</h4>\n      </div>\n      <div className=\"flex-row\">\n        <div className=\"bar-graph-wrapper\">\n          <div className=\"bar-graph\">\n            {/* {myData[0].val} */}\n            {sectorData !== null &&\n              sectorData.map((res, i) => {\n                if (res.val >= 0) {\n                  return (\n                    <div\n                      key={i}\n                      className=\"flex-row-center narrow-row-height panel-row\"\n                    >\n                      <div className=\"colA\"></div>\n                      <div className=\"colB\">\n                        <div\n                          className=\"proportion-bar d-flex relative\"\n                          style={{\n                            width: res.width + \"%\",\n                            backgroundColor: res.color\n                          }}\n                        ></div>\n                        <div className=\"percent-class right-absolute\">\n                          {res.val}%\n                        </div>\n                        <div className=\"flex1\"></div>\n                      </div>\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div\n                      key={i}\n                      className=\"flex-row-center narrow-row-height panel-row\"\n                    >\n                      <div className=\"colA\">\n                        <div\n                          className=\"proportion-bar d-flex relative\"\n                          style={{\n                            width: res.width + \"%\",\n                            backgroundColor: res.color\n                          }}\n                        ></div>\n                        <div className=\"percent-class left-absolute\">\n                          {res.val}%\n                        </div>\n                        <div className=\"flex1\"></div>\n                      </div>\n                      <div className=\"colB\"></div>\n                    </div>\n                  );\n                }\n              })}\n          </div>\n        </div>\n\n        {/* <div className=\"legend\">\n          {sectorDataRef.current !== null &&\n            sectorDataRef.current.map((res, i) => {\n              return (\n                <div\n                  key={`legend-${i}`}\n                  className=\"flex-row-center narrow-row-height\"\n                >\n                  <div\n                    className=\"square\"\n                    style={{\n                      backgroundColor: res.color\n                    }}\n                  ></div>\n                  <div className=\"title cursor-pointer\">{res.name}</div>\n                </div>\n              );\n            })}\n        </div> */}\n      </div>\n    </article>\n  );\n}\n\nexport default InsightAnalyticsCard;\n"]},"metadata":{},"sourceType":"module"}