{"ast":null,"code":"import _slicedToArray from \"/Users/amandainnis/ReactProjects/react-site/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChartCV.js\";\nimport React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nexport default function LineChartCV() {\n  const lineChartData = [{\n    y2018: 36,\n    y2019: 56,\n    month: 1\n  }, {\n    y2018: 47,\n    y2019: 99,\n    month: 2\n  }, {\n    y2018: 80,\n    y2019: 105,\n    month: 3\n  }, {\n    y2018: 90,\n    y2019: 115,\n    month: 4\n  }, {\n    y2018: 120,\n    y2019: 135,\n    month: 5\n  }];\n  const chart = createRef();\n  const chartContainer = createRef();\n  const maxVal = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n\n  const _useState = useState(lineChartData),\n        _useState2 = _slicedToArray(_useState, 2),\n        chartData = _useState2[0],\n        setChartData = _useState2[1]; // this is where you want the selected bar group to start onInit--tooltip and highlight would start here\n  // in most cases, we are starting with the current month\n  // @Input(\"barIndexSetpoint\") barIndexSetpoint;\n  // this is the function to format time values of x axis\n  // @Input(\"timeFormatFn\") timeFormatFn;\n  // constructor() {\n  //   this.subs.sink = fromEvent(window, \"resize\").pipe(debounceTime(200)).subscribe(() => this.createChart());\n  // }\n\n\n  function numberFormatFn(d) {\n    return d;\n  }\n\n  function timeFormat(d) {\n    if (d == 1) {\n      return \"Jan\";\n    } else if (d == 2) {\n      return \"Feb\";\n    } else if (d == 3) {\n      return \"Mar\";\n    } else if (d == 4) {\n      return \"Apr\";\n    } else if (d == 5) {\n      return \"May\";\n    } else if (d == 6) {\n      return \"Jun\";\n    } else if (d == 7) {\n      return \"Jul\";\n    } else if (d == 8) {\n      return \"Aug\";\n    } else if (d == 9) {\n      return \"Sep\";\n    } else if (d == 10) {\n      return \"Oct\";\n    } else if (d == 11) {\n      return \"Nov\";\n    } else {\n      return \"\";\n    }\n  }\n\n  function getCurrentMonth() {\n    const date = new Date();\n    const currentMonthNumber = date.getMonth() + 1; //console.log('i am current month number', currentMonthNumber);\n\n    return currentMonthNumber;\n  }\n\n  function findlastValidDataCurrentYear(currVal, nextVal, currentObj, lastValid, dataArraySetPoint) {\n    if (nextVal == null && currVal !== null) {\n      lastValid = currentObj; // console.log('nextVal == null && currVal !== null, i am currentObj', nextVal, currVal, currentObj)\n\n      return lastValid;\n    } else if (nextVal == null && currVal == null && lastValid == undefined) {\n      // console.log('nextVal == null && currVal == null && lastValid == undefined', nextVal, currVal, lastValid);\n      lastValid = dataArraySetPoint; //console.log('i am now defined', lastValid);\n\n      return lastValid;\n    } else {\n      // console.log('lastValid, nextVal, currVal, currentObj', lastValid, nextVal, currVal, currentObj)\n      lastValid = lastValid;\n      return lastValid;\n    }\n  }\n\n  function getYOYdiffValue(currYear, prevYear) {\n    return currYear == null || prevYear == null ? null : currYear - prevYear;\n  }\n\n  function getYOYdiffColor(YOY) {\n    if (YOY < 0) {\n      return \"YOYred\";\n    } else {\n      return \"YOYgreen\";\n    }\n  } // Math.min will assign null values to 0 so need to filter out null if want min to be actual min,\n  // but it may look better to have an actual zero\n\n\n  function getMaxVal(myData, yLineOne, yLineTwo) {\n    let tempArr = [];\n\n    for (let i = 0; i < myData.length; i++) {\n      tempArr.push(myData[i][yLineOne], myData[i][yLineTwo]);\n      if (myData[i][yLineOne] !== null) tempArr.push(myData[i][yLineOne]);\n      if (myData[i][yLineTwo] !== null) tempArr.push(myData[i][yLineTwo]);\n    }\n\n    let temp2018max = tempArr.reduce((a, b) => Math.max(a, b));\n    let temp2018min = tempArr.reduce((a, b) => Math.min(a, b));\n    return {\n      min: temp2018min,\n      max: temp2018max\n    };\n  }\n\n  function createChart(chartData, yLineOne, yLineTwo, numberFormatFn, xAxisKeyName) {\n    let lastValidDataCurrentYear; //let lastValidDataPreviousYear;\n\n    let YOYdiff;\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    let tempMinMax = getMaxVal(chartData, yLineOne, yLineTwo);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max;\n    let currentMonth = getCurrentMonth();\n    let margin = {\n      top: 20,\n      right: 60,\n      bottom: 0,\n      left: 10\n    }; //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n\n    let width = Number.isNaN(parseInt(d3.select(containerElement).style(\"width\"))) ? 0 : parseInt(d3.select(containerElement).style(\"width\")) - margin.left - margin.right;\n    let height = 220 - margin.top; // translates a function to d3, passes angular scope into d3\n    // tell format func that the function with \"this\" should be asscoiated with the currect ts component\n    //let bisectDate = d3.bisector((d) => timeFormat(d[xAxisKeyName])).left; // this would return the month, but we aren't using it right now\n\n    let justBisect = d3.bisector(d => d[xAxisKeyName]).left; //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n    let y = d3.scaleLinear().range([height, 0]); //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3.axisBottom(x).ticks(chartData.length).tickFormat(function (d) {\n      // console.log(d);\n      return timeFormat(d);\n    }).tickPadding(6);\n    let yAxis = d3.axisRight(y).tickFormat(d => {\n      return numberFormatFn(d);\n    }) // .ticks(6)\n    .tickPadding(6); //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    const lineOne = d3.line().defined(function (d) {\n      if (d[yLineOne] !== null) {\n        return d[yLineOne];\n      }\n    }).x(d => x(d[xAxisKeyName])).y(d => y(d[yLineOne]));\n    const lineTwo = d3.line().defined(function (d) {\n      if (d[yLineTwo] !== null) {\n        return d[yLineTwo];\n      }\n    }).x(d => x(d[xAxisKeyName])).y(d => y(d[yLineTwo])); //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3.select(containerElement).append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", height + margin.top + margin.bottom + 40).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n    chartData.sort((a, b) => a[xAxisKeyName] - b[xAxisKeyName]); //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([parseInt(d3.min(chartData, d => d[xAxisKeyName])), parseInt(d3.max(chartData, d => d[xAxisKeyName]))]);\n    y.domain([minVal, maxVal]); //////////////////////// Append the lines / areas  ////////////////////////\n\n    CVsvg.append(\"path\").datum(chartData).attr(\"class\", \"lineOne line\").attr(\"d\", lineOne).transition().duration(500);\n    CVsvg.append(\"path\").datum(chartData).attr(\"class\", \"lineTwo line\").attr(\"d\", lineTwo).transition().duration(500); ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\").attr(\"class\", \"yAxis\").attr(\"transform\", \"translate(\" + (width + 6) + \",0)\").call(yAxis);\n    CVsvg.append(\"g\").attr(\"class\", \"xAxis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis); //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\").attr(\"class\", \"mouse-line x\").style(\"opacity\", 0.5).attr(\"y1\", 0).attr(\"y2\", height);\n    const marker = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker.append(\"circle\").attr(\"class\", \"line-marker lineOne\").transition().duration(500).attr(\"r\", 5);\n    const marker2 = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker2.append(\"circle\").attr(\"class\", \"line-marker lineTwo\").transition().duration(500).attr(\"r\", 5); //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3.select(containerElement).append(\"div\").attr(\"class\", \"tooltipDiv\");\n    const dateContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    dateContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"Month\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const lineOneTextContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    lineOneTextContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"2018\");\n    lineOneTextContainer.append(\"div\").attr(\"class\", \"dot lineOne\");\n    const lineOneText = lineOneTextContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const lineTwoTextContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    lineTwoTextContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"2019\");\n    lineTwoTextContainer.append(\"div\").attr(\"class\", \"dot lineTwo\");\n    const lineTwoText = lineTwoTextContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const YOYContainer = tooltipDiv.append(\"div\").attr(\"class\", \"text-container\");\n    YOYContainer.append(\"div\").attr(\"class\", \"label-style mr-1\").text(\"YOY\");\n    const YOYText = YOYContainer.append(\"div\"); //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\").on(\"mouseover\", () => {\n      lineTrace.style(\"display\", null);\n      d3.select(\".mouse-line\").style(\"opacity\", \"1\");\n      d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n    }).on(\"mousemove\", () => {\n      let xy = d3.mouse(d3.event.currentTarget); // let x0 = timeFormat(x.invert(xy[0]));\n      // let mouseIndex = bisectDate(chartData, x0, 1);\n\n      let x0 = x.invert(xy[0]);\n      let mouseIndex = justBisect(chartData, x0, 1);\n      let d0 = chartData[mouseIndex - 1];\n      let d1 = chartData[mouseIndex]; // lastValidDataPreviousYear = findlastValidDataCurrentYear(d0[yLineOne], d1[yLineOne], d0, lastValidDataPreviousYear, chartData[currentMonth - 1]);\n      // console.log('i am x0, d0[xAxisKeyName], d1,', x0, d0[xAxisKeyName], d1)\n\n      lastValidDataCurrentYear = findlastValidDataCurrentYear(d0[yLineTwo], d1[yLineTwo], d0, lastValidDataCurrentYear, chartData[currentMonth - 1]); // console.log('i am x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear', x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear)\n\n      let d;\n\n      if (d1 !== undefined) {\n        d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0; // d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n      } else {\n        d = d0;\n      }\n\n      lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n      marker.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"); // marker.attr('transform', d[yLineOne] !== null ? 'translate(' + x(d[xAxisKeyName]) + ',' + y(d[yLineOne]) + ')' : 'translate(' + x(lastValidDataPreviousYear[xAxisKeyName]) + ',' + y(lastValidDataPreviousYear[yLineOne]) + ')');\n\n      marker2.attr(\"transform\", d[yLineTwo] !== null ? \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\" : \"translate(\" + x(lastValidDataCurrentYear[xAxisKeyName]) + \",\" + y(lastValidDataCurrentYear[yLineTwo]) + \")\");\n      YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n      let YOYdiffColor = getYOYdiffColor(YOYdiff); // (d[yLineTwo] == null) ? YOYdiff = null : YOYdiff = numberFormatFn(d[yLineTwo] - d[yLineOne]);\n\n      let l1text = d[yLineOne] !== null ? numberFormatFn(d[yLineOne]) : \"\";\n      let l2text = d[yLineTwo] !== null ? numberFormatFn(d[yLineTwo]) : \"\";\n      YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n      lineOneText.text(l1text);\n      lineTwoText.text(l2text);\n      dateText.text(timeFormat(d[xAxisKeyName]));\n      YOYText.text(YOYdiff);\n      YOYText.attr(\"class\", YOYdiffColor);\n      d3.select(\".mouse-line.x\").attr(\"y2\", height);\n    }).attr(\"class\", \"totalRect\").attr(\"fill\", \"none\").attr(\"x\", 0).attr(\"pointer-events\", \"all\").attr(\"width\", width).attr(\"transform\", \"translate(0,0)\").attr(\"height\", height).transition().duration(500); //////////////////////// Set the data on load ////////////////////////\n    // d3.set().add(chartData[currentMonth - 1]);\n    // let d = chartData[currentMonth - 1];\n    // lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n    // marker.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    // );\n    // marker2.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n    // );\n    // YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n    // let YOYdiffColor = getYOYdiffColor(YOYdiff);\n    // lineOneText.text(numberFormatFn(d[yLineOne]));\n    // lineTwoText.text(numberFormatFn(d[yLineTwo]));\n    // dateText.text(timeFormat(d[xAxisKeyName]));\n    // YOYText.text(numberFormatFn(YOYdiff));\n    // YOYText.attr(\"class\", YOYdiffColor);\n    // d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, \"y2018\", \"y2019\", numberFormatFn, \"month\");\n  }, []);\n  return React.createElement(\"div\", {\n    ref: chart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/react-site/portfolio/src/components/reusable/LineChartCV.js"],"names":["React","createRef","useState","useRef","useEffect","d3","LineChartCV","lineChartData","y2018","y2019","month","chart","chartContainer","maxVal","defaultHeight","containerElement","chartData","setChartData","numberFormatFn","d","timeFormat","getCurrentMonth","date","Date","currentMonthNumber","getMonth","findlastValidDataCurrentYear","currVal","nextVal","currentObj","lastValid","dataArraySetPoint","undefined","getYOYdiffValue","currYear","prevYear","getYOYdiffColor","YOY","getMaxVal","myData","yLineOne","yLineTwo","tempArr","i","length","push","temp2018max","reduce","a","b","Math","max","temp2018min","min","createChart","xAxisKeyName","lastValidDataCurrentYear","YOYdiff","current","innerHTML","tempMinMax","minVal","currentMonth","margin","top","right","bottom","left","width","Number","isNaN","parseInt","select","style","height","justBisect","bisector","x","scaleLinear","range","y","xAxis","axisBottom","ticks","tickFormat","tickPadding","yAxis","axisRight","lineOne","line","defined","lineTwo","CVsvg","append","attr","forEach","sort","domain","datum","transition","duration","call","lineTrace","marker","marker2","tooltipDiv","dateContainer","text","dateText","lineOneTextContainer","lineOneText","lineTwoTextContainer","lineTwoText","YOYContainer","YOYText","on","selectAll","xy","mouse","event","currentTarget","x0","invert","mouseIndex","d0","d1","YOYdiffColor","l1text","l2text"],"mappings":"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","sourcesContent":["import React, { createRef, useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nexport default function LineChartCV() {\n  const lineChartData = [\n    { y2018: 36, y2019: 56, month: 1 },\n    { y2018: 47, y2019: 99, month: 2 },\n    { y2018: 80, y2019: 105, month: 3 },\n    { y2018: 90, y2019: 115, month: 4 },\n    { y2018: 120, y2019: 135, month: 5 }\n  ];\n  const chart = createRef();\n  const chartContainer = createRef();\n\n  const maxVal = useRef();\n  const defaultHeight = 220;\n  var containerElement;\n\n  const [chartData, setChartData] = useState(lineChartData);\n  // this is where you want the selected bar group to start onInit--tooltip and highlight would start here\n  // in most cases, we are starting with the current month\n  // @Input(\"barIndexSetpoint\") barIndexSetpoint;\n\n  // this is the function to format time values of x axis\n  // @Input(\"timeFormatFn\") timeFormatFn;\n\n  // constructor() {\n  //   this.subs.sink = fromEvent(window, \"resize\").pipe(debounceTime(200)).subscribe(() => this.createChart());\n  // }\n\n  function numberFormatFn(d) {\n    return d;\n  }\n  function timeFormat(d) {\n    if (d == 1) {\n      return \"Jan\";\n    } else if (d == 2) {\n      return \"Feb\";\n    } else if (d == 3) {\n      return \"Mar\";\n    } else if (d == 4) {\n      return \"Apr\";\n    } else if (d == 5) {\n      return \"May\";\n    } else if (d == 6) {\n      return \"Jun\";\n    } else if (d == 7) {\n      return \"Jul\";\n    } else if (d == 8) {\n      return \"Aug\";\n    } else if (d == 9) {\n      return \"Sep\";\n    } else if (d == 10) {\n      return \"Oct\";\n    } else if (d == 11) {\n      return \"Nov\";\n    } else {\n      return \"\";\n    }\n  }\n\n  function getCurrentMonth() {\n    const date = new Date();\n    const currentMonthNumber = date.getMonth() + 1;\n    //console.log('i am current month number', currentMonthNumber);\n    return currentMonthNumber;\n  }\n\n  function findlastValidDataCurrentYear(\n    currVal,\n    nextVal,\n    currentObj,\n    lastValid,\n    dataArraySetPoint\n  ) {\n    if (nextVal == null && currVal !== null) {\n      lastValid = currentObj;\n      // console.log('nextVal == null && currVal !== null, i am currentObj', nextVal, currVal, currentObj)\n      return lastValid;\n    } else if (nextVal == null && currVal == null && lastValid == undefined) {\n      // console.log('nextVal == null && currVal == null && lastValid == undefined', nextVal, currVal, lastValid);\n      lastValid = dataArraySetPoint;\n      //console.log('i am now defined', lastValid);\n      return lastValid;\n    } else {\n      // console.log('lastValid, nextVal, currVal, currentObj', lastValid, nextVal, currVal, currentObj)\n      lastValid = lastValid;\n      return lastValid;\n    }\n  }\n\n  function getYOYdiffValue(currYear, prevYear) {\n    return currYear == null || prevYear == null ? null : currYear - prevYear;\n  }\n  function getYOYdiffColor(YOY) {\n    if (YOY < 0) {\n      return \"YOYred\";\n    } else {\n      return \"YOYgreen\";\n    }\n  }\n\n  // Math.min will assign null values to 0 so need to filter out null if want min to be actual min,\n  // but it may look better to have an actual zero\n  function getMaxVal(myData, yLineOne, yLineTwo) {\n    let tempArr = [];\n    for (let i = 0; i < myData.length; i++) {\n      tempArr.push(myData[i][yLineOne], myData[i][yLineTwo]);\n      if (myData[i][yLineOne] !== null) tempArr.push(myData[i][yLineOne]);\n      if (myData[i][yLineTwo] !== null) tempArr.push(myData[i][yLineTwo]);\n    }\n    let temp2018max = tempArr.reduce((a, b) => Math.max(a, b));\n    let temp2018min = tempArr.reduce((a, b) => Math.min(a, b));\n    return { min: temp2018min, max: temp2018max };\n  }\n\n  function createChart(\n    chartData,\n    yLineOne,\n    yLineTwo,\n    numberFormatFn,\n    xAxisKeyName\n  ) {\n    let lastValidDataCurrentYear;\n    //let lastValidDataPreviousYear;\n    let YOYdiff;\n    containerElement = chart.current;\n    containerElement.innerHTML = \"\";\n    let tempMinMax = getMaxVal(chartData, yLineOne, yLineTwo);\n    let minVal = tempMinMax.min;\n    let maxVal = tempMinMax.max;\n    let currentMonth = getCurrentMonth();\n    let margin = { top: 20, right: 60, bottom: 0, left: 10 };\n    //////////////////////// Establish the reused vals and the bound functions  ////////////////////////\n    let width = Number.isNaN(\n      parseInt(d3.select(containerElement).style(\"width\"))\n    )\n      ? 0\n      : parseInt(d3.select(containerElement).style(\"width\")) -\n        margin.left -\n        margin.right;\n    let height = 220 - margin.top;\n    // translates a function to d3, passes angular scope into d3\n    // tell format func that the function with \"this\" should be asscoiated with the currect ts component\n\n    //let bisectDate = d3.bisector((d) => timeFormat(d[xAxisKeyName])).left; // this would return the month, but we aren't using it right now\n    let justBisect = d3.bisector(d => d[xAxisKeyName]).left;\n\n    //////////////////////// Set the scales  ////////////////////////\n\n    let x = d3.scaleLinear().range([0, width]);\n\n    let y = d3.scaleLinear().range([height, 0]);\n\n    //////////////////////// Set the axis ////////////////////////\n\n    let xAxis = d3\n      .axisBottom(x)\n      .ticks(chartData.length)\n      .tickFormat(function(d) {\n        // console.log(d);\n        return timeFormat(d);\n      })\n      .tickPadding(6);\n\n    let yAxis = d3\n      .axisRight(y)\n      .tickFormat(d => {\n        return numberFormatFn(d);\n      })\n      // .ticks(6)\n      .tickPadding(6);\n\n    //////////////////////// Define the lines and/or areas  ////////////////////////\n\n    const lineOne = d3\n      .line()\n      .defined(function(d) {\n        if (d[yLineOne] !== null) {\n          return d[yLineOne];\n        }\n      })\n      .x(d => x(d[xAxisKeyName]))\n      .y(d => y(d[yLineOne]));\n\n    const lineTwo = d3\n      .line()\n      .defined(function(d) {\n        if (d[yLineTwo] !== null) {\n          return d[yLineTwo];\n        }\n      })\n      .x(d => x(d[xAxisKeyName]))\n      .y(d => y(d[yLineTwo]));\n\n    //////////////////////// Define parent SVG  ////////////////////////\n\n    const CVsvg = d3\n      .select(containerElement)\n      .append(\"svg\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", height + margin.top + margin.bottom + 40)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    //////////////////////// Loop through / sort data  ////////////////////////\n\n    chartData.forEach(d => {\n      d = +d;\n    });\n\n    chartData.sort((a, b) => a[xAxisKeyName] - b[xAxisKeyName]);\n\n    //////////////////////// Set the domains  ////////////////////////\n\n    x.domain([\n      parseInt(d3.min(chartData, d => d[xAxisKeyName])),\n      parseInt(d3.max(chartData, d => d[xAxisKeyName]))\n    ]);\n    y.domain([minVal, maxVal]);\n\n    //////////////////////// Append the lines / areas  ////////////////////////\n\n    CVsvg.append(\"path\")\n      .datum(chartData)\n      .attr(\"class\", \"lineOne line\")\n      .attr(\"d\", lineOne)\n      .transition()\n      .duration(500);\n    CVsvg.append(\"path\")\n      .datum(chartData)\n      .attr(\"class\", \"lineTwo line\")\n      .attr(\"d\", lineTwo)\n      .transition()\n      .duration(500);\n\n    ///////////////////////  Add the X & Y Axis  ////////////////////////\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n      .attr(\"transform\", \"translate(\" + (width + 6) + \",0)\")\n      .call(yAxis);\n\n    CVsvg.append(\"g\")\n      .attr(\"class\", \"xAxis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    //////////////////////// Add Line Tracing on mouse and markers   ////////////////////////\n\n    const lineTrace = CVsvg.append(\"line\")\n      .attr(\"class\", \"mouse-line x\")\n      .style(\"opacity\", 0.5)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", height);\n\n    const marker = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n\n    marker\n      .append(\"circle\")\n      .attr(\"class\", \"line-marker lineOne\")\n      .transition()\n      .duration(500)\n      .attr(\"r\", 5);\n\n    const marker2 = CVsvg.append(\"g\").attr(\"class\", \"marker\");\n    marker2\n      .append(\"circle\")\n      .attr(\"class\", \"line-marker lineTwo\")\n      .transition()\n      .duration(500)\n      .attr(\"r\", 5);\n\n    //////////////////////// Tooltip  ////////////////////////\n\n    const tooltipDiv = d3\n      .select(containerElement)\n      .append(\"div\")\n      .attr(\"class\", \"tooltipDiv\");\n    const dateContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    dateContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"Month\");\n    const dateText = dateContainer.append(\"div\").attr(\"class\", \"value-text\");\n    const lineOneTextContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    lineOneTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"2018\");\n    lineOneTextContainer.append(\"div\").attr(\"class\", \"dot lineOne\");\n\n    const lineOneText = lineOneTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"value-text\");\n    const lineTwoTextContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    lineTwoTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"2019\");\n    lineTwoTextContainer.append(\"div\").attr(\"class\", \"dot lineTwo\");\n\n    const lineTwoText = lineTwoTextContainer\n      .append(\"div\")\n      .attr(\"class\", \"value-text\");\n    const YOYContainer = tooltipDiv\n      .append(\"div\")\n      .attr(\"class\", \"text-container\");\n    YOYContainer.append(\"div\")\n      .attr(\"class\", \"label-style mr-1\")\n      .text(\"YOY\");\n    const YOYText = YOYContainer.append(\"div\");\n\n    //////////////////////// Add Rect to Capture Mouse Movements  ////////////////////////\n\n    CVsvg.append(\"rect\")\n      .on(\"mouseover\", () => {\n        lineTrace.style(\"display\", null);\n        d3.select(\".mouse-line\").style(\"opacity\", \"1\");\n        d3.selectAll(\".mouse-per-line .line-marker\").style(\"opacity\", \"1\");\n      })\n      .on(\"mousemove\", () => {\n        let xy = d3.mouse(d3.event.currentTarget);\n        // let x0 = timeFormat(x.invert(xy[0]));\n        // let mouseIndex = bisectDate(chartData, x0, 1);\n        let x0 = x.invert(xy[0]);\n        let mouseIndex = justBisect(chartData, x0, 1);\n        let d0 = chartData[mouseIndex - 1];\n        let d1 = chartData[mouseIndex];\n        // lastValidDataPreviousYear = findlastValidDataCurrentYear(d0[yLineOne], d1[yLineOne], d0, lastValidDataPreviousYear, chartData[currentMonth - 1]);\n        // console.log('i am x0, d0[xAxisKeyName], d1,', x0, d0[xAxisKeyName], d1)\n        lastValidDataCurrentYear = findlastValidDataCurrentYear(\n          d0[yLineTwo],\n          d1[yLineTwo],\n          d0,\n          lastValidDataCurrentYear,\n          chartData[currentMonth - 1]\n        );\n        // console.log('i am x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear', x0, d0[xAxisKeyName], d1, lastValidDataCurrentYear)\n        let d;\n        if (d1 !== undefined) {\n          d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n          // d = x0 - d0[xAxisKeyName] > d1[xAxisKeyName] - x0 ? d1 : d0;\n        } else {\n          d = d0;\n        }\n\n        lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n        marker.attr(\n          \"transform\",\n          \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n        );\n        // marker.attr('transform', d[yLineOne] !== null ? 'translate(' + x(d[xAxisKeyName]) + ',' + y(d[yLineOne]) + ')' : 'translate(' + x(lastValidDataPreviousYear[xAxisKeyName]) + ',' + y(lastValidDataPreviousYear[yLineOne]) + ')');\n\n        marker2.attr(\n          \"transform\",\n          d[yLineTwo] !== null\n            ? \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n            : \"translate(\" +\n                x(lastValidDataCurrentYear[xAxisKeyName]) +\n                \",\" +\n                y(lastValidDataCurrentYear[yLineTwo]) +\n                \")\"\n        );\n\n        YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n        let YOYdiffColor = getYOYdiffColor(YOYdiff);\n        // (d[yLineTwo] == null) ? YOYdiff = null : YOYdiff = numberFormatFn(d[yLineTwo] - d[yLineOne]);\n        let l1text = d[yLineOne] !== null ? numberFormatFn(d[yLineOne]) : \"\";\n        let l2text = d[yLineTwo] !== null ? numberFormatFn(d[yLineTwo]) : \"\";\n        YOYdiff = YOYdiff !== null ? numberFormatFn(YOYdiff) : \"\";\n        lineOneText.text(l1text);\n        lineTwoText.text(l2text);\n        dateText.text(timeFormat(d[xAxisKeyName]));\n        YOYText.text(YOYdiff);\n        YOYText.attr(\"class\", YOYdiffColor);\n\n        d3.select(\".mouse-line.x\").attr(\"y2\", height);\n      })\n      .attr(\"class\", \"totalRect\")\n      .attr(\"fill\", \"none\")\n      .attr(\"x\", 0)\n      .attr(\"pointer-events\", \"all\")\n      .attr(\"width\", width)\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"height\", height)\n      .transition()\n      .duration(500);\n\n    //////////////////////// Set the data on load ////////////////////////\n\n    // d3.set().add(chartData[currentMonth - 1]);\n    // let d = chartData[currentMonth - 1];\n    // lineTrace.attr(\"transform\", \"translate(\" + x(d[xAxisKeyName]) + \",0)\");\n\n    // marker.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineOne]) + \")\"\n    // );\n    // marker2.attr(\n    //   \"transform\",\n    //   \"translate(\" + x(d[xAxisKeyName]) + \",\" + y(d[yLineTwo]) + \")\"\n    // );\n\n    // YOYdiff = getYOYdiffValue(d[yLineTwo], d[yLineOne], YOYdiff);\n    // let YOYdiffColor = getYOYdiffColor(YOYdiff);\n\n    // lineOneText.text(numberFormatFn(d[yLineOne]));\n    // lineTwoText.text(numberFormatFn(d[yLineTwo]));\n    // dateText.text(timeFormat(d[xAxisKeyName]));\n    // YOYText.text(numberFormatFn(YOYdiff));\n    // YOYText.attr(\"class\", YOYdiffColor);\n\n    // d3.select(\".mouse-line.x\").attr(\"y2\", height);\n  }\n\n  useEffect(() => {\n    createChart(chartData, \"y2018\", \"y2019\", numberFormatFn, \"month\");\n  }, []);\n\n  return <div ref={chart}></div>;\n}\n"]},"metadata":{},"sourceType":"module"}