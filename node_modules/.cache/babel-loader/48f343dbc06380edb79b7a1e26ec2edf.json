{"ast":null,"code":"import _slicedToArray from\"/Users/amandainnis/amandainnis.github.io/amandainnis.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";// import portfolioData from \"./data/portfolioData\";\nimport AlertingCard from\"../alerting/AlertingCard\";import AlphaCapCard from\"../alphaCapture/AlphaCapCard\";import InsightAnalyticsCard from\"../insightAnalytics/InsightAnalyticsCard\";import CRBCard from\"../crb/CRBCard\";import Pie from\"../reusable/Pie\";import*as DataHandler from\"../../data/DataHandler\";import Icons from\"../icons-card/Icons\";import useDebounce from\"../reusable/useDebounce\";// import PortfolioCard from \"../portfolio-card\";\nimport*as Common from\"../reusable/common\";import LineChartCV from\"../reusable/LineChartCV\";import LineChart from\"../reusable/LineChart\";import LineChartIndexOf from\"../reusable/LineChartIndexOf\";function Home(props){// somehow without this use state on scroll amount, the component does not re render the values of the refs\n// but inside useEffect, the changed state cannot be accessed\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),scrollAmount=_useState2[0],setScrollAmount=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alertingActive=_useState4[0],setAlertingActive=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isVisible=_useState6[0],setIsVisible=_useState6[1];var bodyRef=useRef();var alertingRef=useRef();var changeMeRef=useRef();var scrollAmountRef=useRef(0);var visibleAreaRef=useRef(0);var bodyOffsetRef=useRef(0);var clientHeightRef=useRef(0);var scrollHeightRef=useRef(0);var alertingOffsetRef=useRef(0);function setScrollingConstants(){var scrollHeight=bodyRef.current.scrollHeight;var clientHeight=bodyRef.current.clientHeight;var bodyOffset=bodyRef.current.offsetTop;var visibleArea=bodyRef.current.clientHeight+bodyRef.current.offsetTop;var scrollAmount=bodyRef.current.scrollTop;var alertingOffset=alertingRef.current.offsetTop;scrollHeightRef.current=scrollHeight;clientHeightRef.current=clientHeight;bodyOffsetRef.current=bodyOffset;visibleAreaRef.current=visibleArea;setScrollAmount(scrollAmount);scrollAmountRef.current=scrollAmount;alertingOffsetRef.current=alertingOffset;}function setChangeClass(myRef,myClass,myTimeout){var changeMe=myRef;// this just adds the class no matter what\n// console.log(\"outside changeme setTimeout\");\nvar myChangeClassTimeout=setTimeout(function(){changeMe.current.classList.remove(myClass);console.log(\"inside changeme setTimeout\");},myTimeout);if(changeMe.current.classList.contains(myClass)){console.log(\"clear timeout\");clearTimeout(myChangeClassTimeout);}changeMe.current.classList.add(myClass);}function setActiveAlerting(cardOffsetFromState,visibleArea,scrollAmount,myTimeout){// this tests if the thing is in view\n// if (scrollAmount > cardOffsetFromState - visibleArea) {\n//   // passes it to child\n//   const myAwesomeTimeout = setTimeout(() => {\n//     // console.log(\"i timed out\");\n//     setAlertingActive(false);\n//   }, myTimeout);\n//   setAlertingActive(prevState => {\n//     console.log(prevState);\n//     if (prevState === true) {\n//       // console.log(\"clear timeout\");\n//       clearTimeout(myAwesomeTimeout);\n//     }\n//     return true;\n//   });\n// }\nsetAlertingActive(false);}var prevScrollAmountRef=useRef(0);var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),iAmScrollingDown=_useState8[0],setIAmScrollingDown=_useState8[1];var handleScroll=function handleScroll(){// https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\nscrollAmountRef.current=bodyRef.current.scrollTop;setScrollAmount(bodyRef.current.scrollTop);console.log(bodyRef.current.scrollTop,scrollAmountRef.current);if(prevScrollAmountRef.current<scrollAmountRef.current&&!iAmScrollingDown){setIAmScrollingDown(true);// console.log('iAmScrollingDown', iAmScrollingDown)\n}else if(prevScrollAmountRef.current>scrollAmountRef.current&&iAmScrollingDown){setIAmScrollingDown(false);// console.log('iAmScrollingDown', iAmScrollingDown)\n}// console.log('prevScrollAmountRef.current + scroll amount', prevScrollAmountRef.current, scrollAmountRef.current)\nprevScrollAmountRef.current=scrollAmountRef.current;window.requestAnimationFrame(function(){setChangeClass(changeMeRef,\"blinkDivUpPlain\",1000);// console.log({ alertingOffset });\nsetActiveAlerting(alertingOffsetRef.current,visibleAreaRef.current,scrollAmountRef.current,5000);});};// function handleScrollBetter() {\n//   Common.debounce(handleScroll(), 500);\n// }\nuseEffect(function(){console.log(\"mounted in home\");setScrollingConstants();// bodyRef.current.addEventListener(\"scroll\", handleScroll);\n// return () => window.removeEventListener(\"scroll\", handleScroll);\n},[iAmScrollingDown]);function handleResize(){// https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n// When we receive a scroll event, schedule an update.\n// If we receive many updates within a frame, we'll only publish the latest value.\n// scheduleUpdate({ x: e.clientX, y: e.clientY });\nsetScrollingConstants();}function handleResizeBetter(){Common.debounce(handleResize(),350);}useEffect(function(){console.log(\"i am resizing\");setScrollingConstants();},[props.myResize]);// using this to handleRouting\n// static function getDerivedStateFromProps(nextProps, prevState) {\n//   // console.log(nextProps, prevState);\n//   if (nextProps.isVisible !== prevState.isVisible) {\n//     return { isVisible: nextProps.isVisible };\n//   } else return null;\n// }\nfunction dollarFormatFn(d){return\"$\"+d;}function percentFormatFn(d){return Math.round(d*10000)/100+\"%\";}return React.createElement(React.Fragment,null,isVisible&&React.createElement(\"div\",{// onScroll={handleScrollBetter}\nref:bodyRef},React.createElement(\"div\",{className:\"headline\"},\"Hi, I'm Amanda Innis, a designer & creative technologist\"),React.createElement(\"div\",{className:\"card-wrapper\"},React.createElement(\"h1\",{className:\"wrapper-padding section-header\"},\"Projects\"),React.createElement(\"div\",{className:\"portfolio-container\"},React.createElement(\"div\",{className:\"portfolio-card-wrapper\"},React.createElement(InsightAnalyticsCard,null)),React.createElement(\"div\",{className:\"portfolio-card-wrapper\"},React.createElement(AlphaCapCard,{resize:props.myResize})),React.createElement(\"div\",{className:\"portfolio-card-wrapper\"},React.createElement(CRBCard,null)),React.createElement(\"div\",{ref:alertingRef,className:\"portfolio-card-wrapper\"},React.createElement(AlertingCard,{active:alertingActive})),React.createElement(\"div\",{className:\"portfolio-card-wrapper\"},React.createElement(Icons,null))))));}export default Home;","map":{"version":3,"sources":["/Users/amandainnis/amandainnis.github.io/amandainnis.github.io/src/components/home/Home.js"],"names":["React","useState","useEffect","useRef","AlertingCard","AlphaCapCard","InsightAnalyticsCard","CRBCard","Pie","DataHandler","Icons","useDebounce","Common","LineChartCV","LineChart","LineChartIndexOf","Home","props","scrollAmount","setScrollAmount","alertingActive","setAlertingActive","isVisible","setIsVisible","bodyRef","alertingRef","changeMeRef","scrollAmountRef","visibleAreaRef","bodyOffsetRef","clientHeightRef","scrollHeightRef","alertingOffsetRef","setScrollingConstants","scrollHeight","current","clientHeight","bodyOffset","offsetTop","visibleArea","scrollTop","alertingOffset","setChangeClass","myRef","myClass","myTimeout","changeMe","myChangeClassTimeout","setTimeout","classList","remove","console","log","contains","clearTimeout","add","setActiveAlerting","cardOffsetFromState","prevScrollAmountRef","iAmScrollingDown","setIAmScrollingDown","handleScroll","window","requestAnimationFrame","handleResize","handleResizeBetter","debounce","myResize","dollarFormatFn","d","percentFormatFn","Math","round"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n// import portfolioData from \"./data/portfolioData\";\nimport AlertingCard from \"../alerting/AlertingCard\";\nimport AlphaCapCard from \"../alphaCapture/AlphaCapCard\";\nimport InsightAnalyticsCard from \"../insightAnalytics/InsightAnalyticsCard\";\nimport CRBCard from \"../crb/CRBCard\";\nimport Pie from \"../reusable/Pie\";\nimport * as DataHandler from \"../../data/DataHandler\";\nimport Icons from \"../icons-card/Icons\";\n\nimport useDebounce from \"../reusable/useDebounce\";\n\n// import PortfolioCard from \"../portfolio-card\";\nimport * as Common from \"../reusable/common\";\n\nimport LineChartCV from \"../reusable/LineChartCV\";\nimport LineChart from \"../reusable/LineChart\";\nimport LineChartIndexOf from \"../reusable/LineChartIndexOf\";\n\nfunction Home(props) {\n  // somehow without this use state on scroll amount, the component does not re render the values of the refs\n  // but inside useEffect, the changed state cannot be accessed\n  const [scrollAmount, setScrollAmount] = useState(0);\n  const [alertingActive, setAlertingActive] = useState(null);\n  const [isVisible, setIsVisible] = useState(true);\n\n  const bodyRef = useRef();\n  const alertingRef = useRef();\n  const changeMeRef = useRef();\n  const scrollAmountRef = useRef(0);\n  const visibleAreaRef = useRef(0);\n  const bodyOffsetRef = useRef(0);\n  const clientHeightRef = useRef(0);\n  const scrollHeightRef = useRef(0);\n  const alertingOffsetRef = useRef(0);\n\n  function setScrollingConstants() {\n    const scrollHeight = bodyRef.current.scrollHeight;\n    const clientHeight = bodyRef.current.clientHeight;\n    const bodyOffset = bodyRef.current.offsetTop;\n    const visibleArea =\n      bodyRef.current.clientHeight + bodyRef.current.offsetTop;\n    const scrollAmount = bodyRef.current.scrollTop;\n    const alertingOffset = alertingRef.current.offsetTop;\n\n    scrollHeightRef.current = scrollHeight;\n    clientHeightRef.current = clientHeight;\n    bodyOffsetRef.current = bodyOffset;\n    visibleAreaRef.current = visibleArea;\n    setScrollAmount(scrollAmount);\n    scrollAmountRef.current = scrollAmount;\n\n    alertingOffsetRef.current = alertingOffset;\n  }\n  function setChangeClass(myRef, myClass, myTimeout) {\n    const changeMe = myRef;\n    // this just adds the class no matter what\n    // console.log(\"outside changeme setTimeout\");\n    const myChangeClassTimeout = setTimeout(() => {\n      changeMe.current.classList.remove(myClass);\n      console.log(\"inside changeme setTimeout\");\n    }, myTimeout);\n    if (changeMe.current.classList.contains(myClass)) {\n      console.log(\"clear timeout\");\n      clearTimeout(myChangeClassTimeout);\n    }\n    changeMe.current.classList.add(myClass);\n  }\n\n  function setActiveAlerting(\n    cardOffsetFromState,\n    visibleArea,\n    scrollAmount,\n    myTimeout\n  ) {\n    // this tests if the thing is in view\n    // if (scrollAmount > cardOffsetFromState - visibleArea) {\n    //   // passes it to child\n    //   const myAwesomeTimeout = setTimeout(() => {\n    //     // console.log(\"i timed out\");\n    //     setAlertingActive(false);\n    //   }, myTimeout);\n    //   setAlertingActive(prevState => {\n    //     console.log(prevState);\n    //     if (prevState === true) {\n    //       // console.log(\"clear timeout\");\n    //       clearTimeout(myAwesomeTimeout);\n    //     }\n    //     return true;\n    //   });\n    // }\n    setAlertingActive(false);\n  }\n\n  const prevScrollAmountRef = useRef(0);\n  const [iAmScrollingDown, setIAmScrollingDown] = useState(false);\n\n  const handleScroll = () => {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    scrollAmountRef.current = bodyRef.current.scrollTop;\n    setScrollAmount(bodyRef.current.scrollTop);\n\n    console.log(bodyRef.current.scrollTop, scrollAmountRef.current);\n    if (\n      prevScrollAmountRef.current < scrollAmountRef.current &&\n      !iAmScrollingDown\n    ) {\n      setIAmScrollingDown(true);\n      // console.log('iAmScrollingDown', iAmScrollingDown)\n    } else if (\n      prevScrollAmountRef.current > scrollAmountRef.current &&\n      iAmScrollingDown\n    ) {\n      setIAmScrollingDown(false);\n      // console.log('iAmScrollingDown', iAmScrollingDown)\n    }\n    // console.log('prevScrollAmountRef.current + scroll amount', prevScrollAmountRef.current, scrollAmountRef.current)\n    prevScrollAmountRef.current = scrollAmountRef.current;\n\n    window.requestAnimationFrame(() => {\n      setChangeClass(changeMeRef, \"blinkDivUpPlain\", 1000);\n      // console.log({ alertingOffset });\n      setActiveAlerting(\n        alertingOffsetRef.current,\n        visibleAreaRef.current,\n        scrollAmountRef.current,\n        5000\n      );\n    });\n  };\n\n  // function handleScrollBetter() {\n  //   Common.debounce(handleScroll(), 500);\n  // }\n  useEffect(() => {\n    console.log(\"mounted in home\");\n    setScrollingConstants();\n    // bodyRef.current.addEventListener(\"scroll\", handleScroll);\n    // return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [iAmScrollingDown]);\n  function handleResize() {\n    // https://reactjs.org/docs/faq-functions.html#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\n    // When we receive a scroll event, schedule an update.\n    // If we receive many updates within a frame, we'll only publish the latest value.\n    // scheduleUpdate({ x: e.clientX, y: e.clientY });\n    setScrollingConstants();\n  }\n  function handleResizeBetter() {\n    Common.debounce(handleResize(), 350);\n  }\n\n  useEffect(() => {\n    console.log(\"i am resizing\");\n    setScrollingConstants();\n  }, [props.myResize]);\n  // using this to handleRouting\n  // static function getDerivedStateFromProps(nextProps, prevState) {\n  //   // console.log(nextProps, prevState);\n  //   if (nextProps.isVisible !== prevState.isVisible) {\n  //     return { isVisible: nextProps.isVisible };\n  //   } else return null;\n  // }\n  function dollarFormatFn(d) {\n    return \"$\" + d;\n  }\n  function percentFormatFn(d) {\n    return Math.round(d * 10000) / 100 + \"%\";\n  }\n  return (\n    <>\n      {isVisible && (\n        <div\n          // onScroll={handleScrollBetter}\n          ref={bodyRef}\n        >\n          <div className=\"headline\">\n            Hi, I'm Amanda Innis, a designer &amp; creative technologist\n            {/* <span className=\"asterisk\">*</span> */}\n          </div>\n          {/* <div className=\"wrapper-padding asterisk-explanation\">\n            <div className=\"asterisk\">*</div>\n            <div className=\"explanation\">CSS</div>\n          </div> */}\n          {/* <div className=\"wrapper-padding\">\n            <Pie />\n          </div> */}\n\n          <div className=\"card-wrapper\">\n            {/* <div className=\"wrapper-padding constants-info\">\n              <ul>\n                <li>\n                  window to wrapper\n                  <span>{bodyOffsetRef.current}</span>\n                </li>\n                <li>\n                  height of wrapper\n                  <span>{clientHeightRef.current}</span>\n                </li>\n\n                <li>\n                  height visible\n                  <span>{visibleAreaRef.current}</span>\n                </li>\n                <li>\n                  height of contents\n                  <span>{scrollHeightRef.current}</span>\n                </li>\n                <li>\n                  cards offset\n                  <span>{alertingOffsetRef.current}</span>\n                </li>\n                <li>\n                  <h4 className=\"mt-2\">Math</h4>\n                </li>\n\n                <li>\n                  cards offset - height visible\n                  <span>\n                    {alertingOffsetRef.current - visibleAreaRef.current}\n                  </span>\n                </li>\n                <li>\n                  <h4 className=\"mt-2\">Change</h4>\n                </li>\n\n                <li>\n                  amount scrolled\n                  <span ref={changeMeRef}>{scrollAmountRef.current}</span>\n                  <div>\n                    the debounce article\n                    https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\n                  </div>\n                </li>\n              </ul>\n            </div> */}\n            <h1 className=\"wrapper-padding section-header\">Projects</h1>\n            <div className=\"portfolio-container\">\n              <div className=\"portfolio-card-wrapper\">\n                <InsightAnalyticsCard />\n              </div>\n              <div className=\"portfolio-card-wrapper\">\n                <AlphaCapCard resize={props.myResize} />\n              </div>\n              <div className=\"portfolio-card-wrapper\">\n                <CRBCard />\n              </div>\n              <div ref={alertingRef} className=\"portfolio-card-wrapper\">\n                <AlertingCard active={alertingActive} />\n              </div>\n              <div className=\"portfolio-card-wrapper\">\n                <Icons />\n              </div>\n              {/* jon added the squiggly so it immediately renders */}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}