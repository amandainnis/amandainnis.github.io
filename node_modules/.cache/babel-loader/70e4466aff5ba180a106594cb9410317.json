{"ast":null,"code":"var _jsxFileName = \"/Users/amandainnis/ReactProjects/board-app/src/App.js\";\nimport React from \"react\";\nimport Game from \"./components/game\";\nimport \"./App.scss\";\nimport Nav from \"./components/nav\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"light\"\n    };\n    this.setTheme = this.setTheme.bind(this);\n  }\n\n  setTheme() {\n    // this.theme$.next(theme);\n    const theme = this.state.theme === \"light\" ? \"dark\" : \"light\";\n    console.log(theme); // console.log(this.document.getElementByTagName(\"html\"));\n    // document.documentElement.classList.add(\"color-theme-in-transition\");\n\n    this.setState({\n      theme\n    });\n    localStorage.setItem(\"theme\", theme); // this.document.querySelector(\"html\").className = \"theme-\" + theme;\n    // if (theme === \"light\") {\n    //   this.generateTheme(this.light);\n    // } else {\n    //   this.generateTheme(this.dark);\n    // }\n  }\n\n  render() {\n    const status = \"\".concat(this.state.theme);\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, status), React.createElement(Nav, {\n      setTheme: this.setTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Board Game\"), React.createElement(Game, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amandainnis/ReactProjects/board-app/src/App.js"],"names":["React","Game","Nav","App","Component","constructor","props","state","theme","setTheme","bind","console","log","setState","localStorage","setItem","render","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AACDD,EAAAA,QAAQ,GAAG;AACT;AACA,UAAMD,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,KAAqB,OAArB,GAA+B,MAA/B,GAAwC,OAAtD;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAHS,CAIT;AACA;;AACA,SAAKK,QAAL,CAAc;AAAEL,MAAAA;AAAF,KAAd;AACAM,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,KAA9B,EAPS,CAQT;AACA;AACA;AACA;AACA;AACA;AACD;;AACDQ,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,aAAM,KAAKV,KAAL,CAAWC,KAAjB,CAAZ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBS,MAAzB,CADF,EAEE,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,KAAKR,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAjC+B;;AAoClC,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport Game from \"./components/game\";\nimport \"./App.scss\";\nimport Nav from \"./components/nav\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"light\"\n    };\n    this.setTheme = this.setTheme.bind(this);\n  }\n  setTheme() {\n    // this.theme$.next(theme);\n    const theme = this.state.theme === \"light\" ? \"dark\" : \"light\";\n    console.log(theme);\n    // console.log(this.document.getElementByTagName(\"html\"));\n    // document.documentElement.classList.add(\"color-theme-in-transition\");\n    this.setState({ theme });\n    localStorage.setItem(\"theme\", theme);\n    // this.document.querySelector(\"html\").className = \"theme-\" + theme;\n    // if (theme === \"light\") {\n    //   this.generateTheme(this.light);\n    // } else {\n    //   this.generateTheme(this.dark);\n    // }\n  }\n  render() {\n    const status = `${this.state.theme}`;\n    return (\n      <div className=\"app\">\n        <div className=\"status\">{status}</div>\n        <Nav setTheme={this.setTheme} />\n        <h1>Board Game</h1>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}