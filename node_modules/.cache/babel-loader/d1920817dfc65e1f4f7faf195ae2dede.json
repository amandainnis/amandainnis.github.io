{"ast":null,"code":"var util = require('util'),\n    color_map = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'],\n    color_weights = [[0, 0, 0], [255, 0, 0], [0, 255, 0], [255, 255, 0], [0, 0, 255], [255, 0, 255], [0, 255, 255], [255, 255, 255]],\n    reset = '\\x1b[30m';\n\nfunction hex_to_rgb(hex) {\n  var base_16;\n\n  if (hex.indexOf('#') === 0) {\n    hex = hex.slice(1);\n  }\n\n  base_16 = parseInt(hex, 16);\n\n  if (isNaN(base_16)) {\n    base_16 = 0;\n  }\n\n  return [base_16 >> 16 & 255, base_16 >> 8 & 255, base_16 & 255];\n}\n\nfunction get_fitness(source, target) {\n  return Math.abs(source - target);\n}\n\nfunction get_closest_color(red, green, blue) {\n  var current_color,\n      best_color = null,\n      current_fit,\n      best_fit = 765,\n      index = color_map.length;\n\n  while (index--) {\n    current_color = color_weights[index];\n    current_fit = get_fitness(red, current_color[0]) + get_fitness(green, current_color[1]) + get_fitness(blue, current_color[2]);\n\n    if (current_fit <= best_fit) {\n      best_fit = current_fit;\n      best_color = color_map[index];\n    }\n  }\n\n  return best_color;\n}\n\nfunction generate(color) {\n  var resolved_color, index;\n\n  function colorize(text) {\n    if (typeof text !== 'string') {\n      text = util.format(text);\n    }\n\n    return resolved_color + text + reset;\n  }\n\n  index = color_map.indexOf(color);\n\n  if (index !== -1) {\n    resolved_color = '\\x1b[3' + index + 'm';\n  } else {\n    resolved_color = reset;\n  }\n\n  return colorize;\n}\n\nfunction create_color(color, green, blue) {\n  var index, resolved_color;\n\n  if (typeof color === 'string') {\n    if (color[0] === '#') {\n      resolved_color = get_closest_color.apply(null, hex_to_rgb(color));\n    }\n  } else if (typeof color === 'number') {\n    resolved_color = get_closest_color(color, green, blue);\n  } else {\n    resolved_color = reset;\n  }\n\n  return generate(resolved_color);\n}\n\ncolor_map.map(function (item) {\n  create_color[item] = generate(item);\n});\nmodule.exports = create_color;","map":null,"metadata":{},"sourceType":"script"}